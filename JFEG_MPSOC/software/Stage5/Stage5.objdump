
Stage5.elf:     file format elf32-littlenios2
Stage5.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x06aaac24

Program Header:
    LOAD off    0x00000000 vaddr 0x08001000 paddr 0x06aaa270 align 2**12
         filesz 0x000009b4 memsz 0x000009b4 flags r-x
    LOAD off    0x00000c24 vaddr 0x06aaac24 paddr 0x06aaac24 align 2**12
         filesz 0x0000e058 memsz 0x0000e058 flags r-x
    LOAD off    0x0000ec7c vaddr 0x06ab8c7c paddr 0x06aba748 align 2**12
         filesz 0x00001acc memsz 0x00001acc flags rw-
    LOAD off    0x00011214 vaddr 0x06abc214 paddr 0x06abc214 align 2**12
         filesz 0x00000000 memsz 0x000002ec flags rw-
    LOAD off    0x00010800 vaddr 0x08001800 paddr 0x08001800 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  08001800  08001800  00010800  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  08001820  06aaaa90  00000820  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000dce4  06aaac24  06aaac24  00000c24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000374  06ab8908  06ab8908  0000e908  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001acc  06ab8c7c  06aba748  0000ec7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000002ec  06abc214  06abc214  00011214  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00010820  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000e38  00000000  00000000  00010848  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000017db  00000000  00000000  00011680  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002b43c  00000000  00000000  00012e5b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008da9  00000000  00000000  0003e297  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00015f61  00000000  00000000  00047040  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001d54  00000000  00000000  0005cfa4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000257c  00000000  00000000  0005ecf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000ce20  00000000  00000000  00061274  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000020  00000000  00000000  0006e094  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000990  00000000  00000000  0006e0b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00072085  2**0
                  CONTENTS, READONLY
 18 .cpu          00000005  00000000  00000000  00072088  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0007208d  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0007208e  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0007208f  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0007209a  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  000720a5  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000003  00000000  00000000  000720b0  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000034  00000000  00000000  000720b3  2**0
                  CONTENTS, READONLY
 26 .jdi          000190dd  00000000  00000000  000720e7  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00164bd4  00000000  00000000  0008b1c4  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08001800 l    d  .entry	00000000 .entry
08001820 l    d  .exceptions	00000000 .exceptions
06aaac24 l    d  .text	00000000 .text
06ab8908 l    d  .rodata	00000000 .rodata
06ab8c7c l    d  .rwdata	00000000 .rwdata
06abc214 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
06aaac5c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
06aab248 l     F .text	00000058 std
06aab354 l     F .text	00000008 __fp_lock
06aab35c l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
06ab8c7c l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 refill.c
06aacfd4 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 timesr.c
00000000 l    df *ABS*	00000000 vfprintf.c
06aad1b4 l     F .text	00000058 __sprint_r
06ab89a2 l     O .rodata	00000010 blanks.3452
06ab8992 l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
06aaf3dc l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 dtoa.c
06aaf600 l     F .text	00000218 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
06aba6d4 l     O .rwdata	00000004 charset
06ab89d4 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
06ab8b1c l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 dp-bit.c
06ab3b58 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
06ab4c84 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
06ab54f8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
06ab5558 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
06ab5584 l     F .text	00000040 alt_sim_halt
00000000 l    df *ABS*	00000000 alt_fstat.c
06ab56b8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
06ab57d8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
06ab58b8 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
06ab5a14 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
06ab5b20 l     F .text	000000dc alt_file_locked
06ab5d84 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_read.c
06ab5f04 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
06aba6f0 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
06ab6114 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
06ab6294 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
06ab9638 l     O .rwdata	00001060 jtag_uart_5
06aba698 l     O .rwdata	00000028 altera_hostfs
06ab6390 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_fifo_util.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
06ab6b30 l     F .text	00000228 altera_avalon_jtag_uart_irq
06ab6d58 l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
06ab73d4 l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_hostfs.c
06aba6f4 l     O .rwdata	00000004 hcinfo.2234
06aba700 l     O .rwdata	00000004 hcinfo.2276
06aba70c l     O .rwdata	00000004 hcinfo.2289
06aba718 l     O .rwdata	00000004 hcinfo.2311
06aba724 l     O .rwdata	00000004 hcinfo.2333
06aba730 l     O .rwdata	00000004 hcinfo.2368
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
06ab7c98 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_fs_reg.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
06ab83b8 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
06ab1b24 g     F .text	00000094 _mprec_log10
06ab1c10 g     F .text	00000088 __any_on
06ab1308 g     F .text	00000070 _isatty_r
06ab8af4 g     O .rodata	00000028 __mprec_tinytens
06ab5a74 g     F .text	0000006c alt_main
06abc270 g     O .bss	00000100 alt_irq
06ab143c g     F .text	00000078 _lseek_r
06ab6680 g     F .text	00000060 altera_avalon_fifo_write_almostfull
06aba748 g       *ABS*	00000000 __flash_rwdata_start
06ab0dcc g     F .text	000000a0 __sflags
06ab4678 g     F .text	00000088 __eqdf2
06abc500 g       *ABS*	00000000 __alt_heap_start
06aacbac g     F .text	00000044 printf
06aad068 g     F .text	00000068 __sseek
06aab2b0 g     F .text	000000a4 __sinit
06aaf0dc g     F .text	00000130 __swbuf_r
06ab139c g     F .text	00000084 _setlocale_r
06aab3b0 g     F .text	00000068 __sfmoreglue
06ab5b00 g     F .text	00000020 __malloc_unlock
06ab74d4 g     F .text	00000154 alt_hostfs_open
06ab1638 g     F .text	000000e0 memmove
06ab63c8 g     F .text	000000bc altera_avalon_fifo_init
06aab3a0 g     F .text	00000010 _cleanup
06ab6740 g     F .text	00000064 altera_avalon_fifo_write_fifo
06ab1c98 g     F .text	000000bc _Balloc
06ab4788 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
08001800 g     F .entry	0000001c __reset
06ab6080 g     F .text	00000094 times
06ab6900 g     F .text	00000028 altera_avalon_fifo_read_backpressure
06aaaa90 g       *ABS*	00000000 __flash_exceptions_start
06aabfd4 g     F .text	00000074 _fstat_r
06abc214 g     O .bss	00000004 errno
00000000 g       *ABS*	00000000 __alt_mem_sdram_controller
06abc234 g     O .bss	00000004 alt_argv
06ac26c0 g       *ABS*	00000000 _gp
06ab65b8 g     F .text	00000068 altera_avalon_fifo_clear_event
06ab94b8 g     O .rwdata	00000180 alt_fd_list
06ab77bc g     F .text	000000a0 alt_hostfs_seek
06ab7dc0 g     F .text	00000094 alt_find_dev
06ab1598 g     F .text	000000a0 memcpy
06aad1ac g     F .text	00000008 _times_r
06aab394 g     F .text	0000000c _cleanup_r
06ab4920 g     F .text	000000f8 __floatsidf
06ab7f74 g     F .text	00000090 alt_fs_reg
06ab847c g     F .text	00000078 alt_io_redirect
06ab4898 g     F .text	00000088 __ltdf2
06ab8908 g       *ABS*	00000000 __DTOR_END__
06ab1a74 g     F .text	000000b0 __ratio
06ab6f70 g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
06aacbf0 g     F .text	00000034 _printf_r
06ab4dc0 g     F .text	00000008 __udivsi3
06ab5718 g     F .text	000000c0 isatty
08001800 g       *ABS*	00000000 __alt_mem_instruction_mem_5
06ab8a04 g     O .rodata	000000c8 __mprec_tens
06ab1378 g     F .text	00000008 __locale_charset
06ab86b8 g     F .text	00000090 alt_icache_flush
06abc218 g     O .bss	00000004 __malloc_top_pad
06aba6d0 g     O .rwdata	00000004 __mb_cur_max
06ab1380 g     F .text	0000000c _localeconv_r
06ab2390 g     F .text	0000003c __i2b
06ab0e6c g     F .text	0000049c __sfvwrite_r
06aacff0 g     F .text	00000070 _sbrk_r
06ab767c g     F .text	000000a0 alt_hostfs_read
06ab270c g     F .text	00000078 _read_r
06ab9484 g     O .rwdata	0000000c __lc_ctype
06aba6e8 g     O .rwdata	00000004 alt_max_fd
06ab51fc g     F .text	00000138 __unpack_d
06aaaef4 g     F .text	00000110 _fclose_r
06aab214 g     F .text	00000034 fflush
06abc21c g     O .bss	00000004 __malloc_max_sbrked_mem
06ab3fe8 g     F .text	00000074 __adddf3
06ab1954 g     F .text	00000120 __b2d
06ab35a8 g     F .text	000005b0 __umoddi3
06ab5924 g     F .text	000000f0 lseek
06aba6c4 g     O .rwdata	00000004 _global_impure_ptr
06ab2784 g     F .text	000005f4 _realloc_r
06abc500 g       *ABS*	00000000 __bss_end
06ab82c0 g     F .text	000000f8 alt_iic_isr_register
06ab858c g     F .text	0000010c alt_tick
06ab2fcc g     F .text	000005dc __udivdi3
06ab8acc g     O .rodata	00000028 __mprec_bigtens
06ab25ec g     F .text	00000120 __s2b
06ab4af0 g     F .text	00000194 __floatunsidf
06ab1874 g     F .text	00000060 __mcmp
06aab37c g     F .text	00000018 __fp_lock_all
06ab8278 g     F .text	00000048 alt_ic_irq_enabled
06ab84f4 g     F .text	00000098 alt_alarm_stop
06abc23c g     O .bss	00000004 alt_irq_active
06ab7628 g     F .text	00000054 alt_hostfs_close
080018ec g     F .exceptions	000000c8 alt_irq_handler
06ab9490 g     O .rwdata	00000028 alt_dev_null
06ab7bc8 g     F .text	0000001c alt_dcache_flush_all
06ab1740 g     F .text	00000070 __hi0bits
06ab4a18 g     F .text	000000d8 __fixdfsi
06ab6620 g     F .text	00000060 altera_avalon_fifo_write_ienable
06aba748 g       *ABS*	00000000 __ram_rwdata_end
06ab6528 g     F .text	0000002c altera_avalon_fifo_read_almostempty
06aba6e0 g     O .rwdata	00000008 alt_dev_list
06aab6dc g     F .text	00000058 _fputc_r
06ab6174 g     F .text	00000120 write
06aacd28 g     F .text	000000e8 _putc_r
06ab8c7c g       *ABS*	00000000 __ram_rodata_end
06ab55e4 g     F .text	000000d4 fstat
06aab618 g     F .text	0000002c fprintf
06ab24cc g     F .text	00000120 __pow5mult
06abc224 g     O .bss	00000004 __nlocale_changed
06ab4dc8 g     F .text	00000008 __umodsi3
06abc500 g       *ABS*	00000000 end
06aabfb0 g     F .text	00000024 fseek
06ab6a70 g     F .text	000000c0 altera_avalon_jtag_uart_init
06ab6554 g     F .text	0000003c altera_avalon_fifo_read_event
06ab8904 g       *ABS*	00000000 __CTOR_LIST__
07ffffe0 g       *ABS*	00000000 __alt_stack_pointer
06ab7444 g     F .text	00000090 alt_avalon_timer_sc_init
06ab4e68 g     F .text	00000080 __clzsi2
06ab7194 g     F .text	00000240 altera_avalon_jtag_uart_write
06aab2a0 g     F .text	00000004 __sfp_lock_acquire
06ab6814 g     F .text	00000058 altera_avalon_fifo_read_fifo
06ab14b4 g     F .text	000000e4 memchr
06aad20c g     F .text	00001eac ___vfprintf_internal_r
06aab860 g     F .text	00000314 _free_r
06aaf3e0 g     F .text	000001b0 __call_exitprocs
06abc228 g     O .bss	00000004 __mlocale_changed
06aba6cc g     O .rwdata	00000004 __malloc_sbrk_base
06aaac24 g     F .text	0000003c _start
06abc240 g     O .bss	00000004 _alt_tick_rate
06ab205c g     F .text	0000014c __lshift
06abc244 g     O .bss	00000004 _alt_nticks
06ab5de4 g     F .text	00000120 read
06ab6328 g     F .text	00000068 alt_sys_init
06aacb34 g     F .text	00000078 _open_r
06ab87d0 g     F .text	00000134 __register_exitproc
06ab21a8 g     F .text	000001e8 __multiply
06ab6e08 g     F .text	00000074 altera_avalon_jtag_uart_close
06ab8c7c g       *ABS*	00000000 __ram_rwdata_start
06ab8908 g       *ABS*	00000000 __ram_rodata_start
06abc248 g     O .bss	00000028 __malloc_current_mallinfo
06ab1d54 g     F .text	0000017c __d2b
06ab6928 g     F .text	00000058 altera_avalon_jtag_uart_read_fd
06ab8004 g     F .text	000000b8 alt_get_fd
06ab5334 g     F .text	000000c8 __fpcmp_parts_d
06aaf590 g     F .text	00000070 _close_r
06ab875c g     F .text	00000074 memcmp
06ab69d8 g     F .text	00000048 altera_avalon_jtag_uart_close_fd
06abc500 g       *ABS*	00000000 __alt_stack_base
06ab6a20 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
06aaf2a0 g     F .text	0000013c __swsetup_r
06ab6484 g     F .text	0000003c altera_avalon_fifo_read_status
06ab4420 g     F .text	00000258 __divdf3
06aab418 g     F .text	000000f0 __sfp
06ab1bb8 g     F .text	00000058 __copybits
06ab907c g     O .rwdata	00000408 __malloc_av_
06aab2ac g     F .text	00000004 __sinit_lock_release
06ab405c g     F .text	000003c4 __muldf3
06aad14c g     F .text	00000060 __sread
06ab68d4 g     F .text	0000002c altera_avalon_fifo_read_other_info
06ab7e54 g     F .text	00000120 alt_find_file
06ab7be4 g     F .text	000000b4 alt_dev_llist_insert
06ab5ae0 g     F .text	00000020 __malloc_lock
06aab644 g     F .text	00000034 _fprintf_r
06ab5fc4 g     F .text	000000bc sbrk
06aab018 g     F .text	000001fc _fflush_r
06ab2f18 g     F .text	000000b4 _calloc_r
06aab5fc g     F .text	0000001c fopen
06abc214 g       *ABS*	00000000 __bss_start
06aaca9c g     F .text	00000098 memset
06aaac60 g     F .text	00000208 main
06abc238 g     O .bss	00000004 alt_envp
06abc220 g     O .bss	00000004 __malloc_max_total_mem
06ab6980 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
06ab6590 g     F .text	00000028 altera_avalon_fifo_read_level
06aaf20c g     F .text	0000001c __swbuf
06aad060 g     F .text	00000008 __sclose
07ffffe0 g       *ABS*	00000000 __alt_heap_limit
06aab004 g     F .text	00000014 fclose
06abc370 g     O .bss	00000190 _atexit0
06aaf818 g     F .text	000015b4 _dtoa_r
06aac35c g     F .text	00000740 _malloc_r
06aba6ec g     O .rwdata	00000004 alt_errno
06aac110 g     F .text	000000b8 _fwalk
06aacc24 g     F .text	00000104 putc
06ab4d00 g     F .text	00000060 __divsi3
06ab8b28 g     O .rodata	00000014 __thenan_df
06aab734 g     F .text	0000012c _malloc_trim_r
06ab8908 g       *ABS*	00000000 __CTOR_END__
06ab2de8 g     F .text	000000bc strcmp
06ab8908 g       *ABS*	00000000 __flash_rodata_start
06ab8908 g       *ABS*	00000000 __DTOR_LIST__
06ab4700 g     F .text	00000088 __nedf2
06ab62f4 g     F .text	00000034 alt_irq_init
06ab5f64 g     F .text	00000060 alt_release_fd
06ab8b3c g     O .rodata	00000100 __clz_tab
06abc22c g     O .bss	00000004 _PathLocale
06ab8748 g     F .text	00000014 atexit
06aaf228 g     F .text	00000078 _write_r
06ab1420 g     F .text	0000001c setlocale
06aba6c0 g     O .rwdata	00000004 _impure_ptr
06abc230 g     O .bss	00000004 alt_argc
06ab7d5c g     F .text	00000064 _do_dtors
06aabb74 g     F .text	0000043c _fseek_r
06aace10 g     F .text	000001c4 __srefill_r
08001820 g       .exceptions	00000000 alt_irq_entry
06ab18d4 g     F .text	00000080 __ulp
06ab2d78 g     F .text	00000040 __isinfd
06aab364 g     F .text	00000018 __fp_unlock_all
06aab678 g     F .text	00000064 fputc
06aba6d8 g     O .rwdata	00000008 alt_fs_list
06ab771c g     F .text	000000a0 alt_hostfs_write
08001820 g       *ABS*	00000000 __ram_exceptions_start
06ab138c g     F .text	00000010 localeconv
06ab686c g     F .text	00000068 altera_avalon_fifo_write_other_info
06ab80ec g     F .text	00000050 alt_ic_isr_register
06aba748 g       *ABS*	00000000 _edata
06abc500 g       *ABS*	00000000 _end
080019b4 g       *ABS*	00000000 __ram_exceptions_end
06ab6e7c g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
06ab81d8 g     F .text	000000a0 alt_ic_irq_disable
06aad0d0 g     F .text	0000007c __swrite
06aba6c8 g     O .rwdata	00000004 __malloc_trim_threshold
06ab8698 g     F .text	00000020 altera_nios2_qsys_irq_init
06aaaebc g     F .text	00000038 exit
06aac048 g     F .text	000000c8 _fwalk_reent
06ab1ed0 g     F .text	0000018c __mdiff
06ab4d60 g     F .text	00000060 __modsi3
06ab64c0 g     F .text	0000003c altera_avalon_fifo_read_ienable
07ffffe0 g       *ABS*	00000000 __alt_data_end
08001820 g     F .exceptions	00000000 alt_exception
06aab2a4 g     F .text	00000004 __sfp_lock_release
06aab508 g     F .text	000000f4 _fopen_r
06ab2db8 g     F .text	00000030 __isnand
06ab55c4 g     F .text	00000020 _exit
06ab7a74 g     F .text	00000154 alt_alarm_start
06ab4dd0 g     F .text	00000098 __muldi3
06ab64fc g     F .text	0000002c altera_avalon_fifo_read_almostfull
06aac1c8 g     F .text	00000194 __smakebuf_r
06ab2ea4 g     F .text	00000074 strlen
06ab5bfc g     F .text	00000188 open
06ab67a4 g     F .text	00000070 altera_avalon_read_fifo
06ab4810 g     F .text	00000088 __gedf2
06aaae68 g     F .text	00000054 clock
06ab80bc g     F .text	00000030 alt_icache_flush_all
06aba73c g     O .rwdata	00000004 alt_priority_mask
06ab813c g     F .text	0000009c alt_ic_irq_enable
06aaf0b8 g     F .text	00000024 __vfprintf_internal
06ab3f68 g     F .text	00000080 __subdf3
06ab17b0 g     F .text	000000c4 __lo0bits
06ab66e0 g     F .text	00000060 altera_avalon_fifo_write_almostempty
06aba740 g     O .rwdata	00000008 alt_alarm_list
06ab7cf8 g     F .text	00000064 _do_ctors
06ab53fc g     F .text	000000fc close
06ab5838 g     F .text	00000080 alt_load
06ab4ee8 g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
06aab2a8 g     F .text	00000004 __sinit_lock_acquire
06ab23cc g     F .text	00000100 __multadd
06ab1718 g     F .text	00000028 _Bfree
06ab785c g     F .text	00000218 alt_hostfs_fstat



Disassembly of section .entry:

08001800 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 8001800:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 8001804:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 8001808:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 800180c:	00bffd16 	blt	zero,r2,8001804 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 8001810:	0041aab4 	movhi	at,1706
    ori r1, r1, %lo(_start)
 8001814:	086b0914 	ori	at,at,44068
    jmp r1
 8001818:	0800683a 	jmp	at
 800181c:	00000000 	call	0 <__alt_mem_sdram_controller>

Disassembly of section .exceptions:

08001820 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
 8001820:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
 8001824:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
 8001828:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 800182c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 8001830:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 8001834:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 8001838:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 800183c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 8001840:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
 8001844:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
 8001848:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 800184c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 8001850:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 8001854:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 8001858:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 800185c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 8001860:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 8001864:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 8001868:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 800186c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 8001870:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 8001874:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 8001878:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 800187c:	10000326 	beq	r2,zero,800188c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 8001880:	20000226 	beq	r4,zero,800188c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 8001884:	80018ec0 	call	80018ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 8001888:	00000306 	br	8001898 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 800188c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 8001890:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 8001894:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 8001898:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 800189c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 80018a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 80018a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 80018a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 80018ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 80018b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 80018b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 80018b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 80018bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 80018c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
 80018c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 80018c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 80018cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 80018d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 80018d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 80018d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 80018dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 80018e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
 80018e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 80018e8:	ef80083a 	eret

080018ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 80018ec:	defff904 	addi	sp,sp,-28
 80018f0:	dfc00615 	stw	ra,24(sp)
 80018f4:	df000515 	stw	fp,20(sp)
 80018f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 80018fc:	0005313a 	rdctl	r2,ipending
 8001900:	e0bffc15 	stw	r2,-16(fp)

  return active;
 8001904:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 8001908:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 800190c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 8001910:	00800044 	movi	r2,1
 8001914:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 8001918:	e0ffff17 	ldw	r3,-4(fp)
 800191c:	e0bffe17 	ldw	r2,-8(fp)
 8001920:	1884703a 	and	r2,r3,r2
 8001924:	1005003a 	cmpeq	r2,r2,zero
 8001928:	1000161e 	bne	r2,zero,8001984 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 800192c:	e0bffd17 	ldw	r2,-12(fp)
 8001930:	00c1ab34 	movhi	r3,1708
 8001934:	18f09c04 	addi	r3,r3,-15760
 8001938:	100490fa 	slli	r2,r2,3
 800193c:	10c5883a 	add	r2,r2,r3
 8001940:	11400017 	ldw	r5,0(r2)
 8001944:	e0bffd17 	ldw	r2,-12(fp)
 8001948:	00c1ab34 	movhi	r3,1708
 800194c:	18f09c04 	addi	r3,r3,-15760
 8001950:	100490fa 	slli	r2,r2,3
 8001954:	10c5883a 	add	r2,r2,r3
 8001958:	10800104 	addi	r2,r2,4
 800195c:	11000017 	ldw	r4,0(r2)
 8001960:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8001964:	0005313a 	rdctl	r2,ipending
 8001968:	e0bffb15 	stw	r2,-20(fp)

  return active;
 800196c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
 8001970:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 8001974:	e0bfff17 	ldw	r2,-4(fp)
 8001978:	1004c03a 	cmpne	r2,r2,zero
 800197c:	103fe31e 	bne	r2,zero,800190c <alt_irq_handler+0x20>
 8001980:	00000706 	br	80019a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 8001984:	e0bffe17 	ldw	r2,-8(fp)
 8001988:	1085883a 	add	r2,r2,r2
 800198c:	e0bffe15 	stw	r2,-8(fp)
      i++;
 8001990:	e0bffd17 	ldw	r2,-12(fp)
 8001994:	10800044 	addi	r2,r2,1
 8001998:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 800199c:	003fde06 	br	8001918 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
 80019a0:	e037883a 	mov	sp,fp
 80019a4:	dfc00117 	ldw	ra,4(sp)
 80019a8:	df000017 	ldw	fp,0(sp)
 80019ac:	dec00204 	addi	sp,sp,8
 80019b0:	f800283a 	ret

Disassembly of section .text:

06aaac24 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 6aaac24:	06c1fff4 	movhi	sp,2047
    ori sp, sp, %lo(__alt_stack_pointer)
 6aaac28:	defff814 	ori	sp,sp,65504

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
 6aaac2c:	0681ab34 	movhi	gp,1708
    ori gp, gp, %lo(_gp)
 6aaac30:	d689b014 	ori	gp,gp,9920
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 6aaac34:	0081aaf4 	movhi	r2,1707
    ori r2, r2, %lo(__bss_start)
 6aaac38:	10b08514 	ori	r2,r2,49684

    movhi r3, %hi(__bss_end)
 6aaac3c:	00c1aaf4 	movhi	r3,1707
    ori r3, r3, %lo(__bss_end)
 6aaac40:	18f14014 	ori	r3,r3,50432

    beq r2, r3, 1f
 6aaac44:	10c00326 	beq	r2,r3,6aaac54 <_start+0x30>

0:
    stw zero, (r2)
 6aaac48:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 6aaac4c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 6aaac50:	10fffd36 	bltu	r2,r3,6aaac48 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 6aaac54:	6ab58380 	call	6ab5838 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 6aaac58:	6ab5a740 	call	6ab5a74 <alt_main>

06aaac5c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 6aaac5c:	003fff06 	br	6aaac5c <alt_after_alt_main>

06aaac60 <main>:
#include <stdio.h>
#include <time.h>
typedef char			INT8;
typedef unsigned char	UINT8;

int main(void){
 6aaac60:	deffee04 	addi	sp,sp,-72
 6aaac64:	dfc01115 	stw	ra,68(sp)
 6aaac68:	df001015 	stw	fp,64(sp)
 6aaac6c:	dc000f15 	stw	r16,60(sp)
 6aaac70:	df000f04 	addi	fp,sp,60
	FILE *fptr;
	UINT8 out;
	INT8 filename[50];
	
	while(1){
		out = 0;
 6aaac74:	e03ff105 	stb	zero,-60(fp)
		//filename[out] = (INT8)RECV1();
		filename[out] = (INT8)altera_avalon_fifo_read_fifo(0x386c,0x3800);
 6aaac78:	e43ff103 	ldbu	r16,-60(fp)
 6aaac7c:	010e1b04 	movi	r4,14444
 6aaac80:	014e0004 	movi	r5,14336
 6aaac84:	6ab68140 	call	6ab6814 <altera_avalon_fifo_read_fifo>
 6aaac88:	1007883a 	mov	r3,r2
 6aaac8c:	e0bff304 	addi	r2,fp,-52
 6aaac90:	1405883a 	add	r2,r2,r16
 6aaac94:	10c00005 	stb	r3,0(r2)
		if (filename[out]=='\0')
 6aaac98:	e0fff103 	ldbu	r3,-60(fp)
 6aaac9c:	e0bff304 	addi	r2,fp,-52
 6aaaca0:	10c5883a 	add	r2,r2,r3
 6aaaca4:	10800003 	ldbu	r2,0(r2)
 6aaaca8:	10803fcc 	andi	r2,r2,255
 6aaacac:	1080201c 	xori	r2,r2,128
 6aaacb0:	10bfe004 	addi	r2,r2,-128
 6aaacb4:	1004c03a 	cmpne	r2,r2,zero
 6aaacb8:	10000d1e 	bne	r2,zero,6aaacf0 <main+0x90>
			exit(0);
 6aaacbc:	0009883a 	mov	r4,zero
 6aaacc0:	6aaaebc0 	call	6aaaebc <exit>
		while(filename[out]!='\0'){
			out++;
 6aaacc4:	e0bff103 	ldbu	r2,-60(fp)
 6aaacc8:	10800044 	addi	r2,r2,1
 6aaaccc:	e0bff105 	stb	r2,-60(fp)
			//filename[out] = (INT8)RECV1();
			filename[out] = (INT8)altera_avalon_fifo_read_fifo(0x386c,0x3800);
 6aaacd0:	e43ff103 	ldbu	r16,-60(fp)
 6aaacd4:	010e1b04 	movi	r4,14444
 6aaacd8:	014e0004 	movi	r5,14336
 6aaacdc:	6ab68140 	call	6ab6814 <altera_avalon_fifo_read_fifo>
 6aaace0:	1007883a 	mov	r3,r2
 6aaace4:	e0bff304 	addi	r2,fp,-52
 6aaace8:	1405883a 	add	r2,r2,r16
 6aaacec:	10c00005 	stb	r3,0(r2)
		out = 0;
		//filename[out] = (INT8)RECV1();
		filename[out] = (INT8)altera_avalon_fifo_read_fifo(0x386c,0x3800);
		if (filename[out]=='\0')
			exit(0);
		while(filename[out]!='\0'){
 6aaacf0:	e0fff103 	ldbu	r3,-60(fp)
 6aaacf4:	e0bff304 	addi	r2,fp,-52
 6aaacf8:	10c5883a 	add	r2,r2,r3
 6aaacfc:	10800003 	ldbu	r2,0(r2)
 6aaad00:	10803fcc 	andi	r2,r2,255
 6aaad04:	1080201c 	xori	r2,r2,128
 6aaad08:	10bfe004 	addi	r2,r2,-128
 6aaad0c:	1004c03a 	cmpne	r2,r2,zero
 6aaad10:	103fec1e 	bne	r2,zero,6aaacc4 <main+0x64>
			out++;
			//filename[out] = (INT8)RECV1();
			filename[out] = (INT8)altera_avalon_fifo_read_fifo(0x386c,0x3800);
		}
		filename[out++] = '.';
 6aaad14:	e0fff103 	ldbu	r3,-60(fp)
 6aaad18:	e0bff304 	addi	r2,fp,-52
 6aaad1c:	10c7883a 	add	r3,r2,r3
 6aaad20:	00800b84 	movi	r2,46
 6aaad24:	18800005 	stb	r2,0(r3)
 6aaad28:	e0bff103 	ldbu	r2,-60(fp)
 6aaad2c:	10800044 	addi	r2,r2,1
 6aaad30:	e0bff105 	stb	r2,-60(fp)
		filename[out++] = 'j';
 6aaad34:	e0fff103 	ldbu	r3,-60(fp)
 6aaad38:	e0bff304 	addi	r2,fp,-52
 6aaad3c:	10c7883a 	add	r3,r2,r3
 6aaad40:	00801a84 	movi	r2,106
 6aaad44:	18800005 	stb	r2,0(r3)
 6aaad48:	e0bff103 	ldbu	r2,-60(fp)
 6aaad4c:	10800044 	addi	r2,r2,1
 6aaad50:	e0bff105 	stb	r2,-60(fp)
		filename[out++] = 'p';
 6aaad54:	e0fff103 	ldbu	r3,-60(fp)
 6aaad58:	e0bff304 	addi	r2,fp,-52
 6aaad5c:	10c7883a 	add	r3,r2,r3
 6aaad60:	00801c04 	movi	r2,112
 6aaad64:	18800005 	stb	r2,0(r3)
 6aaad68:	e0bff103 	ldbu	r2,-60(fp)
 6aaad6c:	10800044 	addi	r2,r2,1
 6aaad70:	e0bff105 	stb	r2,-60(fp)
		filename[out++] = 'g';
 6aaad74:	e0fff103 	ldbu	r3,-60(fp)
 6aaad78:	e0bff304 	addi	r2,fp,-52
 6aaad7c:	10c7883a 	add	r3,r2,r3
 6aaad80:	008019c4 	movi	r2,103
 6aaad84:	18800005 	stb	r2,0(r3)
 6aaad88:	e0bff103 	ldbu	r2,-60(fp)
 6aaad8c:	10800044 	addi	r2,r2,1
 6aaad90:	e0bff105 	stb	r2,-60(fp)
		filename[out]   = '\0';
 6aaad94:	e0fff103 	ldbu	r3,-60(fp)
 6aaad98:	e0bff304 	addi	r2,fp,-52
 6aaad9c:	10c5883a 	add	r2,r2,r3
 6aaada0:	10000005 	stb	zero,0(r2)

		fptr = fopen (filename, "wb");
 6aaada4:	e13ff304 	addi	r4,fp,-52
 6aaada8:	0141ab34 	movhi	r5,1708
 6aaadac:	29624204 	addi	r5,r5,-30456
 6aaadb0:	6aab5fc0 	call	6aab5fc <fopen>
 6aaadb4:	e0bff215 	stw	r2,-56(fp)
		fprintf(stderr,"\nOutput file: %s\n",filename); //Output file added by haris
 6aaadb8:	0081ab34 	movhi	r2,1708
 6aaadbc:	10a9b004 	addi	r2,r2,-22848
 6aaadc0:	10800017 	ldw	r2,0(r2)
 6aaadc4:	11000317 	ldw	r4,12(r2)
 6aaadc8:	e1bff304 	addi	r6,fp,-52
 6aaadcc:	0141ab34 	movhi	r5,1708
 6aaadd0:	29624304 	addi	r5,r5,-30452
 6aaadd4:	6aab6180 	call	6aab618 <fprintf>
 6aaadd8:	00000006 	br	6aaaddc <main+0x17c>
		
		while(1){
            //out = (UINT8)RECV2();
			out = (UINT8)altera_avalon_fifo_read_fifo(0x3868,0x3840);
 6aaaddc:	010e1a04 	movi	r4,14440
 6aaade0:	014e1004 	movi	r5,14400
 6aaade4:	6ab68140 	call	6ab6814 <altera_avalon_fifo_read_fifo>
 6aaade8:	e0bff105 	stb	r2,-60(fp)
            fputc(out, fptr);
 6aaadec:	e13ff103 	ldbu	r4,-60(fp)
 6aaadf0:	e17ff217 	ldw	r5,-56(fp)
 6aaadf4:	6aab6780 	call	6aab678 <fputc>
            if (out == 0xFF){
 6aaadf8:	e0bff103 	ldbu	r2,-60(fp)
 6aaadfc:	10803fd8 	cmpnei	r2,r2,255
 6aaae00:	103ff61e 	bne	r2,zero,6aaaddc <main+0x17c>
                //out = (UINT8)RECV2();
				out = (UINT8)altera_avalon_fifo_read_fifo(0x3868,0x3840);
 6aaae04:	010e1a04 	movi	r4,14440
 6aaae08:	014e1004 	movi	r5,14400
 6aaae0c:	6ab68140 	call	6ab6814 <altera_avalon_fifo_read_fifo>
 6aaae10:	e0bff105 	stb	r2,-60(fp)
                fputc(out, fptr);
 6aaae14:	e13ff103 	ldbu	r4,-60(fp)
 6aaae18:	e17ff217 	ldw	r5,-56(fp)
 6aaae1c:	6aab6780 	call	6aab678 <fputc>
				//printf("\nWriting: %d\n",out);
                if(out == 0xD9)
 6aaae20:	e0bff103 	ldbu	r2,-60(fp)
 6aaae24:	10803660 	cmpeqi	r2,r2,217
 6aaae28:	1000011e 	bne	r2,zero,6aaae30 <main+0x1d0>
//				fputc(out, fptr);
//			}else if(!IS_FIFO3EMPTY()){
//				RECV3();
//				break;
//			}
		}
 6aaae2c:	003feb06 	br	6aaaddc <main+0x17c>
		
		fclose (fptr);
 6aaae30:	e13ff217 	ldw	r4,-56(fp)
 6aaae34:	6aab0040 	call	6aab004 <fclose>
		printf("\n Done ! %d\n", clock());
 6aaae38:	6aaae680 	call	6aaae68 <clock>
 6aaae3c:	100b883a 	mov	r5,r2
 6aaae40:	0101ab34 	movhi	r4,1708
 6aaae44:	21224804 	addi	r4,r4,-30432
 6aaae48:	6aacbac0 	call	6aacbac <printf>
		break;
	}

	return 0;
 6aaae4c:	0005883a 	mov	r2,zero
}
 6aaae50:	e037883a 	mov	sp,fp
 6aaae54:	dfc00217 	ldw	ra,8(sp)
 6aaae58:	df000117 	ldw	fp,4(sp)
 6aaae5c:	dc000017 	ldw	r16,0(sp)
 6aaae60:	dec00304 	addi	sp,sp,12
 6aaae64:	f800283a 	ret

06aaae68 <clock>:
 6aaae68:	0081ab34 	movhi	r2,1708
 6aaae6c:	10a9b004 	addi	r2,r2,-22848
 6aaae70:	11000017 	ldw	r4,0(r2)
 6aaae74:	defffb04 	addi	sp,sp,-20
 6aaae78:	d80b883a 	mov	r5,sp
 6aaae7c:	dfc00415 	stw	ra,16(sp)
 6aaae80:	6aad1ac0 	call	6aad1ac <_times_r>
 6aaae84:	1007883a 	mov	r3,r2
 6aaae88:	00bfffc4 	movi	r2,-1
 6aaae8c:	18800726 	beq	r3,r2,6aaaeac <clock+0x44>
 6aaae90:	d8c00117 	ldw	r3,4(sp)
 6aaae94:	d9000017 	ldw	r4,0(sp)
 6aaae98:	d8800217 	ldw	r2,8(sp)
 6aaae9c:	20c9883a 	add	r4,r4,r3
 6aaaea0:	d8c00317 	ldw	r3,12(sp)
 6aaaea4:	10c5883a 	add	r2,r2,r3
 6aaaea8:	2087883a 	add	r3,r4,r2
 6aaaeac:	1805883a 	mov	r2,r3
 6aaaeb0:	dfc00417 	ldw	ra,16(sp)
 6aaaeb4:	dec00504 	addi	sp,sp,20
 6aaaeb8:	f800283a 	ret

06aaaebc <exit>:
 6aaaebc:	defffe04 	addi	sp,sp,-8
 6aaaec0:	000b883a 	mov	r5,zero
 6aaaec4:	dc000015 	stw	r16,0(sp)
 6aaaec8:	dfc00115 	stw	ra,4(sp)
 6aaaecc:	2021883a 	mov	r16,r4
 6aaaed0:	6aaf3e00 	call	6aaf3e0 <__call_exitprocs>
 6aaaed4:	0081ab34 	movhi	r2,1708
 6aaaed8:	10a9b104 	addi	r2,r2,-22844
 6aaaedc:	11000017 	ldw	r4,0(r2)
 6aaaee0:	20800f17 	ldw	r2,60(r4)
 6aaaee4:	10000126 	beq	r2,zero,6aaaeec <exit+0x30>
 6aaaee8:	103ee83a 	callr	r2
 6aaaeec:	8009883a 	mov	r4,r16
 6aaaef0:	6ab55c40 	call	6ab55c4 <_exit>

06aaaef4 <_fclose_r>:
 6aaaef4:	defffc04 	addi	sp,sp,-16
 6aaaef8:	dc400115 	stw	r17,4(sp)
 6aaaefc:	dc000015 	stw	r16,0(sp)
 6aaaf00:	dfc00315 	stw	ra,12(sp)
 6aaaf04:	dc800215 	stw	r18,8(sp)
 6aaaf08:	2821883a 	mov	r16,r5
 6aaaf0c:	2023883a 	mov	r17,r4
 6aaaf10:	28002926 	beq	r5,zero,6aaafb8 <_fclose_r+0xc4>
 6aaaf14:	6aab2a00 	call	6aab2a0 <__sfp_lock_acquire>
 6aaaf18:	88000226 	beq	r17,zero,6aaaf24 <_fclose_r+0x30>
 6aaaf1c:	88800e17 	ldw	r2,56(r17)
 6aaaf20:	10002d26 	beq	r2,zero,6aaafd8 <_fclose_r+0xe4>
 6aaaf24:	8080030f 	ldh	r2,12(r16)
 6aaaf28:	10002226 	beq	r2,zero,6aaafb4 <_fclose_r+0xc0>
 6aaaf2c:	8809883a 	mov	r4,r17
 6aaaf30:	800b883a 	mov	r5,r16
 6aaaf34:	6aab0180 	call	6aab018 <_fflush_r>
 6aaaf38:	1025883a 	mov	r18,r2
 6aaaf3c:	80800b17 	ldw	r2,44(r16)
 6aaaf40:	10000426 	beq	r2,zero,6aaaf54 <_fclose_r+0x60>
 6aaaf44:	81400717 	ldw	r5,28(r16)
 6aaaf48:	8809883a 	mov	r4,r17
 6aaaf4c:	103ee83a 	callr	r2
 6aaaf50:	10002a16 	blt	r2,zero,6aaaffc <_fclose_r+0x108>
 6aaaf54:	8080030b 	ldhu	r2,12(r16)
 6aaaf58:	1080200c 	andi	r2,r2,128
 6aaaf5c:	1000231e 	bne	r2,zero,6aaafec <_fclose_r+0xf8>
 6aaaf60:	81400c17 	ldw	r5,48(r16)
 6aaaf64:	28000526 	beq	r5,zero,6aaaf7c <_fclose_r+0x88>
 6aaaf68:	80801004 	addi	r2,r16,64
 6aaaf6c:	28800226 	beq	r5,r2,6aaaf78 <_fclose_r+0x84>
 6aaaf70:	8809883a 	mov	r4,r17
 6aaaf74:	6aab8600 	call	6aab860 <_free_r>
 6aaaf78:	80000c15 	stw	zero,48(r16)
 6aaaf7c:	81401117 	ldw	r5,68(r16)
 6aaaf80:	28000326 	beq	r5,zero,6aaaf90 <_fclose_r+0x9c>
 6aaaf84:	8809883a 	mov	r4,r17
 6aaaf88:	6aab8600 	call	6aab860 <_free_r>
 6aaaf8c:	80001115 	stw	zero,68(r16)
 6aaaf90:	8000030d 	sth	zero,12(r16)
 6aaaf94:	6aab2a40 	call	6aab2a4 <__sfp_lock_release>
 6aaaf98:	9005883a 	mov	r2,r18
 6aaaf9c:	dfc00317 	ldw	ra,12(sp)
 6aaafa0:	dc800217 	ldw	r18,8(sp)
 6aaafa4:	dc400117 	ldw	r17,4(sp)
 6aaafa8:	dc000017 	ldw	r16,0(sp)
 6aaafac:	dec00404 	addi	sp,sp,16
 6aaafb0:	f800283a 	ret
 6aaafb4:	6aab2a40 	call	6aab2a4 <__sfp_lock_release>
 6aaafb8:	0025883a 	mov	r18,zero
 6aaafbc:	9005883a 	mov	r2,r18
 6aaafc0:	dfc00317 	ldw	ra,12(sp)
 6aaafc4:	dc800217 	ldw	r18,8(sp)
 6aaafc8:	dc400117 	ldw	r17,4(sp)
 6aaafcc:	dc000017 	ldw	r16,0(sp)
 6aaafd0:	dec00404 	addi	sp,sp,16
 6aaafd4:	f800283a 	ret
 6aaafd8:	8809883a 	mov	r4,r17
 6aaafdc:	6aab2b00 	call	6aab2b0 <__sinit>
 6aaafe0:	8080030f 	ldh	r2,12(r16)
 6aaafe4:	103fd11e 	bne	r2,zero,6aaaf2c <_fclose_r+0x38>
 6aaafe8:	003ff206 	br	6aaafb4 <_fclose_r+0xc0>
 6aaafec:	81400417 	ldw	r5,16(r16)
 6aaaff0:	8809883a 	mov	r4,r17
 6aaaff4:	6aab8600 	call	6aab860 <_free_r>
 6aaaff8:	003fd906 	br	6aaaf60 <_fclose_r+0x6c>
 6aaaffc:	04bfffc4 	movi	r18,-1
 6aab000:	003fd406 	br	6aaaf54 <_fclose_r+0x60>

06aab004 <fclose>:
 6aab004:	0081ab34 	movhi	r2,1708
 6aab008:	10a9b004 	addi	r2,r2,-22848
 6aab00c:	200b883a 	mov	r5,r4
 6aab010:	11000017 	ldw	r4,0(r2)
 6aab014:	6aaaef41 	jmpi	6aaaef4 <_fclose_r>

06aab018 <_fflush_r>:
 6aab018:	defffb04 	addi	sp,sp,-20
 6aab01c:	dcc00315 	stw	r19,12(sp)
 6aab020:	dc800215 	stw	r18,8(sp)
 6aab024:	dfc00415 	stw	ra,16(sp)
 6aab028:	dc400115 	stw	r17,4(sp)
 6aab02c:	dc000015 	stw	r16,0(sp)
 6aab030:	2027883a 	mov	r19,r4
 6aab034:	2825883a 	mov	r18,r5
 6aab038:	20000226 	beq	r4,zero,6aab044 <_fflush_r+0x2c>
 6aab03c:	20800e17 	ldw	r2,56(r4)
 6aab040:	10005626 	beq	r2,zero,6aab19c <_fflush_r+0x184>
 6aab044:	9100030b 	ldhu	r4,12(r18)
 6aab048:	20ffffcc 	andi	r3,r4,65535
 6aab04c:	18e0001c 	xori	r3,r3,32768
 6aab050:	18e00004 	addi	r3,r3,-32768
 6aab054:	1880020c 	andi	r2,r3,8
 6aab058:	1000261e 	bne	r2,zero,6aab0f4 <_fflush_r+0xdc>
 6aab05c:	90c00117 	ldw	r3,4(r18)
 6aab060:	20820014 	ori	r2,r4,2048
 6aab064:	9080030d 	sth	r2,12(r18)
 6aab068:	1009883a 	mov	r4,r2
 6aab06c:	00c0400e 	bge	zero,r3,6aab170 <_fflush_r+0x158>
 6aab070:	92000a17 	ldw	r8,40(r18)
 6aab074:	40004026 	beq	r8,zero,6aab178 <_fflush_r+0x160>
 6aab078:	2084000c 	andi	r2,r4,4096
 6aab07c:	10005326 	beq	r2,zero,6aab1cc <_fflush_r+0x1b4>
 6aab080:	94001417 	ldw	r16,80(r18)
 6aab084:	9080030b 	ldhu	r2,12(r18)
 6aab088:	1080010c 	andi	r2,r2,4
 6aab08c:	1000481e 	bne	r2,zero,6aab1b0 <_fflush_r+0x198>
 6aab090:	91400717 	ldw	r5,28(r18)
 6aab094:	9809883a 	mov	r4,r19
 6aab098:	800d883a 	mov	r6,r16
 6aab09c:	000f883a 	mov	r7,zero
 6aab0a0:	403ee83a 	callr	r8
 6aab0a4:	8080261e 	bne	r16,r2,6aab140 <_fflush_r+0x128>
 6aab0a8:	9080030b 	ldhu	r2,12(r18)
 6aab0ac:	91000417 	ldw	r4,16(r18)
 6aab0b0:	90000115 	stw	zero,4(r18)
 6aab0b4:	10bdffcc 	andi	r2,r2,63487
 6aab0b8:	10ffffcc 	andi	r3,r2,65535
 6aab0bc:	18c4000c 	andi	r3,r3,4096
 6aab0c0:	9080030d 	sth	r2,12(r18)
 6aab0c4:	91000015 	stw	r4,0(r18)
 6aab0c8:	18002b26 	beq	r3,zero,6aab178 <_fflush_r+0x160>
 6aab0cc:	0007883a 	mov	r3,zero
 6aab0d0:	1805883a 	mov	r2,r3
 6aab0d4:	94001415 	stw	r16,80(r18)
 6aab0d8:	dfc00417 	ldw	ra,16(sp)
 6aab0dc:	dcc00317 	ldw	r19,12(sp)
 6aab0e0:	dc800217 	ldw	r18,8(sp)
 6aab0e4:	dc400117 	ldw	r17,4(sp)
 6aab0e8:	dc000017 	ldw	r16,0(sp)
 6aab0ec:	dec00504 	addi	sp,sp,20
 6aab0f0:	f800283a 	ret
 6aab0f4:	94400417 	ldw	r17,16(r18)
 6aab0f8:	88001f26 	beq	r17,zero,6aab178 <_fflush_r+0x160>
 6aab0fc:	90800017 	ldw	r2,0(r18)
 6aab100:	18c000cc 	andi	r3,r3,3
 6aab104:	94400015 	stw	r17,0(r18)
 6aab108:	1461c83a 	sub	r16,r2,r17
 6aab10c:	18002526 	beq	r3,zero,6aab1a4 <_fflush_r+0x18c>
 6aab110:	0005883a 	mov	r2,zero
 6aab114:	90800215 	stw	r2,8(r18)
 6aab118:	0400170e 	bge	zero,r16,6aab178 <_fflush_r+0x160>
 6aab11c:	90c00917 	ldw	r3,36(r18)
 6aab120:	91400717 	ldw	r5,28(r18)
 6aab124:	880d883a 	mov	r6,r17
 6aab128:	800f883a 	mov	r7,r16
 6aab12c:	9809883a 	mov	r4,r19
 6aab130:	183ee83a 	callr	r3
 6aab134:	88a3883a 	add	r17,r17,r2
 6aab138:	80a1c83a 	sub	r16,r16,r2
 6aab13c:	00bff616 	blt	zero,r2,6aab118 <_fflush_r+0x100>
 6aab140:	9080030b 	ldhu	r2,12(r18)
 6aab144:	00ffffc4 	movi	r3,-1
 6aab148:	10801014 	ori	r2,r2,64
 6aab14c:	9080030d 	sth	r2,12(r18)
 6aab150:	1805883a 	mov	r2,r3
 6aab154:	dfc00417 	ldw	ra,16(sp)
 6aab158:	dcc00317 	ldw	r19,12(sp)
 6aab15c:	dc800217 	ldw	r18,8(sp)
 6aab160:	dc400117 	ldw	r17,4(sp)
 6aab164:	dc000017 	ldw	r16,0(sp)
 6aab168:	dec00504 	addi	sp,sp,20
 6aab16c:	f800283a 	ret
 6aab170:	90800f17 	ldw	r2,60(r18)
 6aab174:	00bfbe16 	blt	zero,r2,6aab070 <_fflush_r+0x58>
 6aab178:	0007883a 	mov	r3,zero
 6aab17c:	1805883a 	mov	r2,r3
 6aab180:	dfc00417 	ldw	ra,16(sp)
 6aab184:	dcc00317 	ldw	r19,12(sp)
 6aab188:	dc800217 	ldw	r18,8(sp)
 6aab18c:	dc400117 	ldw	r17,4(sp)
 6aab190:	dc000017 	ldw	r16,0(sp)
 6aab194:	dec00504 	addi	sp,sp,20
 6aab198:	f800283a 	ret
 6aab19c:	6aab2b00 	call	6aab2b0 <__sinit>
 6aab1a0:	003fa806 	br	6aab044 <_fflush_r+0x2c>
 6aab1a4:	90800517 	ldw	r2,20(r18)
 6aab1a8:	90800215 	stw	r2,8(r18)
 6aab1ac:	003fda06 	br	6aab118 <_fflush_r+0x100>
 6aab1b0:	90800117 	ldw	r2,4(r18)
 6aab1b4:	90c00c17 	ldw	r3,48(r18)
 6aab1b8:	80a1c83a 	sub	r16,r16,r2
 6aab1bc:	183fb426 	beq	r3,zero,6aab090 <_fflush_r+0x78>
 6aab1c0:	90800f17 	ldw	r2,60(r18)
 6aab1c4:	80a1c83a 	sub	r16,r16,r2
 6aab1c8:	003fb106 	br	6aab090 <_fflush_r+0x78>
 6aab1cc:	91400717 	ldw	r5,28(r18)
 6aab1d0:	9809883a 	mov	r4,r19
 6aab1d4:	000d883a 	mov	r6,zero
 6aab1d8:	01c00044 	movi	r7,1
 6aab1dc:	403ee83a 	callr	r8
 6aab1e0:	1021883a 	mov	r16,r2
 6aab1e4:	00bfffc4 	movi	r2,-1
 6aab1e8:	80800226 	beq	r16,r2,6aab1f4 <_fflush_r+0x1dc>
 6aab1ec:	92000a17 	ldw	r8,40(r18)
 6aab1f0:	003fa406 	br	6aab084 <_fflush_r+0x6c>
 6aab1f4:	98c00017 	ldw	r3,0(r19)
 6aab1f8:	00800744 	movi	r2,29
 6aab1fc:	18bfde26 	beq	r3,r2,6aab178 <_fflush_r+0x160>
 6aab200:	9080030b 	ldhu	r2,12(r18)
 6aab204:	8007883a 	mov	r3,r16
 6aab208:	10801014 	ori	r2,r2,64
 6aab20c:	9080030d 	sth	r2,12(r18)
 6aab210:	003fcf06 	br	6aab150 <_fflush_r+0x138>

06aab214 <fflush>:
 6aab214:	0141aaf4 	movhi	r5,1707
 6aab218:	296c0604 	addi	r5,r5,-20456
 6aab21c:	2007883a 	mov	r3,r4
 6aab220:	20000526 	beq	r4,zero,6aab238 <fflush+0x24>
 6aab224:	0081ab34 	movhi	r2,1708
 6aab228:	10a9b004 	addi	r2,r2,-22848
 6aab22c:	11000017 	ldw	r4,0(r2)
 6aab230:	180b883a 	mov	r5,r3
 6aab234:	6aab0181 	jmpi	6aab018 <_fflush_r>
 6aab238:	0081ab34 	movhi	r2,1708
 6aab23c:	10a9b104 	addi	r2,r2,-22844
 6aab240:	11000017 	ldw	r4,0(r2)
 6aab244:	6aac0481 	jmpi	6aac048 <_fwalk_reent>

06aab248 <std>:
 6aab248:	0081aaf4 	movhi	r2,1707
 6aab24c:	10b41804 	addi	r2,r2,-12192
 6aab250:	20800b15 	stw	r2,44(r4)
 6aab254:	0081aaf4 	movhi	r2,1707
 6aab258:	10b45304 	addi	r2,r2,-11956
 6aab25c:	20800815 	stw	r2,32(r4)
 6aab260:	00c1aaf4 	movhi	r3,1707
 6aab264:	18f43404 	addi	r3,r3,-12080
 6aab268:	0081aaf4 	movhi	r2,1707
 6aab26c:	10b41a04 	addi	r2,r2,-12184
 6aab270:	2140030d 	sth	r5,12(r4)
 6aab274:	2180038d 	sth	r6,14(r4)
 6aab278:	20c00915 	stw	r3,36(r4)
 6aab27c:	20800a15 	stw	r2,40(r4)
 6aab280:	20000015 	stw	zero,0(r4)
 6aab284:	20000115 	stw	zero,4(r4)
 6aab288:	20000215 	stw	zero,8(r4)
 6aab28c:	20000415 	stw	zero,16(r4)
 6aab290:	20000515 	stw	zero,20(r4)
 6aab294:	20000615 	stw	zero,24(r4)
 6aab298:	21000715 	stw	r4,28(r4)
 6aab29c:	f800283a 	ret

06aab2a0 <__sfp_lock_acquire>:
 6aab2a0:	f800283a 	ret

06aab2a4 <__sfp_lock_release>:
 6aab2a4:	f800283a 	ret

06aab2a8 <__sinit_lock_acquire>:
 6aab2a8:	f800283a 	ret

06aab2ac <__sinit_lock_release>:
 6aab2ac:	f800283a 	ret

06aab2b0 <__sinit>:
 6aab2b0:	20800e17 	ldw	r2,56(r4)
 6aab2b4:	defffd04 	addi	sp,sp,-12
 6aab2b8:	dc400115 	stw	r17,4(sp)
 6aab2bc:	dc000015 	stw	r16,0(sp)
 6aab2c0:	dfc00215 	stw	ra,8(sp)
 6aab2c4:	04400044 	movi	r17,1
 6aab2c8:	01400104 	movi	r5,4
 6aab2cc:	000d883a 	mov	r6,zero
 6aab2d0:	2021883a 	mov	r16,r4
 6aab2d4:	2200bb04 	addi	r8,r4,748
 6aab2d8:	200f883a 	mov	r7,r4
 6aab2dc:	10000526 	beq	r2,zero,6aab2f4 <__sinit+0x44>
 6aab2e0:	dfc00217 	ldw	ra,8(sp)
 6aab2e4:	dc400117 	ldw	r17,4(sp)
 6aab2e8:	dc000017 	ldw	r16,0(sp)
 6aab2ec:	dec00304 	addi	sp,sp,12
 6aab2f0:	f800283a 	ret
 6aab2f4:	21000117 	ldw	r4,4(r4)
 6aab2f8:	0081aaf4 	movhi	r2,1707
 6aab2fc:	10ace504 	addi	r2,r2,-19564
 6aab300:	00c000c4 	movi	r3,3
 6aab304:	80800f15 	stw	r2,60(r16)
 6aab308:	80c0b915 	stw	r3,740(r16)
 6aab30c:	8200ba15 	stw	r8,744(r16)
 6aab310:	84400e15 	stw	r17,56(r16)
 6aab314:	8000b815 	stw	zero,736(r16)
 6aab318:	6aab2480 	call	6aab248 <std>
 6aab31c:	81000217 	ldw	r4,8(r16)
 6aab320:	880d883a 	mov	r6,r17
 6aab324:	800f883a 	mov	r7,r16
 6aab328:	01400284 	movi	r5,10
 6aab32c:	6aab2480 	call	6aab248 <std>
 6aab330:	81000317 	ldw	r4,12(r16)
 6aab334:	800f883a 	mov	r7,r16
 6aab338:	01400484 	movi	r5,18
 6aab33c:	01800084 	movi	r6,2
 6aab340:	dfc00217 	ldw	ra,8(sp)
 6aab344:	dc400117 	ldw	r17,4(sp)
 6aab348:	dc000017 	ldw	r16,0(sp)
 6aab34c:	dec00304 	addi	sp,sp,12
 6aab350:	6aab2481 	jmpi	6aab248 <std>

06aab354 <__fp_lock>:
 6aab354:	0005883a 	mov	r2,zero
 6aab358:	f800283a 	ret

06aab35c <__fp_unlock>:
 6aab35c:	0005883a 	mov	r2,zero
 6aab360:	f800283a 	ret

06aab364 <__fp_unlock_all>:
 6aab364:	0081ab34 	movhi	r2,1708
 6aab368:	10a9b004 	addi	r2,r2,-22848
 6aab36c:	11000017 	ldw	r4,0(r2)
 6aab370:	0141aaf4 	movhi	r5,1707
 6aab374:	296cd704 	addi	r5,r5,-19620
 6aab378:	6aac1101 	jmpi	6aac110 <_fwalk>

06aab37c <__fp_lock_all>:
 6aab37c:	0081ab34 	movhi	r2,1708
 6aab380:	10a9b004 	addi	r2,r2,-22848
 6aab384:	11000017 	ldw	r4,0(r2)
 6aab388:	0141aaf4 	movhi	r5,1707
 6aab38c:	296cd504 	addi	r5,r5,-19628
 6aab390:	6aac1101 	jmpi	6aac110 <_fwalk>

06aab394 <_cleanup_r>:
 6aab394:	0141aaf4 	movhi	r5,1707
 6aab398:	296c0104 	addi	r5,r5,-20476
 6aab39c:	6aac1101 	jmpi	6aac110 <_fwalk>

06aab3a0 <_cleanup>:
 6aab3a0:	0081ab34 	movhi	r2,1708
 6aab3a4:	10a9b104 	addi	r2,r2,-22844
 6aab3a8:	11000017 	ldw	r4,0(r2)
 6aab3ac:	6aab3941 	jmpi	6aab394 <_cleanup_r>

06aab3b0 <__sfmoreglue>:
 6aab3b0:	defffc04 	addi	sp,sp,-16
 6aab3b4:	dc400115 	stw	r17,4(sp)
 6aab3b8:	2c401724 	muli	r17,r5,92
 6aab3bc:	dc800215 	stw	r18,8(sp)
 6aab3c0:	2825883a 	mov	r18,r5
 6aab3c4:	89400304 	addi	r5,r17,12
 6aab3c8:	dc000015 	stw	r16,0(sp)
 6aab3cc:	dfc00315 	stw	ra,12(sp)
 6aab3d0:	6aac35c0 	call	6aac35c <_malloc_r>
 6aab3d4:	0021883a 	mov	r16,zero
 6aab3d8:	880d883a 	mov	r6,r17
 6aab3dc:	000b883a 	mov	r5,zero
 6aab3e0:	10000626 	beq	r2,zero,6aab3fc <__sfmoreglue+0x4c>
 6aab3e4:	11000304 	addi	r4,r2,12
 6aab3e8:	14800115 	stw	r18,4(r2)
 6aab3ec:	10000015 	stw	zero,0(r2)
 6aab3f0:	11000215 	stw	r4,8(r2)
 6aab3f4:	1021883a 	mov	r16,r2
 6aab3f8:	6aaca9c0 	call	6aaca9c <memset>
 6aab3fc:	8005883a 	mov	r2,r16
 6aab400:	dfc00317 	ldw	ra,12(sp)
 6aab404:	dc800217 	ldw	r18,8(sp)
 6aab408:	dc400117 	ldw	r17,4(sp)
 6aab40c:	dc000017 	ldw	r16,0(sp)
 6aab410:	dec00404 	addi	sp,sp,16
 6aab414:	f800283a 	ret

06aab418 <__sfp>:
 6aab418:	defffd04 	addi	sp,sp,-12
 6aab41c:	0081ab34 	movhi	r2,1708
 6aab420:	10a9b104 	addi	r2,r2,-22844
 6aab424:	dc000015 	stw	r16,0(sp)
 6aab428:	14000017 	ldw	r16,0(r2)
 6aab42c:	dc400115 	stw	r17,4(sp)
 6aab430:	dfc00215 	stw	ra,8(sp)
 6aab434:	80800e17 	ldw	r2,56(r16)
 6aab438:	2023883a 	mov	r17,r4
 6aab43c:	10002626 	beq	r2,zero,6aab4d8 <__sfp+0xc0>
 6aab440:	8400b804 	addi	r16,r16,736
 6aab444:	80800117 	ldw	r2,4(r16)
 6aab448:	81000217 	ldw	r4,8(r16)
 6aab44c:	10ffffc4 	addi	r3,r2,-1
 6aab450:	18000916 	blt	r3,zero,6aab478 <__sfp+0x60>
 6aab454:	2080030f 	ldh	r2,12(r4)
 6aab458:	10000b26 	beq	r2,zero,6aab488 <__sfp+0x70>
 6aab45c:	017fffc4 	movi	r5,-1
 6aab460:	00000206 	br	6aab46c <__sfp+0x54>
 6aab464:	2080030f 	ldh	r2,12(r4)
 6aab468:	10000726 	beq	r2,zero,6aab488 <__sfp+0x70>
 6aab46c:	18ffffc4 	addi	r3,r3,-1
 6aab470:	21001704 	addi	r4,r4,92
 6aab474:	197ffb1e 	bne	r3,r5,6aab464 <__sfp+0x4c>
 6aab478:	80800017 	ldw	r2,0(r16)
 6aab47c:	10001926 	beq	r2,zero,6aab4e4 <__sfp+0xcc>
 6aab480:	1021883a 	mov	r16,r2
 6aab484:	003fef06 	br	6aab444 <__sfp+0x2c>
 6aab488:	00bfffc4 	movi	r2,-1
 6aab48c:	00c00044 	movi	r3,1
 6aab490:	2080038d 	sth	r2,14(r4)
 6aab494:	20c0030d 	sth	r3,12(r4)
 6aab498:	20000015 	stw	zero,0(r4)
 6aab49c:	20000215 	stw	zero,8(r4)
 6aab4a0:	20000115 	stw	zero,4(r4)
 6aab4a4:	20000415 	stw	zero,16(r4)
 6aab4a8:	20000515 	stw	zero,20(r4)
 6aab4ac:	20000615 	stw	zero,24(r4)
 6aab4b0:	20000c15 	stw	zero,48(r4)
 6aab4b4:	20000d15 	stw	zero,52(r4)
 6aab4b8:	20001115 	stw	zero,68(r4)
 6aab4bc:	20001215 	stw	zero,72(r4)
 6aab4c0:	2005883a 	mov	r2,r4
 6aab4c4:	dfc00217 	ldw	ra,8(sp)
 6aab4c8:	dc400117 	ldw	r17,4(sp)
 6aab4cc:	dc000017 	ldw	r16,0(sp)
 6aab4d0:	dec00304 	addi	sp,sp,12
 6aab4d4:	f800283a 	ret
 6aab4d8:	8009883a 	mov	r4,r16
 6aab4dc:	6aab2b00 	call	6aab2b0 <__sinit>
 6aab4e0:	003fd706 	br	6aab440 <__sfp+0x28>
 6aab4e4:	8809883a 	mov	r4,r17
 6aab4e8:	01400104 	movi	r5,4
 6aab4ec:	6aab3b00 	call	6aab3b0 <__sfmoreglue>
 6aab4f0:	80800015 	stw	r2,0(r16)
 6aab4f4:	103fe21e 	bne	r2,zero,6aab480 <__sfp+0x68>
 6aab4f8:	00800304 	movi	r2,12
 6aab4fc:	0009883a 	mov	r4,zero
 6aab500:	88800015 	stw	r2,0(r17)
 6aab504:	003fee06 	br	6aab4c0 <__sfp+0xa8>

06aab508 <_fopen_r>:
 6aab508:	defffa04 	addi	sp,sp,-24
 6aab50c:	dcc00415 	stw	r19,16(sp)
 6aab510:	2827883a 	mov	r19,r5
 6aab514:	300b883a 	mov	r5,r6
 6aab518:	d80d883a 	mov	r6,sp
 6aab51c:	dc800315 	stw	r18,12(sp)
 6aab520:	dc400215 	stw	r17,8(sp)
 6aab524:	dc000115 	stw	r16,4(sp)
 6aab528:	dfc00515 	stw	ra,20(sp)
 6aab52c:	2021883a 	mov	r16,r4
 6aab530:	6ab0dcc0 	call	6ab0dcc <__sflags>
 6aab534:	1025883a 	mov	r18,r2
 6aab538:	8009883a 	mov	r4,r16
 6aab53c:	0023883a 	mov	r17,zero
 6aab540:	1000081e 	bne	r2,zero,6aab564 <_fopen_r+0x5c>
 6aab544:	8805883a 	mov	r2,r17
 6aab548:	dfc00517 	ldw	ra,20(sp)
 6aab54c:	dcc00417 	ldw	r19,16(sp)
 6aab550:	dc800317 	ldw	r18,12(sp)
 6aab554:	dc400217 	ldw	r17,8(sp)
 6aab558:	dc000117 	ldw	r16,4(sp)
 6aab55c:	dec00604 	addi	sp,sp,24
 6aab560:	f800283a 	ret
 6aab564:	6aab4180 	call	6aab418 <__sfp>
 6aab568:	1023883a 	mov	r17,r2
 6aab56c:	980b883a 	mov	r5,r19
 6aab570:	8009883a 	mov	r4,r16
 6aab574:	01c06d84 	movi	r7,438
 6aab578:	103ff226 	beq	r2,zero,6aab544 <_fopen_r+0x3c>
 6aab57c:	d9800017 	ldw	r6,0(sp)
 6aab580:	6aacb340 	call	6aacb34 <_open_r>
 6aab584:	10001816 	blt	r2,zero,6aab5e8 <_fopen_r+0xe0>
 6aab588:	00c1aaf4 	movhi	r3,1707
 6aab58c:	18f43404 	addi	r3,r3,-12080
 6aab590:	923fffcc 	andi	r8,r18,65535
 6aab594:	8880038d 	sth	r2,14(r17)
 6aab598:	0081aaf4 	movhi	r2,1707
 6aab59c:	10b45304 	addi	r2,r2,-11956
 6aab5a0:	88800815 	stw	r2,32(r17)
 6aab5a4:	88c00915 	stw	r3,36(r17)
 6aab5a8:	0081aaf4 	movhi	r2,1707
 6aab5ac:	10b41a04 	addi	r2,r2,-12184
 6aab5b0:	00c1aaf4 	movhi	r3,1707
 6aab5b4:	18f41804 	addi	r3,r3,-12192
 6aab5b8:	4200400c 	andi	r8,r8,256
 6aab5bc:	8c80030d 	sth	r18,12(r17)
 6aab5c0:	8009883a 	mov	r4,r16
 6aab5c4:	880b883a 	mov	r5,r17
 6aab5c8:	000d883a 	mov	r6,zero
 6aab5cc:	01c00084 	movi	r7,2
 6aab5d0:	88800a15 	stw	r2,40(r17)
 6aab5d4:	88c00b15 	stw	r3,44(r17)
 6aab5d8:	8c400715 	stw	r17,28(r17)
 6aab5dc:	403fd926 	beq	r8,zero,6aab544 <_fopen_r+0x3c>
 6aab5e0:	6aabb740 	call	6aabb74 <_fseek_r>
 6aab5e4:	003fd706 	br	6aab544 <_fopen_r+0x3c>
 6aab5e8:	6aab2a00 	call	6aab2a0 <__sfp_lock_acquire>
 6aab5ec:	8800030d 	sth	zero,12(r17)
 6aab5f0:	6aab2a40 	call	6aab2a4 <__sfp_lock_release>
 6aab5f4:	0023883a 	mov	r17,zero
 6aab5f8:	003fd206 	br	6aab544 <_fopen_r+0x3c>

06aab5fc <fopen>:
 6aab5fc:	0181ab34 	movhi	r6,1708
 6aab600:	31a9b004 	addi	r6,r6,-22848
 6aab604:	2007883a 	mov	r3,r4
 6aab608:	31000017 	ldw	r4,0(r6)
 6aab60c:	280d883a 	mov	r6,r5
 6aab610:	180b883a 	mov	r5,r3
 6aab614:	6aab5081 	jmpi	6aab508 <_fopen_r>

06aab618 <fprintf>:
 6aab618:	defffc04 	addi	sp,sp,-16
 6aab61c:	dfc00115 	stw	ra,4(sp)
 6aab620:	d9800215 	stw	r6,8(sp)
 6aab624:	d9c00315 	stw	r7,12(sp)
 6aab628:	d8800204 	addi	r2,sp,8
 6aab62c:	100d883a 	mov	r6,r2
 6aab630:	d8800015 	stw	r2,0(sp)
 6aab634:	6aaf0b80 	call	6aaf0b8 <__vfprintf_internal>
 6aab638:	dfc00117 	ldw	ra,4(sp)
 6aab63c:	dec00404 	addi	sp,sp,16
 6aab640:	f800283a 	ret

06aab644 <_fprintf_r>:
 6aab644:	defffd04 	addi	sp,sp,-12
 6aab648:	2807883a 	mov	r3,r5
 6aab64c:	dfc00115 	stw	ra,4(sp)
 6aab650:	d9c00215 	stw	r7,8(sp)
 6aab654:	d8800204 	addi	r2,sp,8
 6aab658:	300b883a 	mov	r5,r6
 6aab65c:	1809883a 	mov	r4,r3
 6aab660:	100d883a 	mov	r6,r2
 6aab664:	d8800015 	stw	r2,0(sp)
 6aab668:	6aaf0b80 	call	6aaf0b8 <__vfprintf_internal>
 6aab66c:	dfc00117 	ldw	ra,4(sp)
 6aab670:	dec00304 	addi	sp,sp,12
 6aab674:	f800283a 	ret

06aab678 <fputc>:
 6aab678:	defffc04 	addi	sp,sp,-16
 6aab67c:	dc800215 	stw	r18,8(sp)
 6aab680:	0481ab34 	movhi	r18,1708
 6aab684:	94a9b004 	addi	r18,r18,-22848
 6aab688:	90c00017 	ldw	r3,0(r18)
 6aab68c:	dc400115 	stw	r17,4(sp)
 6aab690:	dc000015 	stw	r16,0(sp)
 6aab694:	dfc00315 	stw	ra,12(sp)
 6aab698:	2021883a 	mov	r16,r4
 6aab69c:	2823883a 	mov	r17,r5
 6aab6a0:	18000326 	beq	r3,zero,6aab6b0 <fputc+0x38>
 6aab6a4:	18800e17 	ldw	r2,56(r3)
 6aab6a8:	1809883a 	mov	r4,r3
 6aab6ac:	10000926 	beq	r2,zero,6aab6d4 <fputc+0x5c>
 6aab6b0:	91000017 	ldw	r4,0(r18)
 6aab6b4:	800b883a 	mov	r5,r16
 6aab6b8:	880d883a 	mov	r6,r17
 6aab6bc:	dfc00317 	ldw	ra,12(sp)
 6aab6c0:	dc800217 	ldw	r18,8(sp)
 6aab6c4:	dc400117 	ldw	r17,4(sp)
 6aab6c8:	dc000017 	ldw	r16,0(sp)
 6aab6cc:	dec00404 	addi	sp,sp,16
 6aab6d0:	6aacd281 	jmpi	6aacd28 <_putc_r>
 6aab6d4:	6aab2b00 	call	6aab2b0 <__sinit>
 6aab6d8:	003ff506 	br	6aab6b0 <fputc+0x38>

06aab6dc <_fputc_r>:
 6aab6dc:	defffc04 	addi	sp,sp,-16
 6aab6e0:	dc800215 	stw	r18,8(sp)
 6aab6e4:	dc400115 	stw	r17,4(sp)
 6aab6e8:	dc000015 	stw	r16,0(sp)
 6aab6ec:	dfc00315 	stw	ra,12(sp)
 6aab6f0:	2021883a 	mov	r16,r4
 6aab6f4:	2823883a 	mov	r17,r5
 6aab6f8:	3025883a 	mov	r18,r6
 6aab6fc:	20000226 	beq	r4,zero,6aab708 <_fputc_r+0x2c>
 6aab700:	20800e17 	ldw	r2,56(r4)
 6aab704:	10000926 	beq	r2,zero,6aab72c <_fputc_r+0x50>
 6aab708:	8009883a 	mov	r4,r16
 6aab70c:	880b883a 	mov	r5,r17
 6aab710:	900d883a 	mov	r6,r18
 6aab714:	dfc00317 	ldw	ra,12(sp)
 6aab718:	dc800217 	ldw	r18,8(sp)
 6aab71c:	dc400117 	ldw	r17,4(sp)
 6aab720:	dc000017 	ldw	r16,0(sp)
 6aab724:	dec00404 	addi	sp,sp,16
 6aab728:	6aacd281 	jmpi	6aacd28 <_putc_r>
 6aab72c:	6aab2b00 	call	6aab2b0 <__sinit>
 6aab730:	003ff506 	br	6aab708 <_fputc_r+0x2c>

06aab734 <_malloc_trim_r>:
 6aab734:	defffb04 	addi	sp,sp,-20
 6aab738:	dcc00315 	stw	r19,12(sp)
 6aab73c:	04c1ab34 	movhi	r19,1708
 6aab740:	9ce41f04 	addi	r19,r19,-28548
 6aab744:	dc800215 	stw	r18,8(sp)
 6aab748:	dc400115 	stw	r17,4(sp)
 6aab74c:	dc000015 	stw	r16,0(sp)
 6aab750:	2823883a 	mov	r17,r5
 6aab754:	2025883a 	mov	r18,r4
 6aab758:	dfc00415 	stw	ra,16(sp)
 6aab75c:	6ab5ae00 	call	6ab5ae0 <__malloc_lock>
 6aab760:	98800217 	ldw	r2,8(r19)
 6aab764:	9009883a 	mov	r4,r18
 6aab768:	000b883a 	mov	r5,zero
 6aab76c:	10c00117 	ldw	r3,4(r2)
 6aab770:	00bfff04 	movi	r2,-4
 6aab774:	18a0703a 	and	r16,r3,r2
 6aab778:	8463c83a 	sub	r17,r16,r17
 6aab77c:	8c43fbc4 	addi	r17,r17,4079
 6aab780:	8822d33a 	srli	r17,r17,12
 6aab784:	0083ffc4 	movi	r2,4095
 6aab788:	8c7fffc4 	addi	r17,r17,-1
 6aab78c:	8822933a 	slli	r17,r17,12
 6aab790:	1440060e 	bge	r2,r17,6aab7ac <_malloc_trim_r+0x78>
 6aab794:	6aacff00 	call	6aacff0 <_sbrk_r>
 6aab798:	98c00217 	ldw	r3,8(r19)
 6aab79c:	9009883a 	mov	r4,r18
 6aab7a0:	044bc83a 	sub	r5,zero,r17
 6aab7a4:	80c7883a 	add	r3,r16,r3
 6aab7a8:	10c00926 	beq	r2,r3,6aab7d0 <_malloc_trim_r+0x9c>
 6aab7ac:	6ab5b000 	call	6ab5b00 <__malloc_unlock>
 6aab7b0:	0005883a 	mov	r2,zero
 6aab7b4:	dfc00417 	ldw	ra,16(sp)
 6aab7b8:	dcc00317 	ldw	r19,12(sp)
 6aab7bc:	dc800217 	ldw	r18,8(sp)
 6aab7c0:	dc400117 	ldw	r17,4(sp)
 6aab7c4:	dc000017 	ldw	r16,0(sp)
 6aab7c8:	dec00504 	addi	sp,sp,20
 6aab7cc:	f800283a 	ret
 6aab7d0:	9009883a 	mov	r4,r18
 6aab7d4:	6aacff00 	call	6aacff0 <_sbrk_r>
 6aab7d8:	844dc83a 	sub	r6,r16,r17
 6aab7dc:	00ffffc4 	movi	r3,-1
 6aab7e0:	9009883a 	mov	r4,r18
 6aab7e4:	000b883a 	mov	r5,zero
 6aab7e8:	01c1ab34 	movhi	r7,1708
 6aab7ec:	39f09204 	addi	r7,r7,-15800
 6aab7f0:	31800054 	ori	r6,r6,1
 6aab7f4:	10c00926 	beq	r2,r3,6aab81c <_malloc_trim_r+0xe8>
 6aab7f8:	38800017 	ldw	r2,0(r7)
 6aab7fc:	98c00217 	ldw	r3,8(r19)
 6aab800:	9009883a 	mov	r4,r18
 6aab804:	1445c83a 	sub	r2,r2,r17
 6aab808:	38800015 	stw	r2,0(r7)
 6aab80c:	19800115 	stw	r6,4(r3)
 6aab810:	6ab5b000 	call	6ab5b00 <__malloc_unlock>
 6aab814:	00800044 	movi	r2,1
 6aab818:	003fe606 	br	6aab7b4 <_malloc_trim_r+0x80>
 6aab81c:	6aacff00 	call	6aacff0 <_sbrk_r>
 6aab820:	99800217 	ldw	r6,8(r19)
 6aab824:	100f883a 	mov	r7,r2
 6aab828:	9009883a 	mov	r4,r18
 6aab82c:	1187c83a 	sub	r3,r2,r6
 6aab830:	008003c4 	movi	r2,15
 6aab834:	19400054 	ori	r5,r3,1
 6aab838:	10ffdc0e 	bge	r2,r3,6aab7ac <_malloc_trim_r+0x78>
 6aab83c:	0081ab34 	movhi	r2,1708
 6aab840:	10a9b304 	addi	r2,r2,-22836
 6aab844:	10c00017 	ldw	r3,0(r2)
 6aab848:	0081ab34 	movhi	r2,1708
 6aab84c:	10b09204 	addi	r2,r2,-15800
 6aab850:	31400115 	stw	r5,4(r6)
 6aab854:	38c7c83a 	sub	r3,r7,r3
 6aab858:	10c00015 	stw	r3,0(r2)
 6aab85c:	003fd306 	br	6aab7ac <_malloc_trim_r+0x78>

06aab860 <_free_r>:
 6aab860:	defffd04 	addi	sp,sp,-12
 6aab864:	dc400115 	stw	r17,4(sp)
 6aab868:	dc000015 	stw	r16,0(sp)
 6aab86c:	dfc00215 	stw	ra,8(sp)
 6aab870:	2821883a 	mov	r16,r5
 6aab874:	2023883a 	mov	r17,r4
 6aab878:	28005a26 	beq	r5,zero,6aab9e4 <_free_r+0x184>
 6aab87c:	6ab5ae00 	call	6ab5ae0 <__malloc_lock>
 6aab880:	823ffe04 	addi	r8,r16,-8
 6aab884:	41400117 	ldw	r5,4(r8)
 6aab888:	00bfff84 	movi	r2,-2
 6aab88c:	0281ab34 	movhi	r10,1708
 6aab890:	52a41f04 	addi	r10,r10,-28548
 6aab894:	288e703a 	and	r7,r5,r2
 6aab898:	41cd883a 	add	r6,r8,r7
 6aab89c:	30c00117 	ldw	r3,4(r6)
 6aab8a0:	51000217 	ldw	r4,8(r10)
 6aab8a4:	00bfff04 	movi	r2,-4
 6aab8a8:	1892703a 	and	r9,r3,r2
 6aab8ac:	5017883a 	mov	r11,r10
 6aab8b0:	31006726 	beq	r6,r4,6aaba50 <_free_r+0x1f0>
 6aab8b4:	2880004c 	andi	r2,r5,1
 6aab8b8:	1005003a 	cmpeq	r2,r2,zero
 6aab8bc:	32400115 	stw	r9,4(r6)
 6aab8c0:	10001a1e 	bne	r2,zero,6aab92c <_free_r+0xcc>
 6aab8c4:	000b883a 	mov	r5,zero
 6aab8c8:	3247883a 	add	r3,r6,r9
 6aab8cc:	18800117 	ldw	r2,4(r3)
 6aab8d0:	1080004c 	andi	r2,r2,1
 6aab8d4:	1000231e 	bne	r2,zero,6aab964 <_free_r+0x104>
 6aab8d8:	280ac03a 	cmpne	r5,r5,zero
 6aab8dc:	3a4f883a 	add	r7,r7,r9
 6aab8e0:	2800451e 	bne	r5,zero,6aab9f8 <_free_r+0x198>
 6aab8e4:	31000217 	ldw	r4,8(r6)
 6aab8e8:	0081ab34 	movhi	r2,1708
 6aab8ec:	10a42104 	addi	r2,r2,-28540
 6aab8f0:	20807b26 	beq	r4,r2,6aabae0 <_free_r+0x280>
 6aab8f4:	30800317 	ldw	r2,12(r6)
 6aab8f8:	3a07883a 	add	r3,r7,r8
 6aab8fc:	19c00015 	stw	r7,0(r3)
 6aab900:	11000215 	stw	r4,8(r2)
 6aab904:	20800315 	stw	r2,12(r4)
 6aab908:	38800054 	ori	r2,r7,1
 6aab90c:	40800115 	stw	r2,4(r8)
 6aab910:	28001a26 	beq	r5,zero,6aab97c <_free_r+0x11c>
 6aab914:	8809883a 	mov	r4,r17
 6aab918:	dfc00217 	ldw	ra,8(sp)
 6aab91c:	dc400117 	ldw	r17,4(sp)
 6aab920:	dc000017 	ldw	r16,0(sp)
 6aab924:	dec00304 	addi	sp,sp,12
 6aab928:	6ab5b001 	jmpi	6ab5b00 <__malloc_unlock>
 6aab92c:	80bffe17 	ldw	r2,-8(r16)
 6aab930:	50c00204 	addi	r3,r10,8
 6aab934:	4091c83a 	sub	r8,r8,r2
 6aab938:	41000217 	ldw	r4,8(r8)
 6aab93c:	388f883a 	add	r7,r7,r2
 6aab940:	20c06126 	beq	r4,r3,6aabac8 <_free_r+0x268>
 6aab944:	40800317 	ldw	r2,12(r8)
 6aab948:	3247883a 	add	r3,r6,r9
 6aab94c:	000b883a 	mov	r5,zero
 6aab950:	11000215 	stw	r4,8(r2)
 6aab954:	20800315 	stw	r2,12(r4)
 6aab958:	18800117 	ldw	r2,4(r3)
 6aab95c:	1080004c 	andi	r2,r2,1
 6aab960:	103fdd26 	beq	r2,zero,6aab8d8 <_free_r+0x78>
 6aab964:	38800054 	ori	r2,r7,1
 6aab968:	3a07883a 	add	r3,r7,r8
 6aab96c:	280ac03a 	cmpne	r5,r5,zero
 6aab970:	40800115 	stw	r2,4(r8)
 6aab974:	19c00015 	stw	r7,0(r3)
 6aab978:	283fe61e 	bne	r5,zero,6aab914 <_free_r+0xb4>
 6aab97c:	00807fc4 	movi	r2,511
 6aab980:	11c01f2e 	bgeu	r2,r7,6aaba00 <_free_r+0x1a0>
 6aab984:	3806d27a 	srli	r3,r7,9
 6aab988:	1800481e 	bne	r3,zero,6aabaac <_free_r+0x24c>
 6aab98c:	3804d0fa 	srli	r2,r7,3
 6aab990:	100690fa 	slli	r3,r2,3
 6aab994:	1acd883a 	add	r6,r3,r11
 6aab998:	31400217 	ldw	r5,8(r6)
 6aab99c:	31405926 	beq	r6,r5,6aabb04 <_free_r+0x2a4>
 6aab9a0:	28800117 	ldw	r2,4(r5)
 6aab9a4:	00ffff04 	movi	r3,-4
 6aab9a8:	10c4703a 	and	r2,r2,r3
 6aab9ac:	3880022e 	bgeu	r7,r2,6aab9b8 <_free_r+0x158>
 6aab9b0:	29400217 	ldw	r5,8(r5)
 6aab9b4:	317ffa1e 	bne	r6,r5,6aab9a0 <_free_r+0x140>
 6aab9b8:	29800317 	ldw	r6,12(r5)
 6aab9bc:	41800315 	stw	r6,12(r8)
 6aab9c0:	41400215 	stw	r5,8(r8)
 6aab9c4:	8809883a 	mov	r4,r17
 6aab9c8:	2a000315 	stw	r8,12(r5)
 6aab9cc:	32000215 	stw	r8,8(r6)
 6aab9d0:	dfc00217 	ldw	ra,8(sp)
 6aab9d4:	dc400117 	ldw	r17,4(sp)
 6aab9d8:	dc000017 	ldw	r16,0(sp)
 6aab9dc:	dec00304 	addi	sp,sp,12
 6aab9e0:	6ab5b001 	jmpi	6ab5b00 <__malloc_unlock>
 6aab9e4:	dfc00217 	ldw	ra,8(sp)
 6aab9e8:	dc400117 	ldw	r17,4(sp)
 6aab9ec:	dc000017 	ldw	r16,0(sp)
 6aab9f0:	dec00304 	addi	sp,sp,12
 6aab9f4:	f800283a 	ret
 6aab9f8:	31000217 	ldw	r4,8(r6)
 6aab9fc:	003fbd06 	br	6aab8f4 <_free_r+0x94>
 6aaba00:	3806d0fa 	srli	r3,r7,3
 6aaba04:	00800044 	movi	r2,1
 6aaba08:	51400117 	ldw	r5,4(r10)
 6aaba0c:	180890fa 	slli	r4,r3,3
 6aaba10:	1807d0ba 	srai	r3,r3,2
 6aaba14:	22c9883a 	add	r4,r4,r11
 6aaba18:	21800217 	ldw	r6,8(r4)
 6aaba1c:	10c4983a 	sll	r2,r2,r3
 6aaba20:	41000315 	stw	r4,12(r8)
 6aaba24:	41800215 	stw	r6,8(r8)
 6aaba28:	288ab03a 	or	r5,r5,r2
 6aaba2c:	22000215 	stw	r8,8(r4)
 6aaba30:	8809883a 	mov	r4,r17
 6aaba34:	51400115 	stw	r5,4(r10)
 6aaba38:	32000315 	stw	r8,12(r6)
 6aaba3c:	dfc00217 	ldw	ra,8(sp)
 6aaba40:	dc400117 	ldw	r17,4(sp)
 6aaba44:	dc000017 	ldw	r16,0(sp)
 6aaba48:	dec00304 	addi	sp,sp,12
 6aaba4c:	6ab5b001 	jmpi	6ab5b00 <__malloc_unlock>
 6aaba50:	2880004c 	andi	r2,r5,1
 6aaba54:	3a4d883a 	add	r6,r7,r9
 6aaba58:	1000071e 	bne	r2,zero,6aaba78 <_free_r+0x218>
 6aaba5c:	80bffe17 	ldw	r2,-8(r16)
 6aaba60:	4091c83a 	sub	r8,r8,r2
 6aaba64:	41000317 	ldw	r4,12(r8)
 6aaba68:	40c00217 	ldw	r3,8(r8)
 6aaba6c:	308d883a 	add	r6,r6,r2
 6aaba70:	20c00215 	stw	r3,8(r4)
 6aaba74:	19000315 	stw	r4,12(r3)
 6aaba78:	0081ab34 	movhi	r2,1708
 6aaba7c:	10a9b204 	addi	r2,r2,-22840
 6aaba80:	11000017 	ldw	r4,0(r2)
 6aaba84:	30c00054 	ori	r3,r6,1
 6aaba88:	52000215 	stw	r8,8(r10)
 6aaba8c:	40c00115 	stw	r3,4(r8)
 6aaba90:	313fa036 	bltu	r6,r4,6aab914 <_free_r+0xb4>
 6aaba94:	0081ab34 	movhi	r2,1708
 6aaba98:	10b08604 	addi	r2,r2,-15848
 6aaba9c:	11400017 	ldw	r5,0(r2)
 6aabaa0:	8809883a 	mov	r4,r17
 6aabaa4:	6aab7340 	call	6aab734 <_malloc_trim_r>
 6aabaa8:	003f9a06 	br	6aab914 <_free_r+0xb4>
 6aabaac:	00800104 	movi	r2,4
 6aabab0:	10c0072e 	bgeu	r2,r3,6aabad0 <_free_r+0x270>
 6aabab4:	00800504 	movi	r2,20
 6aabab8:	10c01936 	bltu	r2,r3,6aabb20 <_free_r+0x2c0>
 6aababc:	188016c4 	addi	r2,r3,91
 6aabac0:	100690fa 	slli	r3,r2,3
 6aabac4:	003fb306 	br	6aab994 <_free_r+0x134>
 6aabac8:	01400044 	movi	r5,1
 6aabacc:	003f7e06 	br	6aab8c8 <_free_r+0x68>
 6aabad0:	3804d1ba 	srli	r2,r7,6
 6aabad4:	10800e04 	addi	r2,r2,56
 6aabad8:	100690fa 	slli	r3,r2,3
 6aabadc:	003fad06 	br	6aab994 <_free_r+0x134>
 6aabae0:	22000315 	stw	r8,12(r4)
 6aabae4:	22000215 	stw	r8,8(r4)
 6aabae8:	3a05883a 	add	r2,r7,r8
 6aabaec:	38c00054 	ori	r3,r7,1
 6aabaf0:	11c00015 	stw	r7,0(r2)
 6aabaf4:	41000215 	stw	r4,8(r8)
 6aabaf8:	40c00115 	stw	r3,4(r8)
 6aabafc:	41000315 	stw	r4,12(r8)
 6aabb00:	003f8406 	br	6aab914 <_free_r+0xb4>
 6aabb04:	1005d0ba 	srai	r2,r2,2
 6aabb08:	00c00044 	movi	r3,1
 6aabb0c:	51000117 	ldw	r4,4(r10)
 6aabb10:	1886983a 	sll	r3,r3,r2
 6aabb14:	20c8b03a 	or	r4,r4,r3
 6aabb18:	51000115 	stw	r4,4(r10)
 6aabb1c:	003fa706 	br	6aab9bc <_free_r+0x15c>
 6aabb20:	00801504 	movi	r2,84
 6aabb24:	10c00436 	bltu	r2,r3,6aabb38 <_free_r+0x2d8>
 6aabb28:	3804d33a 	srli	r2,r7,12
 6aabb2c:	10801b84 	addi	r2,r2,110
 6aabb30:	100690fa 	slli	r3,r2,3
 6aabb34:	003f9706 	br	6aab994 <_free_r+0x134>
 6aabb38:	00805504 	movi	r2,340
 6aabb3c:	10c00436 	bltu	r2,r3,6aabb50 <_free_r+0x2f0>
 6aabb40:	3804d3fa 	srli	r2,r7,15
 6aabb44:	10801dc4 	addi	r2,r2,119
 6aabb48:	100690fa 	slli	r3,r2,3
 6aabb4c:	003f9106 	br	6aab994 <_free_r+0x134>
 6aabb50:	00815504 	movi	r2,1364
 6aabb54:	10c0032e 	bgeu	r2,r3,6aabb64 <_free_r+0x304>
 6aabb58:	00801f84 	movi	r2,126
 6aabb5c:	00c0fc04 	movi	r3,1008
 6aabb60:	003f8c06 	br	6aab994 <_free_r+0x134>
 6aabb64:	3804d4ba 	srli	r2,r7,18
 6aabb68:	10801f04 	addi	r2,r2,124
 6aabb6c:	100690fa 	slli	r3,r2,3
 6aabb70:	003f8806 	br	6aab994 <_free_r+0x134>

06aabb74 <_fseek_r>:
 6aabb74:	deffe804 	addi	sp,sp,-96
 6aabb78:	dd801515 	stw	r22,84(sp)
 6aabb7c:	dcc01215 	stw	r19,72(sp)
 6aabb80:	dc801115 	stw	r18,68(sp)
 6aabb84:	dc000f15 	stw	r16,60(sp)
 6aabb88:	dfc01715 	stw	ra,92(sp)
 6aabb8c:	ddc01615 	stw	r23,88(sp)
 6aabb90:	dd401415 	stw	r21,80(sp)
 6aabb94:	dd001315 	stw	r20,76(sp)
 6aabb98:	dc401015 	stw	r17,64(sp)
 6aabb9c:	2025883a 	mov	r18,r4
 6aabba0:	2821883a 	mov	r16,r5
 6aabba4:	302d883a 	mov	r22,r6
 6aabba8:	3827883a 	mov	r19,r7
 6aabbac:	20000226 	beq	r4,zero,6aabbb8 <_fseek_r+0x44>
 6aabbb0:	20800e17 	ldw	r2,56(r4)
 6aabbb4:	10007826 	beq	r2,zero,6aabd98 <_fseek_r+0x224>
 6aabbb8:	8080030b 	ldhu	r2,12(r16)
 6aabbbc:	00c04204 	movi	r3,264
 6aabbc0:	1080420c 	andi	r2,r2,264
 6aabbc4:	10c07926 	beq	r2,r3,6aabdac <_fseek_r+0x238>
 6aabbc8:	85400a17 	ldw	r21,40(r16)
 6aabbcc:	a800ea26 	beq	r21,zero,6aabf78 <_fseek_r+0x404>
 6aabbd0:	00800044 	movi	r2,1
 6aabbd4:	98805f26 	beq	r19,r2,6aabd54 <_fseek_r+0x1e0>
 6aabbd8:	00800084 	movi	r2,2
 6aabbdc:	98801026 	beq	r19,r2,6aabc20 <_fseek_r+0xac>
 6aabbe0:	98000f26 	beq	r19,zero,6aabc20 <_fseek_r+0xac>
 6aabbe4:	00800584 	movi	r2,22
 6aabbe8:	013fffc4 	movi	r4,-1
 6aabbec:	90800015 	stw	r2,0(r18)
 6aabbf0:	2005883a 	mov	r2,r4
 6aabbf4:	dfc01717 	ldw	ra,92(sp)
 6aabbf8:	ddc01617 	ldw	r23,88(sp)
 6aabbfc:	dd801517 	ldw	r22,84(sp)
 6aabc00:	dd401417 	ldw	r21,80(sp)
 6aabc04:	dd001317 	ldw	r20,76(sp)
 6aabc08:	dcc01217 	ldw	r19,72(sp)
 6aabc0c:	dc801117 	ldw	r18,68(sp)
 6aabc10:	dc401017 	ldw	r17,64(sp)
 6aabc14:	dc000f17 	ldw	r16,60(sp)
 6aabc18:	dec01804 	addi	sp,sp,96
 6aabc1c:	f800283a 	ret
 6aabc20:	81800417 	ldw	r6,16(r16)
 6aabc24:	0023883a 	mov	r17,zero
 6aabc28:	002f883a 	mov	r23,zero
 6aabc2c:	3000a626 	beq	r6,zero,6aabec8 <_fseek_r+0x354>
 6aabc30:	8100030b 	ldhu	r4,12(r16)
 6aabc34:	2082068c 	andi	r2,r4,2074
 6aabc38:	1000081e 	bne	r2,zero,6aabc5c <_fseek_r+0xe8>
 6aabc3c:	2081000c 	andi	r2,r4,1024
 6aabc40:	10001b1e 	bne	r2,zero,6aabcb0 <_fseek_r+0x13c>
 6aabc44:	0081aaf4 	movhi	r2,1707
 6aabc48:	10b41a04 	addi	r2,r2,-12184
 6aabc4c:	a8800926 	beq	r21,r2,6aabc74 <_fseek_r+0x100>
 6aabc50:	8080030b 	ldhu	r2,12(r16)
 6aabc54:	10820014 	ori	r2,r2,2048
 6aabc58:	8080030d 	sth	r2,12(r16)
 6aabc5c:	9009883a 	mov	r4,r18
 6aabc60:	800b883a 	mov	r5,r16
 6aabc64:	6aab0180 	call	6aab018 <_fflush_r>
 6aabc68:	1000a326 	beq	r2,zero,6aabef8 <_fseek_r+0x384>
 6aabc6c:	013fffc4 	movi	r4,-1
 6aabc70:	003fdf06 	br	6aabbf0 <_fseek_r+0x7c>
 6aabc74:	8140038f 	ldh	r5,14(r16)
 6aabc78:	283ff516 	blt	r5,zero,6aabc50 <_fseek_r+0xdc>
 6aabc7c:	9009883a 	mov	r4,r18
 6aabc80:	d80d883a 	mov	r6,sp
 6aabc84:	6aabfd40 	call	6aabfd4 <_fstat_r>
 6aabc88:	103ff11e 	bne	r2,zero,6aabc50 <_fseek_r+0xdc>
 6aabc8c:	d8800117 	ldw	r2,4(sp)
 6aabc90:	00e00014 	movui	r3,32768
 6aabc94:	10bc000c 	andi	r2,r2,61440
 6aabc98:	10ffed1e 	bne	r2,r3,6aabc50 <_fseek_r+0xdc>
 6aabc9c:	80c0030b 	ldhu	r3,12(r16)
 6aabca0:	00810004 	movi	r2,1024
 6aabca4:	80801315 	stw	r2,76(r16)
 6aabca8:	1886b03a 	or	r3,r3,r2
 6aabcac:	80c0030d 	sth	r3,12(r16)
 6aabcb0:	9800701e 	bne	r19,zero,6aabe74 <_fseek_r+0x300>
 6aabcb4:	b029883a 	mov	r20,r22
 6aabcb8:	b804c03a 	cmpne	r2,r23,zero
 6aabcbc:	10003f1e 	bne	r2,zero,6aabdbc <_fseek_r+0x248>
 6aabcc0:	8100030b 	ldhu	r4,12(r16)
 6aabcc4:	2084000c 	andi	r2,r4,4096
 6aabcc8:	1000a126 	beq	r2,zero,6aabf50 <_fseek_r+0x3dc>
 6aabccc:	81801417 	ldw	r6,80(r16)
 6aabcd0:	80c00117 	ldw	r3,4(r16)
 6aabcd4:	81400c17 	ldw	r5,48(r16)
 6aabcd8:	30e3c83a 	sub	r17,r6,r3
 6aabcdc:	28008026 	beq	r5,zero,6aabee0 <_fseek_r+0x36c>
 6aabce0:	81c00f17 	ldw	r7,60(r16)
 6aabce4:	89e3c83a 	sub	r17,r17,r7
 6aabce8:	80800e17 	ldw	r2,56(r16)
 6aabcec:	81800417 	ldw	r6,16(r16)
 6aabcf0:	88c7883a 	add	r3,r17,r3
 6aabcf4:	1185c83a 	sub	r2,r2,r6
 6aabcf8:	11cf883a 	add	r7,r2,r7
 6aabcfc:	1887c83a 	sub	r3,r3,r2
 6aabd00:	2088000c 	andi	r2,r4,8192
 6aabd04:	10003e1e 	bne	r2,zero,6aabe00 <_fseek_r+0x28c>
 6aabd08:	a0c03d16 	blt	r20,r3,6aabe00 <_fseek_r+0x28c>
 6aabd0c:	38c5883a 	add	r2,r7,r3
 6aabd10:	a0803b2e 	bgeu	r20,r2,6aabe00 <_fseek_r+0x28c>
 6aabd14:	a0c5c83a 	sub	r2,r20,r3
 6aabd18:	3887c83a 	sub	r3,r7,r2
 6aabd1c:	3085883a 	add	r2,r6,r2
 6aabd20:	80800015 	stw	r2,0(r16)
 6aabd24:	80c00115 	stw	r3,4(r16)
 6aabd28:	28000526 	beq	r5,zero,6aabd40 <_fseek_r+0x1cc>
 6aabd2c:	80801004 	addi	r2,r16,64
 6aabd30:	28800226 	beq	r5,r2,6aabd3c <_fseek_r+0x1c8>
 6aabd34:	9009883a 	mov	r4,r18
 6aabd38:	6aab8600 	call	6aab860 <_free_r>
 6aabd3c:	80000c15 	stw	zero,48(r16)
 6aabd40:	8080030b 	ldhu	r2,12(r16)
 6aabd44:	0009883a 	mov	r4,zero
 6aabd48:	10bff7cc 	andi	r2,r2,65503
 6aabd4c:	8080030d 	sth	r2,12(r16)
 6aabd50:	003fa706 	br	6aabbf0 <_fseek_r+0x7c>
 6aabd54:	9009883a 	mov	r4,r18
 6aabd58:	800b883a 	mov	r5,r16
 6aabd5c:	6aab0180 	call	6aab018 <_fflush_r>
 6aabd60:	8100030b 	ldhu	r4,12(r16)
 6aabd64:	2084000c 	andi	r2,r4,4096
 6aabd68:	10008726 	beq	r2,zero,6aabf88 <_fseek_r+0x414>
 6aabd6c:	84401417 	ldw	r17,80(r16)
 6aabd70:	2080010c 	andi	r2,r4,4
 6aabd74:	1000171e 	bne	r2,zero,6aabdd4 <_fseek_r+0x260>
 6aabd78:	2080020c 	andi	r2,r4,8
 6aabd7c:	10003b26 	beq	r2,zero,6aabe6c <_fseek_r+0x2f8>
 6aabd80:	80800017 	ldw	r2,0(r16)
 6aabd84:	10003926 	beq	r2,zero,6aabe6c <_fseek_r+0x2f8>
 6aabd88:	81800417 	ldw	r6,16(r16)
 6aabd8c:	1185c83a 	sub	r2,r2,r6
 6aabd90:	88a3883a 	add	r17,r17,r2
 6aabd94:	00001606 	br	6aabdf0 <_fseek_r+0x27c>
 6aabd98:	6aab2b00 	call	6aab2b0 <__sinit>
 6aabd9c:	8080030b 	ldhu	r2,12(r16)
 6aabda0:	00c04204 	movi	r3,264
 6aabda4:	1080420c 	andi	r2,r2,264
 6aabda8:	10ff871e 	bne	r2,r3,6aabbc8 <_fseek_r+0x54>
 6aabdac:	9009883a 	mov	r4,r18
 6aabdb0:	800b883a 	mov	r5,r16
 6aabdb4:	6aab0180 	call	6aab018 <_fflush_r>
 6aabdb8:	003f8306 	br	6aabbc8 <_fseek_r+0x54>
 6aabdbc:	81400c17 	ldw	r5,48(r16)
 6aabdc0:	28004526 	beq	r5,zero,6aabed8 <_fseek_r+0x364>
 6aabdc4:	8100030b 	ldhu	r4,12(r16)
 6aabdc8:	80c00117 	ldw	r3,4(r16)
 6aabdcc:	81c00f17 	ldw	r7,60(r16)
 6aabdd0:	003fc506 	br	6aabce8 <_fseek_r+0x174>
 6aabdd4:	80c00117 	ldw	r3,4(r16)
 6aabdd8:	80800c17 	ldw	r2,48(r16)
 6aabddc:	88e3c83a 	sub	r17,r17,r3
 6aabde0:	10002226 	beq	r2,zero,6aabe6c <_fseek_r+0x2f8>
 6aabde4:	81c00f17 	ldw	r7,60(r16)
 6aabde8:	81800417 	ldw	r6,16(r16)
 6aabdec:	89e3c83a 	sub	r17,r17,r7
 6aabdf0:	b46d883a 	add	r22,r22,r17
 6aabdf4:	0027883a 	mov	r19,zero
 6aabdf8:	05c00044 	movi	r23,1
 6aabdfc:	003f8b06 	br	6aabc2c <_fseek_r+0xb8>
 6aabe00:	80801317 	ldw	r2,76(r16)
 6aabe04:	81400717 	ldw	r5,28(r16)
 6aabe08:	9009883a 	mov	r4,r18
 6aabe0c:	0085c83a 	sub	r2,zero,r2
 6aabe10:	a0a2703a 	and	r17,r20,r2
 6aabe14:	880d883a 	mov	r6,r17
 6aabe18:	000f883a 	mov	r7,zero
 6aabe1c:	a83ee83a 	callr	r21
 6aabe20:	00ffffc4 	movi	r3,-1
 6aabe24:	10ff8d26 	beq	r2,r3,6aabc5c <_fseek_r+0xe8>
 6aabe28:	80800417 	ldw	r2,16(r16)
 6aabe2c:	81400c17 	ldw	r5,48(r16)
 6aabe30:	80000115 	stw	zero,4(r16)
 6aabe34:	80800015 	stw	r2,0(r16)
 6aabe38:	28000526 	beq	r5,zero,6aabe50 <_fseek_r+0x2dc>
 6aabe3c:	80801004 	addi	r2,r16,64
 6aabe40:	28800226 	beq	r5,r2,6aabe4c <_fseek_r+0x2d8>
 6aabe44:	9009883a 	mov	r4,r18
 6aabe48:	6aab8600 	call	6aab860 <_free_r>
 6aabe4c:	80000c15 	stw	zero,48(r16)
 6aabe50:	8080030b 	ldhu	r2,12(r16)
 6aabe54:	a463c83a 	sub	r17,r20,r17
 6aabe58:	10bff7cc 	andi	r2,r2,65503
 6aabe5c:	8080030d 	sth	r2,12(r16)
 6aabe60:	88000c1e 	bne	r17,zero,6aabe94 <_fseek_r+0x320>
 6aabe64:	0009883a 	mov	r4,zero
 6aabe68:	003f6106 	br	6aabbf0 <_fseek_r+0x7c>
 6aabe6c:	81800417 	ldw	r6,16(r16)
 6aabe70:	003fdf06 	br	6aabdf0 <_fseek_r+0x27c>
 6aabe74:	8140038f 	ldh	r5,14(r16)
 6aabe78:	9009883a 	mov	r4,r18
 6aabe7c:	d80d883a 	mov	r6,sp
 6aabe80:	6aabfd40 	call	6aabfd4 <_fstat_r>
 6aabe84:	103f751e 	bne	r2,zero,6aabc5c <_fseek_r+0xe8>
 6aabe88:	d8800417 	ldw	r2,16(sp)
 6aabe8c:	b0a9883a 	add	r20,r22,r2
 6aabe90:	003f8906 	br	6aabcb8 <_fseek_r+0x144>
 6aabe94:	9009883a 	mov	r4,r18
 6aabe98:	800b883a 	mov	r5,r16
 6aabe9c:	6aace100 	call	6aace10 <__srefill_r>
 6aabea0:	103f6e1e 	bne	r2,zero,6aabc5c <_fseek_r+0xe8>
 6aabea4:	80c00117 	ldw	r3,4(r16)
 6aabea8:	1c7f6c36 	bltu	r3,r17,6aabc5c <_fseek_r+0xe8>
 6aabeac:	80800017 	ldw	r2,0(r16)
 6aabeb0:	1c47c83a 	sub	r3,r3,r17
 6aabeb4:	0009883a 	mov	r4,zero
 6aabeb8:	1445883a 	add	r2,r2,r17
 6aabebc:	80c00115 	stw	r3,4(r16)
 6aabec0:	80800015 	stw	r2,0(r16)
 6aabec4:	003f4a06 	br	6aabbf0 <_fseek_r+0x7c>
 6aabec8:	9009883a 	mov	r4,r18
 6aabecc:	800b883a 	mov	r5,r16
 6aabed0:	6aac1c80 	call	6aac1c8 <__smakebuf_r>
 6aabed4:	003f5606 	br	6aabc30 <_fseek_r+0xbc>
 6aabed8:	8100030b 	ldhu	r4,12(r16)
 6aabedc:	80c00117 	ldw	r3,4(r16)
 6aabee0:	80800017 	ldw	r2,0(r16)
 6aabee4:	81800417 	ldw	r6,16(r16)
 6aabee8:	1185c83a 	sub	r2,r2,r6
 6aabeec:	10cf883a 	add	r7,r2,r3
 6aabef0:	8887c83a 	sub	r3,r17,r2
 6aabef4:	003f8206 	br	6aabd00 <_fseek_r+0x18c>
 6aabef8:	81400717 	ldw	r5,28(r16)
 6aabefc:	b00d883a 	mov	r6,r22
 6aabf00:	980f883a 	mov	r7,r19
 6aabf04:	9009883a 	mov	r4,r18
 6aabf08:	a83ee83a 	callr	r21
 6aabf0c:	00ffffc4 	movi	r3,-1
 6aabf10:	10ff5626 	beq	r2,r3,6aabc6c <_fseek_r+0xf8>
 6aabf14:	81400c17 	ldw	r5,48(r16)
 6aabf18:	28000526 	beq	r5,zero,6aabf30 <_fseek_r+0x3bc>
 6aabf1c:	80801004 	addi	r2,r16,64
 6aabf20:	28800226 	beq	r5,r2,6aabf2c <_fseek_r+0x3b8>
 6aabf24:	9009883a 	mov	r4,r18
 6aabf28:	6aab8600 	call	6aab860 <_free_r>
 6aabf2c:	80000c15 	stw	zero,48(r16)
 6aabf30:	8080030b 	ldhu	r2,12(r16)
 6aabf34:	80c00417 	ldw	r3,16(r16)
 6aabf38:	0009883a 	mov	r4,zero
 6aabf3c:	10bdf7cc 	andi	r2,r2,63455
 6aabf40:	8080030d 	sth	r2,12(r16)
 6aabf44:	80c00015 	stw	r3,0(r16)
 6aabf48:	80000115 	stw	zero,4(r16)
 6aabf4c:	003f2806 	br	6aabbf0 <_fseek_r+0x7c>
 6aabf50:	81400717 	ldw	r5,28(r16)
 6aabf54:	000d883a 	mov	r6,zero
 6aabf58:	9009883a 	mov	r4,r18
 6aabf5c:	01c00044 	movi	r7,1
 6aabf60:	a83ee83a 	callr	r21
 6aabf64:	100d883a 	mov	r6,r2
 6aabf68:	00bfffc4 	movi	r2,-1
 6aabf6c:	30bf3b26 	beq	r6,r2,6aabc5c <_fseek_r+0xe8>
 6aabf70:	8100030b 	ldhu	r4,12(r16)
 6aabf74:	003f5606 	br	6aabcd0 <_fseek_r+0x15c>
 6aabf78:	00800744 	movi	r2,29
 6aabf7c:	013fffc4 	movi	r4,-1
 6aabf80:	90800015 	stw	r2,0(r18)
 6aabf84:	003f1a06 	br	6aabbf0 <_fseek_r+0x7c>
 6aabf88:	81400717 	ldw	r5,28(r16)
 6aabf8c:	980f883a 	mov	r7,r19
 6aabf90:	9009883a 	mov	r4,r18
 6aabf94:	000d883a 	mov	r6,zero
 6aabf98:	a83ee83a 	callr	r21
 6aabf9c:	1023883a 	mov	r17,r2
 6aabfa0:	00bfffc4 	movi	r2,-1
 6aabfa4:	88bf3126 	beq	r17,r2,6aabc6c <_fseek_r+0xf8>
 6aabfa8:	8100030b 	ldhu	r4,12(r16)
 6aabfac:	003f7006 	br	6aabd70 <_fseek_r+0x1fc>

06aabfb0 <fseek>:
 6aabfb0:	0081ab34 	movhi	r2,1708
 6aabfb4:	10a9b004 	addi	r2,r2,-22848
 6aabfb8:	2013883a 	mov	r9,r4
 6aabfbc:	11000017 	ldw	r4,0(r2)
 6aabfc0:	2805883a 	mov	r2,r5
 6aabfc4:	300f883a 	mov	r7,r6
 6aabfc8:	480b883a 	mov	r5,r9
 6aabfcc:	100d883a 	mov	r6,r2
 6aabfd0:	6aabb741 	jmpi	6aabb74 <_fseek_r>

06aabfd4 <_fstat_r>:
 6aabfd4:	defffd04 	addi	sp,sp,-12
 6aabfd8:	dc000015 	stw	r16,0(sp)
 6aabfdc:	0401ab34 	movhi	r16,1708
 6aabfe0:	84308504 	addi	r16,r16,-15852
 6aabfe4:	dc400115 	stw	r17,4(sp)
 6aabfe8:	80000015 	stw	zero,0(r16)
 6aabfec:	2023883a 	mov	r17,r4
 6aabff0:	2809883a 	mov	r4,r5
 6aabff4:	300b883a 	mov	r5,r6
 6aabff8:	dfc00215 	stw	ra,8(sp)
 6aabffc:	6ab55e40 	call	6ab55e4 <fstat>
 6aac000:	1007883a 	mov	r3,r2
 6aac004:	00bfffc4 	movi	r2,-1
 6aac008:	18800626 	beq	r3,r2,6aac024 <_fstat_r+0x50>
 6aac00c:	1805883a 	mov	r2,r3
 6aac010:	dfc00217 	ldw	ra,8(sp)
 6aac014:	dc400117 	ldw	r17,4(sp)
 6aac018:	dc000017 	ldw	r16,0(sp)
 6aac01c:	dec00304 	addi	sp,sp,12
 6aac020:	f800283a 	ret
 6aac024:	80800017 	ldw	r2,0(r16)
 6aac028:	103ff826 	beq	r2,zero,6aac00c <_fstat_r+0x38>
 6aac02c:	88800015 	stw	r2,0(r17)
 6aac030:	1805883a 	mov	r2,r3
 6aac034:	dfc00217 	ldw	ra,8(sp)
 6aac038:	dc400117 	ldw	r17,4(sp)
 6aac03c:	dc000017 	ldw	r16,0(sp)
 6aac040:	dec00304 	addi	sp,sp,12
 6aac044:	f800283a 	ret

06aac048 <_fwalk_reent>:
 6aac048:	defff704 	addi	sp,sp,-36
 6aac04c:	dcc00315 	stw	r19,12(sp)
 6aac050:	24c0b804 	addi	r19,r4,736
 6aac054:	dd800615 	stw	r22,24(sp)
 6aac058:	dd400515 	stw	r21,20(sp)
 6aac05c:	dfc00815 	stw	ra,32(sp)
 6aac060:	ddc00715 	stw	r23,28(sp)
 6aac064:	dd000415 	stw	r20,16(sp)
 6aac068:	dc800215 	stw	r18,8(sp)
 6aac06c:	dc400115 	stw	r17,4(sp)
 6aac070:	dc000015 	stw	r16,0(sp)
 6aac074:	202b883a 	mov	r21,r4
 6aac078:	282d883a 	mov	r22,r5
 6aac07c:	6aab2a00 	call	6aab2a0 <__sfp_lock_acquire>
 6aac080:	98002126 	beq	r19,zero,6aac108 <_fwalk_reent+0xc0>
 6aac084:	002f883a 	mov	r23,zero
 6aac088:	9c800117 	ldw	r18,4(r19)
 6aac08c:	9c000217 	ldw	r16,8(r19)
 6aac090:	90bfffc4 	addi	r2,r18,-1
 6aac094:	10000d16 	blt	r2,zero,6aac0cc <_fwalk_reent+0x84>
 6aac098:	0023883a 	mov	r17,zero
 6aac09c:	053fffc4 	movi	r20,-1
 6aac0a0:	8080030f 	ldh	r2,12(r16)
 6aac0a4:	8c400044 	addi	r17,r17,1
 6aac0a8:	10000626 	beq	r2,zero,6aac0c4 <_fwalk_reent+0x7c>
 6aac0ac:	8080038f 	ldh	r2,14(r16)
 6aac0b0:	800b883a 	mov	r5,r16
 6aac0b4:	a809883a 	mov	r4,r21
 6aac0b8:	15000226 	beq	r2,r20,6aac0c4 <_fwalk_reent+0x7c>
 6aac0bc:	b03ee83a 	callr	r22
 6aac0c0:	b8aeb03a 	or	r23,r23,r2
 6aac0c4:	84001704 	addi	r16,r16,92
 6aac0c8:	947ff51e 	bne	r18,r17,6aac0a0 <_fwalk_reent+0x58>
 6aac0cc:	9cc00017 	ldw	r19,0(r19)
 6aac0d0:	983fed1e 	bne	r19,zero,6aac088 <_fwalk_reent+0x40>
 6aac0d4:	6aab2a40 	call	6aab2a4 <__sfp_lock_release>
 6aac0d8:	b805883a 	mov	r2,r23
 6aac0dc:	dfc00817 	ldw	ra,32(sp)
 6aac0e0:	ddc00717 	ldw	r23,28(sp)
 6aac0e4:	dd800617 	ldw	r22,24(sp)
 6aac0e8:	dd400517 	ldw	r21,20(sp)
 6aac0ec:	dd000417 	ldw	r20,16(sp)
 6aac0f0:	dcc00317 	ldw	r19,12(sp)
 6aac0f4:	dc800217 	ldw	r18,8(sp)
 6aac0f8:	dc400117 	ldw	r17,4(sp)
 6aac0fc:	dc000017 	ldw	r16,0(sp)
 6aac100:	dec00904 	addi	sp,sp,36
 6aac104:	f800283a 	ret
 6aac108:	002f883a 	mov	r23,zero
 6aac10c:	003ff106 	br	6aac0d4 <_fwalk_reent+0x8c>

06aac110 <_fwalk>:
 6aac110:	defff804 	addi	sp,sp,-32
 6aac114:	dcc00315 	stw	r19,12(sp)
 6aac118:	24c0b804 	addi	r19,r4,736
 6aac11c:	dd400515 	stw	r21,20(sp)
 6aac120:	dfc00715 	stw	ra,28(sp)
 6aac124:	dd800615 	stw	r22,24(sp)
 6aac128:	dd000415 	stw	r20,16(sp)
 6aac12c:	dc800215 	stw	r18,8(sp)
 6aac130:	dc400115 	stw	r17,4(sp)
 6aac134:	dc000015 	stw	r16,0(sp)
 6aac138:	282b883a 	mov	r21,r5
 6aac13c:	6aab2a00 	call	6aab2a0 <__sfp_lock_acquire>
 6aac140:	98001f26 	beq	r19,zero,6aac1c0 <_fwalk+0xb0>
 6aac144:	002d883a 	mov	r22,zero
 6aac148:	9c800117 	ldw	r18,4(r19)
 6aac14c:	9c000217 	ldw	r16,8(r19)
 6aac150:	90bfffc4 	addi	r2,r18,-1
 6aac154:	10000c16 	blt	r2,zero,6aac188 <_fwalk+0x78>
 6aac158:	0023883a 	mov	r17,zero
 6aac15c:	053fffc4 	movi	r20,-1
 6aac160:	8080030f 	ldh	r2,12(r16)
 6aac164:	8c400044 	addi	r17,r17,1
 6aac168:	10000526 	beq	r2,zero,6aac180 <_fwalk+0x70>
 6aac16c:	8080038f 	ldh	r2,14(r16)
 6aac170:	8009883a 	mov	r4,r16
 6aac174:	15000226 	beq	r2,r20,6aac180 <_fwalk+0x70>
 6aac178:	a83ee83a 	callr	r21
 6aac17c:	b0acb03a 	or	r22,r22,r2
 6aac180:	84001704 	addi	r16,r16,92
 6aac184:	947ff61e 	bne	r18,r17,6aac160 <_fwalk+0x50>
 6aac188:	9cc00017 	ldw	r19,0(r19)
 6aac18c:	983fee1e 	bne	r19,zero,6aac148 <_fwalk+0x38>
 6aac190:	6aab2a40 	call	6aab2a4 <__sfp_lock_release>
 6aac194:	b005883a 	mov	r2,r22
 6aac198:	dfc00717 	ldw	ra,28(sp)
 6aac19c:	dd800617 	ldw	r22,24(sp)
 6aac1a0:	dd400517 	ldw	r21,20(sp)
 6aac1a4:	dd000417 	ldw	r20,16(sp)
 6aac1a8:	dcc00317 	ldw	r19,12(sp)
 6aac1ac:	dc800217 	ldw	r18,8(sp)
 6aac1b0:	dc400117 	ldw	r17,4(sp)
 6aac1b4:	dc000017 	ldw	r16,0(sp)
 6aac1b8:	dec00804 	addi	sp,sp,32
 6aac1bc:	f800283a 	ret
 6aac1c0:	002d883a 	mov	r22,zero
 6aac1c4:	003ff206 	br	6aac190 <_fwalk+0x80>

06aac1c8 <__smakebuf_r>:
 6aac1c8:	2880030b 	ldhu	r2,12(r5)
 6aac1cc:	deffed04 	addi	sp,sp,-76
 6aac1d0:	dc401015 	stw	r17,64(sp)
 6aac1d4:	1080008c 	andi	r2,r2,2
 6aac1d8:	dc000f15 	stw	r16,60(sp)
 6aac1dc:	dfc01215 	stw	ra,72(sp)
 6aac1e0:	dc801115 	stw	r18,68(sp)
 6aac1e4:	2821883a 	mov	r16,r5
 6aac1e8:	2023883a 	mov	r17,r4
 6aac1ec:	10000b26 	beq	r2,zero,6aac21c <__smakebuf_r+0x54>
 6aac1f0:	28c010c4 	addi	r3,r5,67
 6aac1f4:	00800044 	movi	r2,1
 6aac1f8:	28800515 	stw	r2,20(r5)
 6aac1fc:	28c00415 	stw	r3,16(r5)
 6aac200:	28c00015 	stw	r3,0(r5)
 6aac204:	dfc01217 	ldw	ra,72(sp)
 6aac208:	dc801117 	ldw	r18,68(sp)
 6aac20c:	dc401017 	ldw	r17,64(sp)
 6aac210:	dc000f17 	ldw	r16,60(sp)
 6aac214:	dec01304 	addi	sp,sp,76
 6aac218:	f800283a 	ret
 6aac21c:	2940038f 	ldh	r5,14(r5)
 6aac220:	28002116 	blt	r5,zero,6aac2a8 <__smakebuf_r+0xe0>
 6aac224:	d80d883a 	mov	r6,sp
 6aac228:	6aabfd40 	call	6aabfd4 <_fstat_r>
 6aac22c:	10001e16 	blt	r2,zero,6aac2a8 <__smakebuf_r+0xe0>
 6aac230:	d8800117 	ldw	r2,4(sp)
 6aac234:	00e00014 	movui	r3,32768
 6aac238:	113c000c 	andi	r4,r2,61440
 6aac23c:	20c03126 	beq	r4,r3,6aac304 <__smakebuf_r+0x13c>
 6aac240:	8080030b 	ldhu	r2,12(r16)
 6aac244:	00c80004 	movi	r3,8192
 6aac248:	10820014 	ori	r2,r2,2048
 6aac24c:	8080030d 	sth	r2,12(r16)
 6aac250:	20c01e26 	beq	r4,r3,6aac2cc <__smakebuf_r+0x104>
 6aac254:	04810004 	movi	r18,1024
 6aac258:	8809883a 	mov	r4,r17
 6aac25c:	900b883a 	mov	r5,r18
 6aac260:	6aac35c0 	call	6aac35c <_malloc_r>
 6aac264:	1009883a 	mov	r4,r2
 6aac268:	10003126 	beq	r2,zero,6aac330 <__smakebuf_r+0x168>
 6aac26c:	80c0030b 	ldhu	r3,12(r16)
 6aac270:	0081aaf4 	movhi	r2,1707
 6aac274:	10ace504 	addi	r2,r2,-19564
 6aac278:	88800f15 	stw	r2,60(r17)
 6aac27c:	18c02014 	ori	r3,r3,128
 6aac280:	84800515 	stw	r18,20(r16)
 6aac284:	80c0030d 	sth	r3,12(r16)
 6aac288:	81000415 	stw	r4,16(r16)
 6aac28c:	81000015 	stw	r4,0(r16)
 6aac290:	dfc01217 	ldw	ra,72(sp)
 6aac294:	dc801117 	ldw	r18,68(sp)
 6aac298:	dc401017 	ldw	r17,64(sp)
 6aac29c:	dc000f17 	ldw	r16,60(sp)
 6aac2a0:	dec01304 	addi	sp,sp,76
 6aac2a4:	f800283a 	ret
 6aac2a8:	80c0030b 	ldhu	r3,12(r16)
 6aac2ac:	1880200c 	andi	r2,r3,128
 6aac2b0:	10000426 	beq	r2,zero,6aac2c4 <__smakebuf_r+0xfc>
 6aac2b4:	04801004 	movi	r18,64
 6aac2b8:	18820014 	ori	r2,r3,2048
 6aac2bc:	8080030d 	sth	r2,12(r16)
 6aac2c0:	003fe506 	br	6aac258 <__smakebuf_r+0x90>
 6aac2c4:	04810004 	movi	r18,1024
 6aac2c8:	003ffb06 	br	6aac2b8 <__smakebuf_r+0xf0>
 6aac2cc:	8140038f 	ldh	r5,14(r16)
 6aac2d0:	8809883a 	mov	r4,r17
 6aac2d4:	6ab13080 	call	6ab1308 <_isatty_r>
 6aac2d8:	103fde26 	beq	r2,zero,6aac254 <__smakebuf_r+0x8c>
 6aac2dc:	8080030b 	ldhu	r2,12(r16)
 6aac2e0:	80c010c4 	addi	r3,r16,67
 6aac2e4:	04810004 	movi	r18,1024
 6aac2e8:	10800054 	ori	r2,r2,1
 6aac2ec:	8080030d 	sth	r2,12(r16)
 6aac2f0:	00800044 	movi	r2,1
 6aac2f4:	80c00415 	stw	r3,16(r16)
 6aac2f8:	80800515 	stw	r2,20(r16)
 6aac2fc:	80c00015 	stw	r3,0(r16)
 6aac300:	003fd506 	br	6aac258 <__smakebuf_r+0x90>
 6aac304:	80c00a17 	ldw	r3,40(r16)
 6aac308:	0081aaf4 	movhi	r2,1707
 6aac30c:	10b41a04 	addi	r2,r2,-12184
 6aac310:	18bfcb1e 	bne	r3,r2,6aac240 <__smakebuf_r+0x78>
 6aac314:	8080030b 	ldhu	r2,12(r16)
 6aac318:	00c10004 	movi	r3,1024
 6aac31c:	1825883a 	mov	r18,r3
 6aac320:	10c4b03a 	or	r2,r2,r3
 6aac324:	8080030d 	sth	r2,12(r16)
 6aac328:	80c01315 	stw	r3,76(r16)
 6aac32c:	003fca06 	br	6aac258 <__smakebuf_r+0x90>
 6aac330:	8100030b 	ldhu	r4,12(r16)
 6aac334:	2080800c 	andi	r2,r4,512
 6aac338:	103fb21e 	bne	r2,zero,6aac204 <__smakebuf_r+0x3c>
 6aac33c:	80c010c4 	addi	r3,r16,67
 6aac340:	21000094 	ori	r4,r4,2
 6aac344:	00800044 	movi	r2,1
 6aac348:	80800515 	stw	r2,20(r16)
 6aac34c:	8100030d 	sth	r4,12(r16)
 6aac350:	80c00415 	stw	r3,16(r16)
 6aac354:	80c00015 	stw	r3,0(r16)
 6aac358:	003faa06 	br	6aac204 <__smakebuf_r+0x3c>

06aac35c <_malloc_r>:
 6aac35c:	defff604 	addi	sp,sp,-40
 6aac360:	28c002c4 	addi	r3,r5,11
 6aac364:	00800584 	movi	r2,22
 6aac368:	dc800215 	stw	r18,8(sp)
 6aac36c:	dfc00915 	stw	ra,36(sp)
 6aac370:	df000815 	stw	fp,32(sp)
 6aac374:	ddc00715 	stw	r23,28(sp)
 6aac378:	dd800615 	stw	r22,24(sp)
 6aac37c:	dd400515 	stw	r21,20(sp)
 6aac380:	dd000415 	stw	r20,16(sp)
 6aac384:	dcc00315 	stw	r19,12(sp)
 6aac388:	dc400115 	stw	r17,4(sp)
 6aac38c:	dc000015 	stw	r16,0(sp)
 6aac390:	2025883a 	mov	r18,r4
 6aac394:	10c01236 	bltu	r2,r3,6aac3e0 <_malloc_r+0x84>
 6aac398:	04400404 	movi	r17,16
 6aac39c:	8940142e 	bgeu	r17,r5,6aac3f0 <_malloc_r+0x94>
 6aac3a0:	00800304 	movi	r2,12
 6aac3a4:	0007883a 	mov	r3,zero
 6aac3a8:	90800015 	stw	r2,0(r18)
 6aac3ac:	1805883a 	mov	r2,r3
 6aac3b0:	dfc00917 	ldw	ra,36(sp)
 6aac3b4:	df000817 	ldw	fp,32(sp)
 6aac3b8:	ddc00717 	ldw	r23,28(sp)
 6aac3bc:	dd800617 	ldw	r22,24(sp)
 6aac3c0:	dd400517 	ldw	r21,20(sp)
 6aac3c4:	dd000417 	ldw	r20,16(sp)
 6aac3c8:	dcc00317 	ldw	r19,12(sp)
 6aac3cc:	dc800217 	ldw	r18,8(sp)
 6aac3d0:	dc400117 	ldw	r17,4(sp)
 6aac3d4:	dc000017 	ldw	r16,0(sp)
 6aac3d8:	dec00a04 	addi	sp,sp,40
 6aac3dc:	f800283a 	ret
 6aac3e0:	00bffe04 	movi	r2,-8
 6aac3e4:	18a2703a 	and	r17,r3,r2
 6aac3e8:	883fed16 	blt	r17,zero,6aac3a0 <_malloc_r+0x44>
 6aac3ec:	897fec36 	bltu	r17,r5,6aac3a0 <_malloc_r+0x44>
 6aac3f0:	9009883a 	mov	r4,r18
 6aac3f4:	6ab5ae00 	call	6ab5ae0 <__malloc_lock>
 6aac3f8:	00807dc4 	movi	r2,503
 6aac3fc:	14402b2e 	bgeu	r2,r17,6aac4ac <_malloc_r+0x150>
 6aac400:	8806d27a 	srli	r3,r17,9
 6aac404:	18003f1e 	bne	r3,zero,6aac504 <_malloc_r+0x1a8>
 6aac408:	880cd0fa 	srli	r6,r17,3
 6aac40c:	300490fa 	slli	r2,r6,3
 6aac410:	02c1ab34 	movhi	r11,1708
 6aac414:	5ae41f04 	addi	r11,r11,-28548
 6aac418:	12cb883a 	add	r5,r2,r11
 6aac41c:	2c000317 	ldw	r16,12(r5)
 6aac420:	580f883a 	mov	r7,r11
 6aac424:	2c00041e 	bne	r5,r16,6aac438 <_malloc_r+0xdc>
 6aac428:	00000a06 	br	6aac454 <_malloc_r+0xf8>
 6aac42c:	1800860e 	bge	r3,zero,6aac648 <_malloc_r+0x2ec>
 6aac430:	84000317 	ldw	r16,12(r16)
 6aac434:	2c000726 	beq	r5,r16,6aac454 <_malloc_r+0xf8>
 6aac438:	80800117 	ldw	r2,4(r16)
 6aac43c:	00ffff04 	movi	r3,-4
 6aac440:	10c8703a 	and	r4,r2,r3
 6aac444:	2447c83a 	sub	r3,r4,r17
 6aac448:	008003c4 	movi	r2,15
 6aac44c:	10fff70e 	bge	r2,r3,6aac42c <_malloc_r+0xd0>
 6aac450:	31bfffc4 	addi	r6,r6,-1
 6aac454:	32400044 	addi	r9,r6,1
 6aac458:	0281ab34 	movhi	r10,1708
 6aac45c:	52a42104 	addi	r10,r10,-28540
 6aac460:	54000217 	ldw	r16,8(r10)
 6aac464:	8280a026 	beq	r16,r10,6aac6e8 <_malloc_r+0x38c>
 6aac468:	80800117 	ldw	r2,4(r16)
 6aac46c:	00ffff04 	movi	r3,-4
 6aac470:	10ca703a 	and	r5,r2,r3
 6aac474:	2c4dc83a 	sub	r6,r5,r17
 6aac478:	008003c4 	movi	r2,15
 6aac47c:	11808316 	blt	r2,r6,6aac68c <_malloc_r+0x330>
 6aac480:	52800315 	stw	r10,12(r10)
 6aac484:	52800215 	stw	r10,8(r10)
 6aac488:	30002916 	blt	r6,zero,6aac530 <_malloc_r+0x1d4>
 6aac48c:	8147883a 	add	r3,r16,r5
 6aac490:	18800117 	ldw	r2,4(r3)
 6aac494:	9009883a 	mov	r4,r18
 6aac498:	10800054 	ori	r2,r2,1
 6aac49c:	18800115 	stw	r2,4(r3)
 6aac4a0:	6ab5b000 	call	6ab5b00 <__malloc_unlock>
 6aac4a4:	80c00204 	addi	r3,r16,8
 6aac4a8:	003fc006 	br	6aac3ac <_malloc_r+0x50>
 6aac4ac:	02c1ab34 	movhi	r11,1708
 6aac4b0:	5ae41f04 	addi	r11,r11,-28548
 6aac4b4:	8ac5883a 	add	r2,r17,r11
 6aac4b8:	14000317 	ldw	r16,12(r2)
 6aac4bc:	580f883a 	mov	r7,r11
 6aac4c0:	8806d0fa 	srli	r3,r17,3
 6aac4c4:	14006c26 	beq	r2,r16,6aac678 <_malloc_r+0x31c>
 6aac4c8:	80c00117 	ldw	r3,4(r16)
 6aac4cc:	00bfff04 	movi	r2,-4
 6aac4d0:	81800317 	ldw	r6,12(r16)
 6aac4d4:	1886703a 	and	r3,r3,r2
 6aac4d8:	80c7883a 	add	r3,r16,r3
 6aac4dc:	18800117 	ldw	r2,4(r3)
 6aac4e0:	81400217 	ldw	r5,8(r16)
 6aac4e4:	9009883a 	mov	r4,r18
 6aac4e8:	10800054 	ori	r2,r2,1
 6aac4ec:	18800115 	stw	r2,4(r3)
 6aac4f0:	31400215 	stw	r5,8(r6)
 6aac4f4:	29800315 	stw	r6,12(r5)
 6aac4f8:	6ab5b000 	call	6ab5b00 <__malloc_unlock>
 6aac4fc:	80c00204 	addi	r3,r16,8
 6aac500:	003faa06 	br	6aac3ac <_malloc_r+0x50>
 6aac504:	00800104 	movi	r2,4
 6aac508:	10c0052e 	bgeu	r2,r3,6aac520 <_malloc_r+0x1c4>
 6aac50c:	00800504 	movi	r2,20
 6aac510:	10c07836 	bltu	r2,r3,6aac6f4 <_malloc_r+0x398>
 6aac514:	198016c4 	addi	r6,r3,91
 6aac518:	300490fa 	slli	r2,r6,3
 6aac51c:	003fbc06 	br	6aac410 <_malloc_r+0xb4>
 6aac520:	8804d1ba 	srli	r2,r17,6
 6aac524:	11800e04 	addi	r6,r2,56
 6aac528:	300490fa 	slli	r2,r6,3
 6aac52c:	003fb806 	br	6aac410 <_malloc_r+0xb4>
 6aac530:	00807fc4 	movi	r2,511
 6aac534:	1140bb36 	bltu	r2,r5,6aac824 <_malloc_r+0x4c8>
 6aac538:	2806d0fa 	srli	r3,r5,3
 6aac53c:	573ffe04 	addi	fp,r10,-8
 6aac540:	00800044 	movi	r2,1
 6aac544:	180890fa 	slli	r4,r3,3
 6aac548:	1807d0ba 	srai	r3,r3,2
 6aac54c:	e1c00117 	ldw	r7,4(fp)
 6aac550:	5909883a 	add	r4,r11,r4
 6aac554:	21400217 	ldw	r5,8(r4)
 6aac558:	10c4983a 	sll	r2,r2,r3
 6aac55c:	81000315 	stw	r4,12(r16)
 6aac560:	81400215 	stw	r5,8(r16)
 6aac564:	388eb03a 	or	r7,r7,r2
 6aac568:	2c000315 	stw	r16,12(r5)
 6aac56c:	24000215 	stw	r16,8(r4)
 6aac570:	e1c00115 	stw	r7,4(fp)
 6aac574:	4807883a 	mov	r3,r9
 6aac578:	4800cd16 	blt	r9,zero,6aac8b0 <_malloc_r+0x554>
 6aac57c:	1807d0ba 	srai	r3,r3,2
 6aac580:	00800044 	movi	r2,1
 6aac584:	10c8983a 	sll	r4,r2,r3
 6aac588:	39004436 	bltu	r7,r4,6aac69c <_malloc_r+0x340>
 6aac58c:	21c4703a 	and	r2,r4,r7
 6aac590:	10000a1e 	bne	r2,zero,6aac5bc <_malloc_r+0x260>
 6aac594:	2109883a 	add	r4,r4,r4
 6aac598:	00bfff04 	movi	r2,-4
 6aac59c:	4884703a 	and	r2,r9,r2
 6aac5a0:	3906703a 	and	r3,r7,r4
 6aac5a4:	12400104 	addi	r9,r2,4
 6aac5a8:	1800041e 	bne	r3,zero,6aac5bc <_malloc_r+0x260>
 6aac5ac:	2109883a 	add	r4,r4,r4
 6aac5b0:	3904703a 	and	r2,r7,r4
 6aac5b4:	4a400104 	addi	r9,r9,4
 6aac5b8:	103ffc26 	beq	r2,zero,6aac5ac <_malloc_r+0x250>
 6aac5bc:	480490fa 	slli	r2,r9,3
 6aac5c0:	4819883a 	mov	r12,r9
 6aac5c4:	023fff04 	movi	r8,-4
 6aac5c8:	589b883a 	add	r13,r11,r2
 6aac5cc:	6807883a 	mov	r3,r13
 6aac5d0:	014003c4 	movi	r5,15
 6aac5d4:	1c000317 	ldw	r16,12(r3)
 6aac5d8:	1c00041e 	bne	r3,r16,6aac5ec <_malloc_r+0x290>
 6aac5dc:	0000a706 	br	6aac87c <_malloc_r+0x520>
 6aac5e0:	3000ab0e 	bge	r6,zero,6aac890 <_malloc_r+0x534>
 6aac5e4:	84000317 	ldw	r16,12(r16)
 6aac5e8:	1c00a426 	beq	r3,r16,6aac87c <_malloc_r+0x520>
 6aac5ec:	80800117 	ldw	r2,4(r16)
 6aac5f0:	1204703a 	and	r2,r2,r8
 6aac5f4:	144dc83a 	sub	r6,r2,r17
 6aac5f8:	29bff90e 	bge	r5,r6,6aac5e0 <_malloc_r+0x284>
 6aac5fc:	81000317 	ldw	r4,12(r16)
 6aac600:	80c00217 	ldw	r3,8(r16)
 6aac604:	89400054 	ori	r5,r17,1
 6aac608:	8445883a 	add	r2,r16,r17
 6aac60c:	20c00215 	stw	r3,8(r4)
 6aac610:	19000315 	stw	r4,12(r3)
 6aac614:	81400115 	stw	r5,4(r16)
 6aac618:	1187883a 	add	r3,r2,r6
 6aac61c:	31000054 	ori	r4,r6,1
 6aac620:	50800315 	stw	r2,12(r10)
 6aac624:	50800215 	stw	r2,8(r10)
 6aac628:	19800015 	stw	r6,0(r3)
 6aac62c:	11000115 	stw	r4,4(r2)
 6aac630:	12800215 	stw	r10,8(r2)
 6aac634:	12800315 	stw	r10,12(r2)
 6aac638:	9009883a 	mov	r4,r18
 6aac63c:	6ab5b000 	call	6ab5b00 <__malloc_unlock>
 6aac640:	80c00204 	addi	r3,r16,8
 6aac644:	003f5906 	br	6aac3ac <_malloc_r+0x50>
 6aac648:	8109883a 	add	r4,r16,r4
 6aac64c:	20800117 	ldw	r2,4(r4)
 6aac650:	80c00217 	ldw	r3,8(r16)
 6aac654:	81400317 	ldw	r5,12(r16)
 6aac658:	10800054 	ori	r2,r2,1
 6aac65c:	20800115 	stw	r2,4(r4)
 6aac660:	28c00215 	stw	r3,8(r5)
 6aac664:	19400315 	stw	r5,12(r3)
 6aac668:	9009883a 	mov	r4,r18
 6aac66c:	6ab5b000 	call	6ab5b00 <__malloc_unlock>
 6aac670:	80c00204 	addi	r3,r16,8
 6aac674:	003f4d06 	br	6aac3ac <_malloc_r+0x50>
 6aac678:	80800204 	addi	r2,r16,8
 6aac67c:	14000317 	ldw	r16,12(r2)
 6aac680:	143f911e 	bne	r2,r16,6aac4c8 <_malloc_r+0x16c>
 6aac684:	1a400084 	addi	r9,r3,2
 6aac688:	003f7306 	br	6aac458 <_malloc_r+0xfc>
 6aac68c:	88c00054 	ori	r3,r17,1
 6aac690:	8445883a 	add	r2,r16,r17
 6aac694:	80c00115 	stw	r3,4(r16)
 6aac698:	003fdf06 	br	6aac618 <_malloc_r+0x2bc>
 6aac69c:	e4000217 	ldw	r16,8(fp)
 6aac6a0:	00bfff04 	movi	r2,-4
 6aac6a4:	80c00117 	ldw	r3,4(r16)
 6aac6a8:	802d883a 	mov	r22,r16
 6aac6ac:	18aa703a 	and	r21,r3,r2
 6aac6b0:	ac401636 	bltu	r21,r17,6aac70c <_malloc_r+0x3b0>
 6aac6b4:	ac49c83a 	sub	r4,r21,r17
 6aac6b8:	008003c4 	movi	r2,15
 6aac6bc:	1100130e 	bge	r2,r4,6aac70c <_malloc_r+0x3b0>
 6aac6c0:	88800054 	ori	r2,r17,1
 6aac6c4:	8447883a 	add	r3,r16,r17
 6aac6c8:	80800115 	stw	r2,4(r16)
 6aac6cc:	20800054 	ori	r2,r4,1
 6aac6d0:	18800115 	stw	r2,4(r3)
 6aac6d4:	e0c00215 	stw	r3,8(fp)
 6aac6d8:	9009883a 	mov	r4,r18
 6aac6dc:	6ab5b000 	call	6ab5b00 <__malloc_unlock>
 6aac6e0:	80c00204 	addi	r3,r16,8
 6aac6e4:	003f3106 	br	6aac3ac <_malloc_r+0x50>
 6aac6e8:	39c00117 	ldw	r7,4(r7)
 6aac6ec:	573ffe04 	addi	fp,r10,-8
 6aac6f0:	003fa006 	br	6aac574 <_malloc_r+0x218>
 6aac6f4:	00801504 	movi	r2,84
 6aac6f8:	10c06736 	bltu	r2,r3,6aac898 <_malloc_r+0x53c>
 6aac6fc:	8804d33a 	srli	r2,r17,12
 6aac700:	11801b84 	addi	r6,r2,110
 6aac704:	300490fa 	slli	r2,r6,3
 6aac708:	003f4106 	br	6aac410 <_malloc_r+0xb4>
 6aac70c:	d0a6d617 	ldw	r2,-25768(gp)
 6aac710:	d0e00317 	ldw	r3,-32756(gp)
 6aac714:	053fffc4 	movi	r20,-1
 6aac718:	10800404 	addi	r2,r2,16
 6aac71c:	88a7883a 	add	r19,r17,r2
 6aac720:	1d000326 	beq	r3,r20,6aac730 <_malloc_r+0x3d4>
 6aac724:	98c3ffc4 	addi	r3,r19,4095
 6aac728:	00bc0004 	movi	r2,-4096
 6aac72c:	18a6703a 	and	r19,r3,r2
 6aac730:	9009883a 	mov	r4,r18
 6aac734:	980b883a 	mov	r5,r19
 6aac738:	6aacff00 	call	6aacff0 <_sbrk_r>
 6aac73c:	1009883a 	mov	r4,r2
 6aac740:	15000426 	beq	r2,r20,6aac754 <_malloc_r+0x3f8>
 6aac744:	854b883a 	add	r5,r16,r21
 6aac748:	1029883a 	mov	r20,r2
 6aac74c:	11405a2e 	bgeu	r2,r5,6aac8b8 <_malloc_r+0x55c>
 6aac750:	87000c26 	beq	r16,fp,6aac784 <_malloc_r+0x428>
 6aac754:	e4000217 	ldw	r16,8(fp)
 6aac758:	80c00117 	ldw	r3,4(r16)
 6aac75c:	00bfff04 	movi	r2,-4
 6aac760:	1884703a 	and	r2,r3,r2
 6aac764:	14400336 	bltu	r2,r17,6aac774 <_malloc_r+0x418>
 6aac768:	1449c83a 	sub	r4,r2,r17
 6aac76c:	008003c4 	movi	r2,15
 6aac770:	113fd316 	blt	r2,r4,6aac6c0 <_malloc_r+0x364>
 6aac774:	9009883a 	mov	r4,r18
 6aac778:	6ab5b000 	call	6ab5b00 <__malloc_unlock>
 6aac77c:	0007883a 	mov	r3,zero
 6aac780:	003f0a06 	br	6aac3ac <_malloc_r+0x50>
 6aac784:	05c1ab34 	movhi	r23,1708
 6aac788:	bdf09204 	addi	r23,r23,-15800
 6aac78c:	b8800017 	ldw	r2,0(r23)
 6aac790:	988d883a 	add	r6,r19,r2
 6aac794:	b9800015 	stw	r6,0(r23)
 6aac798:	d0e00317 	ldw	r3,-32756(gp)
 6aac79c:	00bfffc4 	movi	r2,-1
 6aac7a0:	18808e26 	beq	r3,r2,6aac9dc <_malloc_r+0x680>
 6aac7a4:	2145c83a 	sub	r2,r4,r5
 6aac7a8:	3085883a 	add	r2,r6,r2
 6aac7ac:	b8800015 	stw	r2,0(r23)
 6aac7b0:	20c001cc 	andi	r3,r4,7
 6aac7b4:	18005f1e 	bne	r3,zero,6aac934 <_malloc_r+0x5d8>
 6aac7b8:	000b883a 	mov	r5,zero
 6aac7bc:	a4c5883a 	add	r2,r20,r19
 6aac7c0:	1083ffcc 	andi	r2,r2,4095
 6aac7c4:	00c40004 	movi	r3,4096
 6aac7c8:	1887c83a 	sub	r3,r3,r2
 6aac7cc:	28e7883a 	add	r19,r5,r3
 6aac7d0:	9009883a 	mov	r4,r18
 6aac7d4:	980b883a 	mov	r5,r19
 6aac7d8:	6aacff00 	call	6aacff0 <_sbrk_r>
 6aac7dc:	1007883a 	mov	r3,r2
 6aac7e0:	00bfffc4 	movi	r2,-1
 6aac7e4:	18807a26 	beq	r3,r2,6aac9d0 <_malloc_r+0x674>
 6aac7e8:	1d05c83a 	sub	r2,r3,r20
 6aac7ec:	9885883a 	add	r2,r19,r2
 6aac7f0:	10c00054 	ori	r3,r2,1
 6aac7f4:	b8800017 	ldw	r2,0(r23)
 6aac7f8:	a021883a 	mov	r16,r20
 6aac7fc:	a0c00115 	stw	r3,4(r20)
 6aac800:	9885883a 	add	r2,r19,r2
 6aac804:	b8800015 	stw	r2,0(r23)
 6aac808:	e5000215 	stw	r20,8(fp)
 6aac80c:	b7003626 	beq	r22,fp,6aac8e8 <_malloc_r+0x58c>
 6aac810:	018003c4 	movi	r6,15
 6aac814:	35404b36 	bltu	r6,r21,6aac944 <_malloc_r+0x5e8>
 6aac818:	00800044 	movi	r2,1
 6aac81c:	a0800115 	stw	r2,4(r20)
 6aac820:	003fcd06 	br	6aac758 <_malloc_r+0x3fc>
 6aac824:	2808d27a 	srli	r4,r5,9
 6aac828:	2000371e 	bne	r4,zero,6aac908 <_malloc_r+0x5ac>
 6aac82c:	2808d0fa 	srli	r4,r5,3
 6aac830:	200690fa 	slli	r3,r4,3
 6aac834:	1ad1883a 	add	r8,r3,r11
 6aac838:	41800217 	ldw	r6,8(r8)
 6aac83c:	41805b26 	beq	r8,r6,6aac9ac <_malloc_r+0x650>
 6aac840:	30800117 	ldw	r2,4(r6)
 6aac844:	00ffff04 	movi	r3,-4
 6aac848:	10c4703a 	and	r2,r2,r3
 6aac84c:	2880022e 	bgeu	r5,r2,6aac858 <_malloc_r+0x4fc>
 6aac850:	31800217 	ldw	r6,8(r6)
 6aac854:	41bffa1e 	bne	r8,r6,6aac840 <_malloc_r+0x4e4>
 6aac858:	32000317 	ldw	r8,12(r6)
 6aac85c:	39c00117 	ldw	r7,4(r7)
 6aac860:	82000315 	stw	r8,12(r16)
 6aac864:	81800215 	stw	r6,8(r16)
 6aac868:	0701ab34 	movhi	fp,1708
 6aac86c:	e7241f04 	addi	fp,fp,-28548
 6aac870:	34000315 	stw	r16,12(r6)
 6aac874:	44000215 	stw	r16,8(r8)
 6aac878:	003f3e06 	br	6aac574 <_malloc_r+0x218>
 6aac87c:	63000044 	addi	r12,r12,1
 6aac880:	608000cc 	andi	r2,r12,3
 6aac884:	10005d26 	beq	r2,zero,6aac9fc <_malloc_r+0x6a0>
 6aac888:	18c00204 	addi	r3,r3,8
 6aac88c:	003f5106 	br	6aac5d4 <_malloc_r+0x278>
 6aac890:	8089883a 	add	r4,r16,r2
 6aac894:	003f6d06 	br	6aac64c <_malloc_r+0x2f0>
 6aac898:	00805504 	movi	r2,340
 6aac89c:	10c02036 	bltu	r2,r3,6aac920 <_malloc_r+0x5c4>
 6aac8a0:	8804d3fa 	srli	r2,r17,15
 6aac8a4:	11801dc4 	addi	r6,r2,119
 6aac8a8:	300490fa 	slli	r2,r6,3
 6aac8ac:	003ed806 	br	6aac410 <_malloc_r+0xb4>
 6aac8b0:	48c000c4 	addi	r3,r9,3
 6aac8b4:	003f3106 	br	6aac57c <_malloc_r+0x220>
 6aac8b8:	05c1ab34 	movhi	r23,1708
 6aac8bc:	bdf09204 	addi	r23,r23,-15800
 6aac8c0:	b8800017 	ldw	r2,0(r23)
 6aac8c4:	988d883a 	add	r6,r19,r2
 6aac8c8:	b9800015 	stw	r6,0(r23)
 6aac8cc:	293fb21e 	bne	r5,r4,6aac798 <_malloc_r+0x43c>
 6aac8d0:	2083ffcc 	andi	r2,r4,4095
 6aac8d4:	103fb01e 	bne	r2,zero,6aac798 <_malloc_r+0x43c>
 6aac8d8:	e4000217 	ldw	r16,8(fp)
 6aac8dc:	9d45883a 	add	r2,r19,r21
 6aac8e0:	10800054 	ori	r2,r2,1
 6aac8e4:	80800115 	stw	r2,4(r16)
 6aac8e8:	b8c00017 	ldw	r3,0(r23)
 6aac8ec:	d0a6d717 	ldw	r2,-25764(gp)
 6aac8f0:	10c0012e 	bgeu	r2,r3,6aac8f8 <_malloc_r+0x59c>
 6aac8f4:	d0e6d715 	stw	r3,-25764(gp)
 6aac8f8:	d0a6d817 	ldw	r2,-25760(gp)
 6aac8fc:	10ff962e 	bgeu	r2,r3,6aac758 <_malloc_r+0x3fc>
 6aac900:	d0e6d815 	stw	r3,-25760(gp)
 6aac904:	003f9406 	br	6aac758 <_malloc_r+0x3fc>
 6aac908:	00800104 	movi	r2,4
 6aac90c:	11001e36 	bltu	r2,r4,6aac988 <_malloc_r+0x62c>
 6aac910:	2804d1ba 	srli	r2,r5,6
 6aac914:	11000e04 	addi	r4,r2,56
 6aac918:	200690fa 	slli	r3,r4,3
 6aac91c:	003fc506 	br	6aac834 <_malloc_r+0x4d8>
 6aac920:	00815504 	movi	r2,1364
 6aac924:	10c01d2e 	bgeu	r2,r3,6aac99c <_malloc_r+0x640>
 6aac928:	01801f84 	movi	r6,126
 6aac92c:	0080fc04 	movi	r2,1008
 6aac930:	003eb706 	br	6aac410 <_malloc_r+0xb4>
 6aac934:	00800204 	movi	r2,8
 6aac938:	10cbc83a 	sub	r5,r2,r3
 6aac93c:	2169883a 	add	r20,r4,r5
 6aac940:	003f9e06 	br	6aac7bc <_malloc_r+0x460>
 6aac944:	00bffe04 	movi	r2,-8
 6aac948:	a93ffd04 	addi	r4,r21,-12
 6aac94c:	2088703a 	and	r4,r4,r2
 6aac950:	b10b883a 	add	r5,r22,r4
 6aac954:	00c00144 	movi	r3,5
 6aac958:	28c00215 	stw	r3,8(r5)
 6aac95c:	28c00115 	stw	r3,4(r5)
 6aac960:	b0800117 	ldw	r2,4(r22)
 6aac964:	1080004c 	andi	r2,r2,1
 6aac968:	2084b03a 	or	r2,r4,r2
 6aac96c:	b0800115 	stw	r2,4(r22)
 6aac970:	313fdd2e 	bgeu	r6,r4,6aac8e8 <_malloc_r+0x58c>
 6aac974:	b1400204 	addi	r5,r22,8
 6aac978:	9009883a 	mov	r4,r18
 6aac97c:	6aab8600 	call	6aab860 <_free_r>
 6aac980:	e4000217 	ldw	r16,8(fp)
 6aac984:	003fd806 	br	6aac8e8 <_malloc_r+0x58c>
 6aac988:	00800504 	movi	r2,20
 6aac98c:	11001536 	bltu	r2,r4,6aac9e4 <_malloc_r+0x688>
 6aac990:	210016c4 	addi	r4,r4,91
 6aac994:	200690fa 	slli	r3,r4,3
 6aac998:	003fa606 	br	6aac834 <_malloc_r+0x4d8>
 6aac99c:	8804d4ba 	srli	r2,r17,18
 6aac9a0:	11801f04 	addi	r6,r2,124
 6aac9a4:	300490fa 	slli	r2,r6,3
 6aac9a8:	003e9906 	br	6aac410 <_malloc_r+0xb4>
 6aac9ac:	2009d0ba 	srai	r4,r4,2
 6aac9b0:	0141ab34 	movhi	r5,1708
 6aac9b4:	29641f04 	addi	r5,r5,-28548
 6aac9b8:	00c00044 	movi	r3,1
 6aac9bc:	28800117 	ldw	r2,4(r5)
 6aac9c0:	1906983a 	sll	r3,r3,r4
 6aac9c4:	10c4b03a 	or	r2,r2,r3
 6aac9c8:	28800115 	stw	r2,4(r5)
 6aac9cc:	003fa306 	br	6aac85c <_malloc_r+0x500>
 6aac9d0:	0027883a 	mov	r19,zero
 6aac9d4:	00c00044 	movi	r3,1
 6aac9d8:	003f8606 	br	6aac7f4 <_malloc_r+0x498>
 6aac9dc:	d1200315 	stw	r4,-32756(gp)
 6aac9e0:	003f7306 	br	6aac7b0 <_malloc_r+0x454>
 6aac9e4:	00801504 	movi	r2,84
 6aac9e8:	11001936 	bltu	r2,r4,6aaca50 <_malloc_r+0x6f4>
 6aac9ec:	2804d33a 	srli	r2,r5,12
 6aac9f0:	11001b84 	addi	r4,r2,110
 6aac9f4:	200690fa 	slli	r3,r4,3
 6aac9f8:	003f8e06 	br	6aac834 <_malloc_r+0x4d8>
 6aac9fc:	480b883a 	mov	r5,r9
 6aaca00:	6807883a 	mov	r3,r13
 6aaca04:	288000cc 	andi	r2,r5,3
 6aaca08:	18fffe04 	addi	r3,r3,-8
 6aaca0c:	297fffc4 	addi	r5,r5,-1
 6aaca10:	10001526 	beq	r2,zero,6aaca68 <_malloc_r+0x70c>
 6aaca14:	18800217 	ldw	r2,8(r3)
 6aaca18:	10fffa26 	beq	r2,r3,6aaca04 <_malloc_r+0x6a8>
 6aaca1c:	2109883a 	add	r4,r4,r4
 6aaca20:	393f1e36 	bltu	r7,r4,6aac69c <_malloc_r+0x340>
 6aaca24:	203f1d26 	beq	r4,zero,6aac69c <_malloc_r+0x340>
 6aaca28:	21c4703a 	and	r2,r4,r7
 6aaca2c:	10000226 	beq	r2,zero,6aaca38 <_malloc_r+0x6dc>
 6aaca30:	6013883a 	mov	r9,r12
 6aaca34:	003ee106 	br	6aac5bc <_malloc_r+0x260>
 6aaca38:	2109883a 	add	r4,r4,r4
 6aaca3c:	3904703a 	and	r2,r7,r4
 6aaca40:	63000104 	addi	r12,r12,4
 6aaca44:	103ffc26 	beq	r2,zero,6aaca38 <_malloc_r+0x6dc>
 6aaca48:	6013883a 	mov	r9,r12
 6aaca4c:	003edb06 	br	6aac5bc <_malloc_r+0x260>
 6aaca50:	00805504 	movi	r2,340
 6aaca54:	11000836 	bltu	r2,r4,6aaca78 <_malloc_r+0x71c>
 6aaca58:	2804d3fa 	srli	r2,r5,15
 6aaca5c:	11001dc4 	addi	r4,r2,119
 6aaca60:	200690fa 	slli	r3,r4,3
 6aaca64:	003f7306 	br	6aac834 <_malloc_r+0x4d8>
 6aaca68:	0104303a 	nor	r2,zero,r4
 6aaca6c:	388e703a 	and	r7,r7,r2
 6aaca70:	e1c00115 	stw	r7,4(fp)
 6aaca74:	003fe906 	br	6aaca1c <_malloc_r+0x6c0>
 6aaca78:	00815504 	movi	r2,1364
 6aaca7c:	1100032e 	bgeu	r2,r4,6aaca8c <_malloc_r+0x730>
 6aaca80:	01001f84 	movi	r4,126
 6aaca84:	00c0fc04 	movi	r3,1008
 6aaca88:	003f6a06 	br	6aac834 <_malloc_r+0x4d8>
 6aaca8c:	2804d4ba 	srli	r2,r5,18
 6aaca90:	11001f04 	addi	r4,r2,124
 6aaca94:	200690fa 	slli	r3,r4,3
 6aaca98:	003f6606 	br	6aac834 <_malloc_r+0x4d8>

06aaca9c <memset>:
 6aaca9c:	008000c4 	movi	r2,3
 6aacaa0:	29403fcc 	andi	r5,r5,255
 6aacaa4:	2007883a 	mov	r3,r4
 6aacaa8:	1180022e 	bgeu	r2,r6,6aacab4 <memset+0x18>
 6aacaac:	2084703a 	and	r2,r4,r2
 6aacab0:	10000826 	beq	r2,zero,6aacad4 <memset+0x38>
 6aacab4:	30000526 	beq	r6,zero,6aacacc <memset+0x30>
 6aacab8:	2805883a 	mov	r2,r5
 6aacabc:	30cd883a 	add	r6,r6,r3
 6aacac0:	18800005 	stb	r2,0(r3)
 6aacac4:	18c00044 	addi	r3,r3,1
 6aacac8:	19bffd1e 	bne	r3,r6,6aacac0 <memset+0x24>
 6aacacc:	2005883a 	mov	r2,r4
 6aacad0:	f800283a 	ret
 6aacad4:	2804923a 	slli	r2,r5,8
 6aacad8:	020003c4 	movi	r8,15
 6aacadc:	200f883a 	mov	r7,r4
 6aacae0:	2884b03a 	or	r2,r5,r2
 6aacae4:	1006943a 	slli	r3,r2,16
 6aacae8:	10c6b03a 	or	r3,r2,r3
 6aacaec:	41800a2e 	bgeu	r8,r6,6aacb18 <memset+0x7c>
 6aacaf0:	4005883a 	mov	r2,r8
 6aacaf4:	31bffc04 	addi	r6,r6,-16
 6aacaf8:	38c00015 	stw	r3,0(r7)
 6aacafc:	38c00115 	stw	r3,4(r7)
 6aacb00:	38c00215 	stw	r3,8(r7)
 6aacb04:	38c00315 	stw	r3,12(r7)
 6aacb08:	39c00404 	addi	r7,r7,16
 6aacb0c:	11bff936 	bltu	r2,r6,6aacaf4 <memset+0x58>
 6aacb10:	008000c4 	movi	r2,3
 6aacb14:	1180052e 	bgeu	r2,r6,6aacb2c <memset+0x90>
 6aacb18:	31bfff04 	addi	r6,r6,-4
 6aacb1c:	008000c4 	movi	r2,3
 6aacb20:	38c00015 	stw	r3,0(r7)
 6aacb24:	39c00104 	addi	r7,r7,4
 6aacb28:	11bffb36 	bltu	r2,r6,6aacb18 <memset+0x7c>
 6aacb2c:	3807883a 	mov	r3,r7
 6aacb30:	003fe006 	br	6aacab4 <memset+0x18>

06aacb34 <_open_r>:
 6aacb34:	defffd04 	addi	sp,sp,-12
 6aacb38:	dc000015 	stw	r16,0(sp)
 6aacb3c:	0401ab34 	movhi	r16,1708
 6aacb40:	84308504 	addi	r16,r16,-15852
 6aacb44:	dc400115 	stw	r17,4(sp)
 6aacb48:	80000015 	stw	zero,0(r16)
 6aacb4c:	2023883a 	mov	r17,r4
 6aacb50:	2809883a 	mov	r4,r5
 6aacb54:	300b883a 	mov	r5,r6
 6aacb58:	380d883a 	mov	r6,r7
 6aacb5c:	dfc00215 	stw	ra,8(sp)
 6aacb60:	6ab5bfc0 	call	6ab5bfc <open>
 6aacb64:	1007883a 	mov	r3,r2
 6aacb68:	00bfffc4 	movi	r2,-1
 6aacb6c:	18800626 	beq	r3,r2,6aacb88 <_open_r+0x54>
 6aacb70:	1805883a 	mov	r2,r3
 6aacb74:	dfc00217 	ldw	ra,8(sp)
 6aacb78:	dc400117 	ldw	r17,4(sp)
 6aacb7c:	dc000017 	ldw	r16,0(sp)
 6aacb80:	dec00304 	addi	sp,sp,12
 6aacb84:	f800283a 	ret
 6aacb88:	80800017 	ldw	r2,0(r16)
 6aacb8c:	103ff826 	beq	r2,zero,6aacb70 <_open_r+0x3c>
 6aacb90:	88800015 	stw	r2,0(r17)
 6aacb94:	1805883a 	mov	r2,r3
 6aacb98:	dfc00217 	ldw	ra,8(sp)
 6aacb9c:	dc400117 	ldw	r17,4(sp)
 6aacba0:	dc000017 	ldw	r16,0(sp)
 6aacba4:	dec00304 	addi	sp,sp,12
 6aacba8:	f800283a 	ret

06aacbac <printf>:
 6aacbac:	defffb04 	addi	sp,sp,-20
 6aacbb0:	dfc00115 	stw	ra,4(sp)
 6aacbb4:	d9400215 	stw	r5,8(sp)
 6aacbb8:	d9800315 	stw	r6,12(sp)
 6aacbbc:	d9c00415 	stw	r7,16(sp)
 6aacbc0:	0081ab34 	movhi	r2,1708
 6aacbc4:	10a9b004 	addi	r2,r2,-22848
 6aacbc8:	10c00017 	ldw	r3,0(r2)
 6aacbcc:	200b883a 	mov	r5,r4
 6aacbd0:	d8800204 	addi	r2,sp,8
 6aacbd4:	19000217 	ldw	r4,8(r3)
 6aacbd8:	100d883a 	mov	r6,r2
 6aacbdc:	d8800015 	stw	r2,0(sp)
 6aacbe0:	6aaf0b80 	call	6aaf0b8 <__vfprintf_internal>
 6aacbe4:	dfc00117 	ldw	ra,4(sp)
 6aacbe8:	dec00504 	addi	sp,sp,20
 6aacbec:	f800283a 	ret

06aacbf0 <_printf_r>:
 6aacbf0:	defffc04 	addi	sp,sp,-16
 6aacbf4:	dfc00115 	stw	ra,4(sp)
 6aacbf8:	d9800215 	stw	r6,8(sp)
 6aacbfc:	d9c00315 	stw	r7,12(sp)
 6aacc00:	280d883a 	mov	r6,r5
 6aacc04:	21400217 	ldw	r5,8(r4)
 6aacc08:	d8c00204 	addi	r3,sp,8
 6aacc0c:	180f883a 	mov	r7,r3
 6aacc10:	d8c00015 	stw	r3,0(sp)
 6aacc14:	6aad20c0 	call	6aad20c <___vfprintf_internal_r>
 6aacc18:	dfc00117 	ldw	ra,4(sp)
 6aacc1c:	dec00404 	addi	sp,sp,16
 6aacc20:	f800283a 	ret

06aacc24 <putc>:
 6aacc24:	defffc04 	addi	sp,sp,-16
 6aacc28:	dc800215 	stw	r18,8(sp)
 6aacc2c:	0481ab34 	movhi	r18,1708
 6aacc30:	94a9b004 	addi	r18,r18,-22848
 6aacc34:	90c00017 	ldw	r3,0(r18)
 6aacc38:	dc400115 	stw	r17,4(sp)
 6aacc3c:	dc000015 	stw	r16,0(sp)
 6aacc40:	dfc00315 	stw	ra,12(sp)
 6aacc44:	2023883a 	mov	r17,r4
 6aacc48:	2821883a 	mov	r16,r5
 6aacc4c:	18000226 	beq	r3,zero,6aacc58 <putc+0x34>
 6aacc50:	18800e17 	ldw	r2,56(r3)
 6aacc54:	10001126 	beq	r2,zero,6aacc9c <putc+0x78>
 6aacc58:	80800217 	ldw	r2,8(r16)
 6aacc5c:	10ffffc4 	addi	r3,r2,-1
 6aacc60:	80c00215 	stw	r3,8(r16)
 6aacc64:	18001316 	blt	r3,zero,6aaccb4 <putc+0x90>
 6aacc68:	80800017 	ldw	r2,0(r16)
 6aacc6c:	14400005 	stb	r17,0(r2)
 6aacc70:	80c00017 	ldw	r3,0(r16)
 6aacc74:	18800044 	addi	r2,r3,1
 6aacc78:	18c00003 	ldbu	r3,0(r3)
 6aacc7c:	80800015 	stw	r2,0(r16)
 6aacc80:	1805883a 	mov	r2,r3
 6aacc84:	dfc00317 	ldw	ra,12(sp)
 6aacc88:	dc800217 	ldw	r18,8(sp)
 6aacc8c:	dc400117 	ldw	r17,4(sp)
 6aacc90:	dc000017 	ldw	r16,0(sp)
 6aacc94:	dec00404 	addi	sp,sp,16
 6aacc98:	f800283a 	ret
 6aacc9c:	1809883a 	mov	r4,r3
 6aacca0:	6aab2b00 	call	6aab2b0 <__sinit>
 6aacca4:	80800217 	ldw	r2,8(r16)
 6aacca8:	10ffffc4 	addi	r3,r2,-1
 6aaccac:	80c00215 	stw	r3,8(r16)
 6aaccb0:	183fed0e 	bge	r3,zero,6aacc68 <putc+0x44>
 6aaccb4:	80800617 	ldw	r2,24(r16)
 6aaccb8:	18800f16 	blt	r3,r2,6aaccf8 <putc+0xd4>
 6aaccbc:	80800017 	ldw	r2,0(r16)
 6aaccc0:	14400005 	stb	r17,0(r2)
 6aaccc4:	81000017 	ldw	r4,0(r16)
 6aaccc8:	00800284 	movi	r2,10
 6aacccc:	20c00003 	ldbu	r3,0(r4)
 6aaccd0:	18801226 	beq	r3,r2,6aacd1c <putc+0xf8>
 6aaccd4:	20800044 	addi	r2,r4,1
 6aaccd8:	80800015 	stw	r2,0(r16)
 6aaccdc:	1805883a 	mov	r2,r3
 6aacce0:	dfc00317 	ldw	ra,12(sp)
 6aacce4:	dc800217 	ldw	r18,8(sp)
 6aacce8:	dc400117 	ldw	r17,4(sp)
 6aaccec:	dc000017 	ldw	r16,0(sp)
 6aaccf0:	dec00404 	addi	sp,sp,16
 6aaccf4:	f800283a 	ret
 6aaccf8:	91000017 	ldw	r4,0(r18)
 6aaccfc:	880b883a 	mov	r5,r17
 6aacd00:	800d883a 	mov	r6,r16
 6aacd04:	dfc00317 	ldw	ra,12(sp)
 6aacd08:	dc800217 	ldw	r18,8(sp)
 6aacd0c:	dc400117 	ldw	r17,4(sp)
 6aacd10:	dc000017 	ldw	r16,0(sp)
 6aacd14:	dec00404 	addi	sp,sp,16
 6aacd18:	6aaf0dc1 	jmpi	6aaf0dc <__swbuf_r>
 6aacd1c:	91000017 	ldw	r4,0(r18)
 6aacd20:	180b883a 	mov	r5,r3
 6aacd24:	003ff606 	br	6aacd00 <putc+0xdc>

06aacd28 <_putc_r>:
 6aacd28:	defffc04 	addi	sp,sp,-16
 6aacd2c:	dc400215 	stw	r17,8(sp)
 6aacd30:	dc000115 	stw	r16,4(sp)
 6aacd34:	dfc00315 	stw	ra,12(sp)
 6aacd38:	2021883a 	mov	r16,r4
 6aacd3c:	2823883a 	mov	r17,r5
 6aacd40:	20000226 	beq	r4,zero,6aacd4c <_putc_r+0x24>
 6aacd44:	20800e17 	ldw	r2,56(r4)
 6aacd48:	10001026 	beq	r2,zero,6aacd8c <_putc_r+0x64>
 6aacd4c:	30800217 	ldw	r2,8(r6)
 6aacd50:	10ffffc4 	addi	r3,r2,-1
 6aacd54:	30c00215 	stw	r3,8(r6)
 6aacd58:	18001316 	blt	r3,zero,6aacda8 <_putc_r+0x80>
 6aacd5c:	30800017 	ldw	r2,0(r6)
 6aacd60:	14400005 	stb	r17,0(r2)
 6aacd64:	30c00017 	ldw	r3,0(r6)
 6aacd68:	18800044 	addi	r2,r3,1
 6aacd6c:	18c00003 	ldbu	r3,0(r3)
 6aacd70:	30800015 	stw	r2,0(r6)
 6aacd74:	1805883a 	mov	r2,r3
 6aacd78:	dfc00317 	ldw	ra,12(sp)
 6aacd7c:	dc400217 	ldw	r17,8(sp)
 6aacd80:	dc000117 	ldw	r16,4(sp)
 6aacd84:	dec00404 	addi	sp,sp,16
 6aacd88:	f800283a 	ret
 6aacd8c:	d9800015 	stw	r6,0(sp)
 6aacd90:	6aab2b00 	call	6aab2b0 <__sinit>
 6aacd94:	d9800017 	ldw	r6,0(sp)
 6aacd98:	30800217 	ldw	r2,8(r6)
 6aacd9c:	10ffffc4 	addi	r3,r2,-1
 6aacda0:	30c00215 	stw	r3,8(r6)
 6aacda4:	183fed0e 	bge	r3,zero,6aacd5c <_putc_r+0x34>
 6aacda8:	30800617 	ldw	r2,24(r6)
 6aacdac:	18800e16 	blt	r3,r2,6aacde8 <_putc_r+0xc0>
 6aacdb0:	30800017 	ldw	r2,0(r6)
 6aacdb4:	14400005 	stb	r17,0(r2)
 6aacdb8:	31000017 	ldw	r4,0(r6)
 6aacdbc:	00800284 	movi	r2,10
 6aacdc0:	20c00003 	ldbu	r3,0(r4)
 6aacdc4:	18800f26 	beq	r3,r2,6aace04 <_putc_r+0xdc>
 6aacdc8:	20800044 	addi	r2,r4,1
 6aacdcc:	30800015 	stw	r2,0(r6)
 6aacdd0:	1805883a 	mov	r2,r3
 6aacdd4:	dfc00317 	ldw	ra,12(sp)
 6aacdd8:	dc400217 	ldw	r17,8(sp)
 6aacddc:	dc000117 	ldw	r16,4(sp)
 6aacde0:	dec00404 	addi	sp,sp,16
 6aacde4:	f800283a 	ret
 6aacde8:	8009883a 	mov	r4,r16
 6aacdec:	880b883a 	mov	r5,r17
 6aacdf0:	dfc00317 	ldw	ra,12(sp)
 6aacdf4:	dc400217 	ldw	r17,8(sp)
 6aacdf8:	dc000117 	ldw	r16,4(sp)
 6aacdfc:	dec00404 	addi	sp,sp,16
 6aace00:	6aaf0dc1 	jmpi	6aaf0dc <__swbuf_r>
 6aace04:	8009883a 	mov	r4,r16
 6aace08:	180b883a 	mov	r5,r3
 6aace0c:	003ff806 	br	6aacdf0 <_putc_r+0xc8>

06aace10 <__srefill_r>:
 6aace10:	defffd04 	addi	sp,sp,-12
 6aace14:	dc400115 	stw	r17,4(sp)
 6aace18:	dc000015 	stw	r16,0(sp)
 6aace1c:	dfc00215 	stw	ra,8(sp)
 6aace20:	2023883a 	mov	r17,r4
 6aace24:	2821883a 	mov	r16,r5
 6aace28:	20000226 	beq	r4,zero,6aace34 <__srefill_r+0x24>
 6aace2c:	20800e17 	ldw	r2,56(r4)
 6aace30:	10004126 	beq	r2,zero,6aacf38 <__srefill_r+0x128>
 6aace34:	80c0030b 	ldhu	r3,12(r16)
 6aace38:	80000115 	stw	zero,4(r16)
 6aace3c:	1880080c 	andi	r2,r3,32
 6aace40:	1000361e 	bne	r2,zero,6aacf1c <__srefill_r+0x10c>
 6aace44:	1880010c 	andi	r2,r3,4
 6aace48:	1000211e 	bne	r2,zero,6aaced0 <__srefill_r+0xc0>
 6aace4c:	1880040c 	andi	r2,r3,16
 6aace50:	10005026 	beq	r2,zero,6aacf94 <__srefill_r+0x184>
 6aace54:	1880020c 	andi	r2,r3,8
 6aace58:	1000541e 	bne	r2,zero,6aacfac <__srefill_r+0x19c>
 6aace5c:	8080030b 	ldhu	r2,12(r16)
 6aace60:	10800114 	ori	r2,r2,4
 6aace64:	8080030d 	sth	r2,12(r16)
 6aace68:	80800417 	ldw	r2,16(r16)
 6aace6c:	10004526 	beq	r2,zero,6aacf84 <__srefill_r+0x174>
 6aace70:	8080030b 	ldhu	r2,12(r16)
 6aace74:	108000cc 	andi	r2,r2,3
 6aace78:	1000361e 	bne	r2,zero,6aacf54 <__srefill_r+0x144>
 6aace7c:	81800417 	ldw	r6,16(r16)
 6aace80:	80c00817 	ldw	r3,32(r16)
 6aace84:	81400717 	ldw	r5,28(r16)
 6aace88:	81c00517 	ldw	r7,20(r16)
 6aace8c:	8809883a 	mov	r4,r17
 6aace90:	81800015 	stw	r6,0(r16)
 6aace94:	183ee83a 	callr	r3
 6aace98:	80c0030b 	ldhu	r3,12(r16)
 6aace9c:	1009883a 	mov	r4,r2
 6aacea0:	80800115 	stw	r2,4(r16)
 6aacea4:	00b7ffc4 	movi	r2,-8193
 6aacea8:	1884703a 	and	r2,r3,r2
 6aaceac:	8080030d 	sth	r2,12(r16)
 6aaceb0:	0100230e 	bge	zero,r4,6aacf40 <__srefill_r+0x130>
 6aaceb4:	0009883a 	mov	r4,zero
 6aaceb8:	2005883a 	mov	r2,r4
 6aacebc:	dfc00217 	ldw	ra,8(sp)
 6aacec0:	dc400117 	ldw	r17,4(sp)
 6aacec4:	dc000017 	ldw	r16,0(sp)
 6aacec8:	dec00304 	addi	sp,sp,12
 6aacecc:	f800283a 	ret
 6aaced0:	81400c17 	ldw	r5,48(r16)
 6aaced4:	283fe426 	beq	r5,zero,6aace68 <__srefill_r+0x58>
 6aaced8:	80801004 	addi	r2,r16,64
 6aacedc:	28800226 	beq	r5,r2,6aacee8 <__srefill_r+0xd8>
 6aacee0:	8809883a 	mov	r4,r17
 6aacee4:	6aab8600 	call	6aab860 <_free_r>
 6aacee8:	80800f17 	ldw	r2,60(r16)
 6aaceec:	80000c15 	stw	zero,48(r16)
 6aacef0:	80800115 	stw	r2,4(r16)
 6aacef4:	103fdc26 	beq	r2,zero,6aace68 <__srefill_r+0x58>
 6aacef8:	80800e17 	ldw	r2,56(r16)
 6aacefc:	0009883a 	mov	r4,zero
 6aacf00:	80800015 	stw	r2,0(r16)
 6aacf04:	2005883a 	mov	r2,r4
 6aacf08:	dfc00217 	ldw	ra,8(sp)
 6aacf0c:	dc400117 	ldw	r17,4(sp)
 6aacf10:	dc000017 	ldw	r16,0(sp)
 6aacf14:	dec00304 	addi	sp,sp,12
 6aacf18:	f800283a 	ret
 6aacf1c:	013fffc4 	movi	r4,-1
 6aacf20:	2005883a 	mov	r2,r4
 6aacf24:	dfc00217 	ldw	ra,8(sp)
 6aacf28:	dc400117 	ldw	r17,4(sp)
 6aacf2c:	dc000017 	ldw	r16,0(sp)
 6aacf30:	dec00304 	addi	sp,sp,12
 6aacf34:	f800283a 	ret
 6aacf38:	6aab2b00 	call	6aab2b0 <__sinit>
 6aacf3c:	003fbd06 	br	6aace34 <__srefill_r+0x24>
 6aacf40:	20000b1e 	bne	r4,zero,6aacf70 <__srefill_r+0x160>
 6aacf44:	10800814 	ori	r2,r2,32
 6aacf48:	013fffc4 	movi	r4,-1
 6aacf4c:	8080030d 	sth	r2,12(r16)
 6aacf50:	003fd906 	br	6aaceb8 <__srefill_r+0xa8>
 6aacf54:	0081ab34 	movhi	r2,1708
 6aacf58:	10a9b104 	addi	r2,r2,-22844
 6aacf5c:	11000017 	ldw	r4,0(r2)
 6aacf60:	0141aaf4 	movhi	r5,1707
 6aacf64:	2973f504 	addi	r5,r5,-12332
 6aacf68:	6aac1100 	call	6aac110 <_fwalk>
 6aacf6c:	003fc306 	br	6aace7c <__srefill_r+0x6c>
 6aacf70:	10801014 	ori	r2,r2,64
 6aacf74:	013fffc4 	movi	r4,-1
 6aacf78:	8080030d 	sth	r2,12(r16)
 6aacf7c:	80000115 	stw	zero,4(r16)
 6aacf80:	003fcd06 	br	6aaceb8 <__srefill_r+0xa8>
 6aacf84:	8809883a 	mov	r4,r17
 6aacf88:	800b883a 	mov	r5,r16
 6aacf8c:	6aac1c80 	call	6aac1c8 <__smakebuf_r>
 6aacf90:	003fb706 	br	6aace70 <__srefill_r+0x60>
 6aacf94:	18c01014 	ori	r3,r3,64
 6aacf98:	00800244 	movi	r2,9
 6aacf9c:	013fffc4 	movi	r4,-1
 6aacfa0:	88800015 	stw	r2,0(r17)
 6aacfa4:	80c0030d 	sth	r3,12(r16)
 6aacfa8:	003fc306 	br	6aaceb8 <__srefill_r+0xa8>
 6aacfac:	8809883a 	mov	r4,r17
 6aacfb0:	800b883a 	mov	r5,r16
 6aacfb4:	6aab0180 	call	6aab018 <_fflush_r>
 6aacfb8:	103fd81e 	bne	r2,zero,6aacf1c <__srefill_r+0x10c>
 6aacfbc:	8080030b 	ldhu	r2,12(r16)
 6aacfc0:	80000215 	stw	zero,8(r16)
 6aacfc4:	80000615 	stw	zero,24(r16)
 6aacfc8:	10bffdcc 	andi	r2,r2,65527
 6aacfcc:	8080030d 	sth	r2,12(r16)
 6aacfd0:	003fa206 	br	6aace5c <__srefill_r+0x4c>

06aacfd4 <lflush>:
 6aacfd4:	20c0030b 	ldhu	r3,12(r4)
 6aacfd8:	01400244 	movi	r5,9
 6aacfdc:	0005883a 	mov	r2,zero
 6aacfe0:	18c0024c 	andi	r3,r3,9
 6aacfe4:	19400126 	beq	r3,r5,6aacfec <lflush+0x18>
 6aacfe8:	f800283a 	ret
 6aacfec:	6aab2141 	jmpi	6aab214 <fflush>

06aacff0 <_sbrk_r>:
 6aacff0:	defffd04 	addi	sp,sp,-12
 6aacff4:	dc000015 	stw	r16,0(sp)
 6aacff8:	0401ab34 	movhi	r16,1708
 6aacffc:	84308504 	addi	r16,r16,-15852
 6aad000:	dc400115 	stw	r17,4(sp)
 6aad004:	80000015 	stw	zero,0(r16)
 6aad008:	2023883a 	mov	r17,r4
 6aad00c:	2809883a 	mov	r4,r5
 6aad010:	dfc00215 	stw	ra,8(sp)
 6aad014:	6ab5fc40 	call	6ab5fc4 <sbrk>
 6aad018:	1007883a 	mov	r3,r2
 6aad01c:	00bfffc4 	movi	r2,-1
 6aad020:	18800626 	beq	r3,r2,6aad03c <_sbrk_r+0x4c>
 6aad024:	1805883a 	mov	r2,r3
 6aad028:	dfc00217 	ldw	ra,8(sp)
 6aad02c:	dc400117 	ldw	r17,4(sp)
 6aad030:	dc000017 	ldw	r16,0(sp)
 6aad034:	dec00304 	addi	sp,sp,12
 6aad038:	f800283a 	ret
 6aad03c:	80800017 	ldw	r2,0(r16)
 6aad040:	103ff826 	beq	r2,zero,6aad024 <_sbrk_r+0x34>
 6aad044:	88800015 	stw	r2,0(r17)
 6aad048:	1805883a 	mov	r2,r3
 6aad04c:	dfc00217 	ldw	ra,8(sp)
 6aad050:	dc400117 	ldw	r17,4(sp)
 6aad054:	dc000017 	ldw	r16,0(sp)
 6aad058:	dec00304 	addi	sp,sp,12
 6aad05c:	f800283a 	ret

06aad060 <__sclose>:
 6aad060:	2940038f 	ldh	r5,14(r5)
 6aad064:	6aaf5901 	jmpi	6aaf590 <_close_r>

06aad068 <__sseek>:
 6aad068:	defffe04 	addi	sp,sp,-8
 6aad06c:	dc000015 	stw	r16,0(sp)
 6aad070:	2821883a 	mov	r16,r5
 6aad074:	2940038f 	ldh	r5,14(r5)
 6aad078:	dfc00115 	stw	ra,4(sp)
 6aad07c:	6ab143c0 	call	6ab143c <_lseek_r>
 6aad080:	1007883a 	mov	r3,r2
 6aad084:	00bfffc4 	movi	r2,-1
 6aad088:	18800926 	beq	r3,r2,6aad0b0 <__sseek+0x48>
 6aad08c:	8080030b 	ldhu	r2,12(r16)
 6aad090:	80c01415 	stw	r3,80(r16)
 6aad094:	10840014 	ori	r2,r2,4096
 6aad098:	8080030d 	sth	r2,12(r16)
 6aad09c:	1805883a 	mov	r2,r3
 6aad0a0:	dfc00117 	ldw	ra,4(sp)
 6aad0a4:	dc000017 	ldw	r16,0(sp)
 6aad0a8:	dec00204 	addi	sp,sp,8
 6aad0ac:	f800283a 	ret
 6aad0b0:	8080030b 	ldhu	r2,12(r16)
 6aad0b4:	10bbffcc 	andi	r2,r2,61439
 6aad0b8:	8080030d 	sth	r2,12(r16)
 6aad0bc:	1805883a 	mov	r2,r3
 6aad0c0:	dfc00117 	ldw	ra,4(sp)
 6aad0c4:	dc000017 	ldw	r16,0(sp)
 6aad0c8:	dec00204 	addi	sp,sp,8
 6aad0cc:	f800283a 	ret

06aad0d0 <__swrite>:
 6aad0d0:	2880030b 	ldhu	r2,12(r5)
 6aad0d4:	defffb04 	addi	sp,sp,-20
 6aad0d8:	dcc00315 	stw	r19,12(sp)
 6aad0dc:	1080400c 	andi	r2,r2,256
 6aad0e0:	dc800215 	stw	r18,8(sp)
 6aad0e4:	dc400115 	stw	r17,4(sp)
 6aad0e8:	dc000015 	stw	r16,0(sp)
 6aad0ec:	3027883a 	mov	r19,r6
 6aad0f0:	3825883a 	mov	r18,r7
 6aad0f4:	dfc00415 	stw	ra,16(sp)
 6aad0f8:	2821883a 	mov	r16,r5
 6aad0fc:	000d883a 	mov	r6,zero
 6aad100:	01c00084 	movi	r7,2
 6aad104:	2023883a 	mov	r17,r4
 6aad108:	10000226 	beq	r2,zero,6aad114 <__swrite+0x44>
 6aad10c:	2940038f 	ldh	r5,14(r5)
 6aad110:	6ab143c0 	call	6ab143c <_lseek_r>
 6aad114:	8080030b 	ldhu	r2,12(r16)
 6aad118:	8140038f 	ldh	r5,14(r16)
 6aad11c:	8809883a 	mov	r4,r17
 6aad120:	10bbffcc 	andi	r2,r2,61439
 6aad124:	980d883a 	mov	r6,r19
 6aad128:	900f883a 	mov	r7,r18
 6aad12c:	8080030d 	sth	r2,12(r16)
 6aad130:	dfc00417 	ldw	ra,16(sp)
 6aad134:	dcc00317 	ldw	r19,12(sp)
 6aad138:	dc800217 	ldw	r18,8(sp)
 6aad13c:	dc400117 	ldw	r17,4(sp)
 6aad140:	dc000017 	ldw	r16,0(sp)
 6aad144:	dec00504 	addi	sp,sp,20
 6aad148:	6aaf2281 	jmpi	6aaf228 <_write_r>

06aad14c <__sread>:
 6aad14c:	defffe04 	addi	sp,sp,-8
 6aad150:	dc000015 	stw	r16,0(sp)
 6aad154:	2821883a 	mov	r16,r5
 6aad158:	2940038f 	ldh	r5,14(r5)
 6aad15c:	dfc00115 	stw	ra,4(sp)
 6aad160:	6ab270c0 	call	6ab270c <_read_r>
 6aad164:	1007883a 	mov	r3,r2
 6aad168:	10000816 	blt	r2,zero,6aad18c <__sread+0x40>
 6aad16c:	80801417 	ldw	r2,80(r16)
 6aad170:	10c5883a 	add	r2,r2,r3
 6aad174:	80801415 	stw	r2,80(r16)
 6aad178:	1805883a 	mov	r2,r3
 6aad17c:	dfc00117 	ldw	ra,4(sp)
 6aad180:	dc000017 	ldw	r16,0(sp)
 6aad184:	dec00204 	addi	sp,sp,8
 6aad188:	f800283a 	ret
 6aad18c:	8080030b 	ldhu	r2,12(r16)
 6aad190:	10bbffcc 	andi	r2,r2,61439
 6aad194:	8080030d 	sth	r2,12(r16)
 6aad198:	1805883a 	mov	r2,r3
 6aad19c:	dfc00117 	ldw	ra,4(sp)
 6aad1a0:	dc000017 	ldw	r16,0(sp)
 6aad1a4:	dec00204 	addi	sp,sp,8
 6aad1a8:	f800283a 	ret

06aad1ac <_times_r>:
 6aad1ac:	2809883a 	mov	r4,r5
 6aad1b0:	6ab60801 	jmpi	6ab6080 <times>

06aad1b4 <__sprint_r>:
 6aad1b4:	30800217 	ldw	r2,8(r6)
 6aad1b8:	defffe04 	addi	sp,sp,-8
 6aad1bc:	dc000015 	stw	r16,0(sp)
 6aad1c0:	dfc00115 	stw	ra,4(sp)
 6aad1c4:	3021883a 	mov	r16,r6
 6aad1c8:	0007883a 	mov	r3,zero
 6aad1cc:	1000061e 	bne	r2,zero,6aad1e8 <__sprint_r+0x34>
 6aad1d0:	1805883a 	mov	r2,r3
 6aad1d4:	30000115 	stw	zero,4(r6)
 6aad1d8:	dfc00117 	ldw	ra,4(sp)
 6aad1dc:	dc000017 	ldw	r16,0(sp)
 6aad1e0:	dec00204 	addi	sp,sp,8
 6aad1e4:	f800283a 	ret
 6aad1e8:	6ab0e6c0 	call	6ab0e6c <__sfvwrite_r>
 6aad1ec:	1007883a 	mov	r3,r2
 6aad1f0:	1805883a 	mov	r2,r3
 6aad1f4:	80000115 	stw	zero,4(r16)
 6aad1f8:	80000215 	stw	zero,8(r16)
 6aad1fc:	dfc00117 	ldw	ra,4(sp)
 6aad200:	dc000017 	ldw	r16,0(sp)
 6aad204:	dec00204 	addi	sp,sp,8
 6aad208:	f800283a 	ret

06aad20c <___vfprintf_internal_r>:
 6aad20c:	defea404 	addi	sp,sp,-1392
 6aad210:	dd815815 	stw	r22,1376(sp)
 6aad214:	dc015215 	stw	r16,1352(sp)
 6aad218:	d9c15115 	stw	r7,1348(sp)
 6aad21c:	dfc15b15 	stw	ra,1388(sp)
 6aad220:	df015a15 	stw	fp,1384(sp)
 6aad224:	ddc15915 	stw	r23,1380(sp)
 6aad228:	dd415715 	stw	r21,1372(sp)
 6aad22c:	dd015615 	stw	r20,1368(sp)
 6aad230:	dcc15515 	stw	r19,1364(sp)
 6aad234:	dc815415 	stw	r18,1360(sp)
 6aad238:	dc415315 	stw	r17,1356(sp)
 6aad23c:	282d883a 	mov	r22,r5
 6aad240:	3021883a 	mov	r16,r6
 6aad244:	d9014f15 	stw	r4,1340(sp)
 6aad248:	6ab13800 	call	6ab1380 <_localeconv_r>
 6aad24c:	10800017 	ldw	r2,0(r2)
 6aad250:	d9c15117 	ldw	r7,1348(sp)
 6aad254:	d8814915 	stw	r2,1316(sp)
 6aad258:	d8814f17 	ldw	r2,1340(sp)
 6aad25c:	10000226 	beq	r2,zero,6aad268 <___vfprintf_internal_r+0x5c>
 6aad260:	10800e17 	ldw	r2,56(r2)
 6aad264:	10020d26 	beq	r2,zero,6aada9c <___vfprintf_internal_r+0x890>
 6aad268:	b080030b 	ldhu	r2,12(r22)
 6aad26c:	1080020c 	andi	r2,r2,8
 6aad270:	10020e26 	beq	r2,zero,6aadaac <___vfprintf_internal_r+0x8a0>
 6aad274:	b0800417 	ldw	r2,16(r22)
 6aad278:	10020c26 	beq	r2,zero,6aadaac <___vfprintf_internal_r+0x8a0>
 6aad27c:	b200030b 	ldhu	r8,12(r22)
 6aad280:	00800284 	movi	r2,10
 6aad284:	40c0068c 	andi	r3,r8,26
 6aad288:	18802f1e 	bne	r3,r2,6aad348 <___vfprintf_internal_r+0x13c>
 6aad28c:	b080038f 	ldh	r2,14(r22)
 6aad290:	10002d16 	blt	r2,zero,6aad348 <___vfprintf_internal_r+0x13c>
 6aad294:	b240038b 	ldhu	r9,14(r22)
 6aad298:	b2800717 	ldw	r10,28(r22)
 6aad29c:	b2c00917 	ldw	r11,36(r22)
 6aad2a0:	d9014f17 	ldw	r4,1340(sp)
 6aad2a4:	dc402904 	addi	r17,sp,164
 6aad2a8:	d8804004 	addi	r2,sp,256
 6aad2ac:	00c10004 	movi	r3,1024
 6aad2b0:	423fff4c 	andi	r8,r8,65533
 6aad2b4:	800d883a 	mov	r6,r16
 6aad2b8:	880b883a 	mov	r5,r17
 6aad2bc:	da002c0d 	sth	r8,176(sp)
 6aad2c0:	da402c8d 	sth	r9,178(sp)
 6aad2c4:	da803015 	stw	r10,192(sp)
 6aad2c8:	dac03215 	stw	r11,200(sp)
 6aad2cc:	d8802d15 	stw	r2,180(sp)
 6aad2d0:	d8c02e15 	stw	r3,184(sp)
 6aad2d4:	d8802915 	stw	r2,164(sp)
 6aad2d8:	d8c02b15 	stw	r3,172(sp)
 6aad2dc:	d8002f15 	stw	zero,188(sp)
 6aad2e0:	6aad20c0 	call	6aad20c <___vfprintf_internal_r>
 6aad2e4:	d8814b15 	stw	r2,1324(sp)
 6aad2e8:	10000416 	blt	r2,zero,6aad2fc <___vfprintf_internal_r+0xf0>
 6aad2ec:	d9014f17 	ldw	r4,1340(sp)
 6aad2f0:	880b883a 	mov	r5,r17
 6aad2f4:	6aab0180 	call	6aab018 <_fflush_r>
 6aad2f8:	1002321e 	bne	r2,zero,6aadbc4 <___vfprintf_internal_r+0x9b8>
 6aad2fc:	d8802c0b 	ldhu	r2,176(sp)
 6aad300:	1080100c 	andi	r2,r2,64
 6aad304:	10000326 	beq	r2,zero,6aad314 <___vfprintf_internal_r+0x108>
 6aad308:	b080030b 	ldhu	r2,12(r22)
 6aad30c:	10801014 	ori	r2,r2,64
 6aad310:	b080030d 	sth	r2,12(r22)
 6aad314:	d8814b17 	ldw	r2,1324(sp)
 6aad318:	dfc15b17 	ldw	ra,1388(sp)
 6aad31c:	df015a17 	ldw	fp,1384(sp)
 6aad320:	ddc15917 	ldw	r23,1380(sp)
 6aad324:	dd815817 	ldw	r22,1376(sp)
 6aad328:	dd415717 	ldw	r21,1372(sp)
 6aad32c:	dd015617 	ldw	r20,1368(sp)
 6aad330:	dcc15517 	ldw	r19,1364(sp)
 6aad334:	dc815417 	ldw	r18,1360(sp)
 6aad338:	dc415317 	ldw	r17,1356(sp)
 6aad33c:	dc015217 	ldw	r16,1352(sp)
 6aad340:	dec15c04 	addi	sp,sp,1392
 6aad344:	f800283a 	ret
 6aad348:	0005883a 	mov	r2,zero
 6aad34c:	0007883a 	mov	r3,zero
 6aad350:	dd401904 	addi	r21,sp,100
 6aad354:	d8814215 	stw	r2,1288(sp)
 6aad358:	802f883a 	mov	r23,r16
 6aad35c:	d8c14315 	stw	r3,1292(sp)
 6aad360:	d8014b15 	stw	zero,1324(sp)
 6aad364:	d8014815 	stw	zero,1312(sp)
 6aad368:	d8014415 	stw	zero,1296(sp)
 6aad36c:	d8014715 	stw	zero,1308(sp)
 6aad370:	dd400c15 	stw	r21,48(sp)
 6aad374:	d8000e15 	stw	zero,56(sp)
 6aad378:	d8000d15 	stw	zero,52(sp)
 6aad37c:	b8800007 	ldb	r2,0(r23)
 6aad380:	10001926 	beq	r2,zero,6aad3e8 <___vfprintf_internal_r+0x1dc>
 6aad384:	00c00944 	movi	r3,37
 6aad388:	10c01726 	beq	r2,r3,6aad3e8 <___vfprintf_internal_r+0x1dc>
 6aad38c:	b821883a 	mov	r16,r23
 6aad390:	00000106 	br	6aad398 <___vfprintf_internal_r+0x18c>
 6aad394:	10c00326 	beq	r2,r3,6aad3a4 <___vfprintf_internal_r+0x198>
 6aad398:	84000044 	addi	r16,r16,1
 6aad39c:	80800007 	ldb	r2,0(r16)
 6aad3a0:	103ffc1e 	bne	r2,zero,6aad394 <___vfprintf_internal_r+0x188>
 6aad3a4:	85e7c83a 	sub	r19,r16,r23
 6aad3a8:	98000e26 	beq	r19,zero,6aad3e4 <___vfprintf_internal_r+0x1d8>
 6aad3ac:	dc800e17 	ldw	r18,56(sp)
 6aad3b0:	dc400d17 	ldw	r17,52(sp)
 6aad3b4:	008001c4 	movi	r2,7
 6aad3b8:	94e5883a 	add	r18,r18,r19
 6aad3bc:	8c400044 	addi	r17,r17,1
 6aad3c0:	adc00015 	stw	r23,0(r21)
 6aad3c4:	dc800e15 	stw	r18,56(sp)
 6aad3c8:	acc00115 	stw	r19,4(r21)
 6aad3cc:	dc400d15 	stw	r17,52(sp)
 6aad3d0:	14428b16 	blt	r2,r17,6aade00 <___vfprintf_internal_r+0xbf4>
 6aad3d4:	ad400204 	addi	r21,r21,8
 6aad3d8:	d9014b17 	ldw	r4,1324(sp)
 6aad3dc:	24c9883a 	add	r4,r4,r19
 6aad3e0:	d9014b15 	stw	r4,1324(sp)
 6aad3e4:	802f883a 	mov	r23,r16
 6aad3e8:	b8800007 	ldb	r2,0(r23)
 6aad3ec:	10013c26 	beq	r2,zero,6aad8e0 <___vfprintf_internal_r+0x6d4>
 6aad3f0:	bdc00044 	addi	r23,r23,1
 6aad3f4:	d8000405 	stb	zero,16(sp)
 6aad3f8:	b8c00007 	ldb	r3,0(r23)
 6aad3fc:	04ffffc4 	movi	r19,-1
 6aad400:	d8014c15 	stw	zero,1328(sp)
 6aad404:	d8014a15 	stw	zero,1320(sp)
 6aad408:	d8c14d15 	stw	r3,1332(sp)
 6aad40c:	bdc00044 	addi	r23,r23,1
 6aad410:	d9414d17 	ldw	r5,1332(sp)
 6aad414:	00801604 	movi	r2,88
 6aad418:	28fff804 	addi	r3,r5,-32
 6aad41c:	10c06036 	bltu	r2,r3,6aad5a0 <___vfprintf_internal_r+0x394>
 6aad420:	18c5883a 	add	r2,r3,r3
 6aad424:	1085883a 	add	r2,r2,r2
 6aad428:	00c1aaf4 	movhi	r3,1707
 6aad42c:	18f50f04 	addi	r3,r3,-11204
 6aad430:	10c5883a 	add	r2,r2,r3
 6aad434:	11000017 	ldw	r4,0(r2)
 6aad438:	2000683a 	jmp	r4
 6aad43c:	06aae3b0 	cmpltui	gp,zero,43918
 6aad440:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad444:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad448:	06aae39c 	xori	gp,zero,43918
 6aad44c:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad450:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad454:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad458:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad45c:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad460:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad464:	06aae17c 	xorhi	gp,zero,43909
 6aad468:	06aae38c 	andi	gp,zero,43918
 6aad46c:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad470:	06aae194 	movui	gp,43910
 6aad474:	06aae428 	cmpgeui	gp,zero,43920
 6aad478:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad47c:	06aae414 	movui	gp,43920
 6aad480:	06aae3dc 	xori	gp,zero,43919
 6aad484:	06aae3dc 	xori	gp,zero,43919
 6aad488:	06aae3dc 	xori	gp,zero,43919
 6aad48c:	06aae3dc 	xori	gp,zero,43919
 6aad490:	06aae3dc 	xori	gp,zero,43919
 6aad494:	06aae3dc 	xori	gp,zero,43919
 6aad498:	06aae3dc 	xori	gp,zero,43919
 6aad49c:	06aae3dc 	xori	gp,zero,43919
 6aad4a0:	06aae3dc 	xori	gp,zero,43919
 6aad4a4:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4a8:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4ac:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4b0:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4b4:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4b8:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4bc:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4c0:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4c4:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4c8:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4cc:	06aadbf8 	rdprs	gp,zero,-21649
 6aad4d0:	06aae264 	muli	gp,zero,-21623
 6aad4d4:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4d8:	06aae264 	muli	gp,zero,-21623
 6aad4dc:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4e0:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4e4:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4e8:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4ec:	06aae3c8 	cmpgei	gp,zero,-21617
 6aad4f0:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4f4:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad4f8:	06aadcac 	andhi	gp,zero,43890
 6aad4fc:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad500:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad504:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad508:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad50c:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad510:	06aadcf8 	rdprs	gp,zero,-21645
 6aad514:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad518:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad51c:	06aae318 	cmpnei	gp,zero,-21620
 6aad520:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad524:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad528:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad52c:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad530:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad534:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad538:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad53c:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad540:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad544:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad548:	06aae2ec 	andhi	gp,zero,43915
 6aad54c:	06aadc04 	movi	gp,-21648
 6aad550:	06aae264 	muli	gp,zero,-21623
 6aad554:	06aae264 	muli	gp,zero,-21623
 6aad558:	06aae264 	muli	gp,zero,-21623
 6aad55c:	06aae250 	cmplti	gp,zero,-21623
 6aad560:	06aadc04 	movi	gp,-21648
 6aad564:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad568:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad56c:	06aae1d8 	cmpnei	gp,zero,-21625
 6aad570:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad574:	06aae1a8 	cmpgeui	gp,zero,43910
 6aad578:	06aadcb8 	rdprs	gp,zero,-21646
 6aad57c:	06aae208 	cmpgei	gp,zero,-21624
 6aad580:	06aae1f4 	movhi	gp,43911
 6aad584:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad588:	06aae484 	movi	gp,-21614
 6aad58c:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad590:	06aadd04 	movi	gp,-21644
 6aad594:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad598:	06aad5a0 	cmpeqi	gp,zero,-21674
 6aad59c:	06aae37c 	xorhi	gp,zero,43917
 6aad5a0:	d9014d17 	ldw	r4,1332(sp)
 6aad5a4:	2000ce26 	beq	r4,zero,6aad8e0 <___vfprintf_internal_r+0x6d4>
 6aad5a8:	01400044 	movi	r5,1
 6aad5ac:	d9800f04 	addi	r6,sp,60
 6aad5b0:	d9c14015 	stw	r7,1280(sp)
 6aad5b4:	d9414515 	stw	r5,1300(sp)
 6aad5b8:	d9814115 	stw	r6,1284(sp)
 6aad5bc:	280f883a 	mov	r7,r5
 6aad5c0:	d9000f05 	stb	r4,60(sp)
 6aad5c4:	d8000405 	stb	zero,16(sp)
 6aad5c8:	d8014615 	stw	zero,1304(sp)
 6aad5cc:	d8c14c17 	ldw	r3,1328(sp)
 6aad5d0:	1880008c 	andi	r2,r3,2
 6aad5d4:	1005003a 	cmpeq	r2,r2,zero
 6aad5d8:	d8815015 	stw	r2,1344(sp)
 6aad5dc:	1000031e 	bne	r2,zero,6aad5ec <___vfprintf_internal_r+0x3e0>
 6aad5e0:	d9014517 	ldw	r4,1300(sp)
 6aad5e4:	21000084 	addi	r4,r4,2
 6aad5e8:	d9014515 	stw	r4,1300(sp)
 6aad5ec:	d9414c17 	ldw	r5,1328(sp)
 6aad5f0:	2940210c 	andi	r5,r5,132
 6aad5f4:	d9414e15 	stw	r5,1336(sp)
 6aad5f8:	28002d1e 	bne	r5,zero,6aad6b0 <___vfprintf_internal_r+0x4a4>
 6aad5fc:	d9814a17 	ldw	r6,1320(sp)
 6aad600:	d8814517 	ldw	r2,1300(sp)
 6aad604:	30a1c83a 	sub	r16,r6,r2
 6aad608:	0400290e 	bge	zero,r16,6aad6b0 <___vfprintf_internal_r+0x4a4>
 6aad60c:	00800404 	movi	r2,16
 6aad610:	1404580e 	bge	r2,r16,6aae774 <___vfprintf_internal_r+0x1568>
 6aad614:	dc800e17 	ldw	r18,56(sp)
 6aad618:	dc400d17 	ldw	r17,52(sp)
 6aad61c:	1027883a 	mov	r19,r2
 6aad620:	0701ab34 	movhi	fp,1708
 6aad624:	e7226884 	addi	fp,fp,-30302
 6aad628:	050001c4 	movi	r20,7
 6aad62c:	00000306 	br	6aad63c <___vfprintf_internal_r+0x430>
 6aad630:	843ffc04 	addi	r16,r16,-16
 6aad634:	ad400204 	addi	r21,r21,8
 6aad638:	9c00130e 	bge	r19,r16,6aad688 <___vfprintf_internal_r+0x47c>
 6aad63c:	94800404 	addi	r18,r18,16
 6aad640:	8c400044 	addi	r17,r17,1
 6aad644:	af000015 	stw	fp,0(r21)
 6aad648:	acc00115 	stw	r19,4(r21)
 6aad64c:	dc800e15 	stw	r18,56(sp)
 6aad650:	dc400d15 	stw	r17,52(sp)
 6aad654:	a47ff60e 	bge	r20,r17,6aad630 <___vfprintf_internal_r+0x424>
 6aad658:	d9014f17 	ldw	r4,1340(sp)
 6aad65c:	b00b883a 	mov	r5,r22
 6aad660:	d9800c04 	addi	r6,sp,48
 6aad664:	d9c15115 	stw	r7,1348(sp)
 6aad668:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aad66c:	d9c15117 	ldw	r7,1348(sp)
 6aad670:	10009e1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aad674:	843ffc04 	addi	r16,r16,-16
 6aad678:	dc800e17 	ldw	r18,56(sp)
 6aad67c:	dc400d17 	ldw	r17,52(sp)
 6aad680:	dd401904 	addi	r21,sp,100
 6aad684:	9c3fed16 	blt	r19,r16,6aad63c <___vfprintf_internal_r+0x430>
 6aad688:	9425883a 	add	r18,r18,r16
 6aad68c:	8c400044 	addi	r17,r17,1
 6aad690:	008001c4 	movi	r2,7
 6aad694:	af000015 	stw	fp,0(r21)
 6aad698:	ac000115 	stw	r16,4(r21)
 6aad69c:	dc800e15 	stw	r18,56(sp)
 6aad6a0:	dc400d15 	stw	r17,52(sp)
 6aad6a4:	1441f516 	blt	r2,r17,6aade7c <___vfprintf_internal_r+0xc70>
 6aad6a8:	ad400204 	addi	r21,r21,8
 6aad6ac:	00000206 	br	6aad6b8 <___vfprintf_internal_r+0x4ac>
 6aad6b0:	dc800e17 	ldw	r18,56(sp)
 6aad6b4:	dc400d17 	ldw	r17,52(sp)
 6aad6b8:	d8800407 	ldb	r2,16(sp)
 6aad6bc:	10000b26 	beq	r2,zero,6aad6ec <___vfprintf_internal_r+0x4e0>
 6aad6c0:	00800044 	movi	r2,1
 6aad6c4:	94800044 	addi	r18,r18,1
 6aad6c8:	8c400044 	addi	r17,r17,1
 6aad6cc:	a8800115 	stw	r2,4(r21)
 6aad6d0:	d8c00404 	addi	r3,sp,16
 6aad6d4:	008001c4 	movi	r2,7
 6aad6d8:	a8c00015 	stw	r3,0(r21)
 6aad6dc:	dc800e15 	stw	r18,56(sp)
 6aad6e0:	dc400d15 	stw	r17,52(sp)
 6aad6e4:	1441da16 	blt	r2,r17,6aade50 <___vfprintf_internal_r+0xc44>
 6aad6e8:	ad400204 	addi	r21,r21,8
 6aad6ec:	d9015017 	ldw	r4,1344(sp)
 6aad6f0:	20000b1e 	bne	r4,zero,6aad720 <___vfprintf_internal_r+0x514>
 6aad6f4:	d8800444 	addi	r2,sp,17
 6aad6f8:	94800084 	addi	r18,r18,2
 6aad6fc:	8c400044 	addi	r17,r17,1
 6aad700:	a8800015 	stw	r2,0(r21)
 6aad704:	00c00084 	movi	r3,2
 6aad708:	008001c4 	movi	r2,7
 6aad70c:	a8c00115 	stw	r3,4(r21)
 6aad710:	dc800e15 	stw	r18,56(sp)
 6aad714:	dc400d15 	stw	r17,52(sp)
 6aad718:	1441c216 	blt	r2,r17,6aade24 <___vfprintf_internal_r+0xc18>
 6aad71c:	ad400204 	addi	r21,r21,8
 6aad720:	d9414e17 	ldw	r5,1336(sp)
 6aad724:	00802004 	movi	r2,128
 6aad728:	2880b126 	beq	r5,r2,6aad9f0 <___vfprintf_internal_r+0x7e4>
 6aad72c:	d8c14617 	ldw	r3,1304(sp)
 6aad730:	19e1c83a 	sub	r16,r3,r7
 6aad734:	0400260e 	bge	zero,r16,6aad7d0 <___vfprintf_internal_r+0x5c4>
 6aad738:	00800404 	movi	r2,16
 6aad73c:	1403c90e 	bge	r2,r16,6aae664 <___vfprintf_internal_r+0x1458>
 6aad740:	1027883a 	mov	r19,r2
 6aad744:	0701ab34 	movhi	fp,1708
 6aad748:	e7226484 	addi	fp,fp,-30318
 6aad74c:	050001c4 	movi	r20,7
 6aad750:	00000306 	br	6aad760 <___vfprintf_internal_r+0x554>
 6aad754:	843ffc04 	addi	r16,r16,-16
 6aad758:	ad400204 	addi	r21,r21,8
 6aad75c:	9c00130e 	bge	r19,r16,6aad7ac <___vfprintf_internal_r+0x5a0>
 6aad760:	94800404 	addi	r18,r18,16
 6aad764:	8c400044 	addi	r17,r17,1
 6aad768:	af000015 	stw	fp,0(r21)
 6aad76c:	acc00115 	stw	r19,4(r21)
 6aad770:	dc800e15 	stw	r18,56(sp)
 6aad774:	dc400d15 	stw	r17,52(sp)
 6aad778:	a47ff60e 	bge	r20,r17,6aad754 <___vfprintf_internal_r+0x548>
 6aad77c:	d9014f17 	ldw	r4,1340(sp)
 6aad780:	b00b883a 	mov	r5,r22
 6aad784:	d9800c04 	addi	r6,sp,48
 6aad788:	d9c15115 	stw	r7,1348(sp)
 6aad78c:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aad790:	d9c15117 	ldw	r7,1348(sp)
 6aad794:	1000551e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aad798:	843ffc04 	addi	r16,r16,-16
 6aad79c:	dc800e17 	ldw	r18,56(sp)
 6aad7a0:	dc400d17 	ldw	r17,52(sp)
 6aad7a4:	dd401904 	addi	r21,sp,100
 6aad7a8:	9c3fed16 	blt	r19,r16,6aad760 <___vfprintf_internal_r+0x554>
 6aad7ac:	9425883a 	add	r18,r18,r16
 6aad7b0:	8c400044 	addi	r17,r17,1
 6aad7b4:	008001c4 	movi	r2,7
 6aad7b8:	af000015 	stw	fp,0(r21)
 6aad7bc:	ac000115 	stw	r16,4(r21)
 6aad7c0:	dc800e15 	stw	r18,56(sp)
 6aad7c4:	dc400d15 	stw	r17,52(sp)
 6aad7c8:	14418216 	blt	r2,r17,6aaddd4 <___vfprintf_internal_r+0xbc8>
 6aad7cc:	ad400204 	addi	r21,r21,8
 6aad7d0:	d9014c17 	ldw	r4,1328(sp)
 6aad7d4:	2080400c 	andi	r2,r4,256
 6aad7d8:	10004a1e 	bne	r2,zero,6aad904 <___vfprintf_internal_r+0x6f8>
 6aad7dc:	d9414117 	ldw	r5,1284(sp)
 6aad7e0:	91e5883a 	add	r18,r18,r7
 6aad7e4:	8c400044 	addi	r17,r17,1
 6aad7e8:	008001c4 	movi	r2,7
 6aad7ec:	a9400015 	stw	r5,0(r21)
 6aad7f0:	a9c00115 	stw	r7,4(r21)
 6aad7f4:	dc800e15 	stw	r18,56(sp)
 6aad7f8:	dc400d15 	stw	r17,52(sp)
 6aad7fc:	14416716 	blt	r2,r17,6aadd9c <___vfprintf_internal_r+0xb90>
 6aad800:	a8c00204 	addi	r3,r21,8
 6aad804:	d9814c17 	ldw	r6,1328(sp)
 6aad808:	3080010c 	andi	r2,r6,4
 6aad80c:	10002826 	beq	r2,zero,6aad8b0 <___vfprintf_internal_r+0x6a4>
 6aad810:	d8814a17 	ldw	r2,1320(sp)
 6aad814:	d9014517 	ldw	r4,1300(sp)
 6aad818:	1121c83a 	sub	r16,r2,r4
 6aad81c:	0400240e 	bge	zero,r16,6aad8b0 <___vfprintf_internal_r+0x6a4>
 6aad820:	00800404 	movi	r2,16
 6aad824:	14044f0e 	bge	r2,r16,6aae964 <___vfprintf_internal_r+0x1758>
 6aad828:	dc400d17 	ldw	r17,52(sp)
 6aad82c:	1027883a 	mov	r19,r2
 6aad830:	0701ab34 	movhi	fp,1708
 6aad834:	e7226884 	addi	fp,fp,-30302
 6aad838:	050001c4 	movi	r20,7
 6aad83c:	00000306 	br	6aad84c <___vfprintf_internal_r+0x640>
 6aad840:	843ffc04 	addi	r16,r16,-16
 6aad844:	18c00204 	addi	r3,r3,8
 6aad848:	9c00110e 	bge	r19,r16,6aad890 <___vfprintf_internal_r+0x684>
 6aad84c:	94800404 	addi	r18,r18,16
 6aad850:	8c400044 	addi	r17,r17,1
 6aad854:	1f000015 	stw	fp,0(r3)
 6aad858:	1cc00115 	stw	r19,4(r3)
 6aad85c:	dc800e15 	stw	r18,56(sp)
 6aad860:	dc400d15 	stw	r17,52(sp)
 6aad864:	a47ff60e 	bge	r20,r17,6aad840 <___vfprintf_internal_r+0x634>
 6aad868:	d9014f17 	ldw	r4,1340(sp)
 6aad86c:	b00b883a 	mov	r5,r22
 6aad870:	d9800c04 	addi	r6,sp,48
 6aad874:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aad878:	10001c1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aad87c:	843ffc04 	addi	r16,r16,-16
 6aad880:	dc800e17 	ldw	r18,56(sp)
 6aad884:	dc400d17 	ldw	r17,52(sp)
 6aad888:	d8c01904 	addi	r3,sp,100
 6aad88c:	9c3fef16 	blt	r19,r16,6aad84c <___vfprintf_internal_r+0x640>
 6aad890:	9425883a 	add	r18,r18,r16
 6aad894:	8c400044 	addi	r17,r17,1
 6aad898:	008001c4 	movi	r2,7
 6aad89c:	1f000015 	stw	fp,0(r3)
 6aad8a0:	1c000115 	stw	r16,4(r3)
 6aad8a4:	dc800e15 	stw	r18,56(sp)
 6aad8a8:	dc400d15 	stw	r17,52(sp)
 6aad8ac:	1440cb16 	blt	r2,r17,6aadbdc <___vfprintf_internal_r+0x9d0>
 6aad8b0:	d8814a17 	ldw	r2,1320(sp)
 6aad8b4:	d9414517 	ldw	r5,1300(sp)
 6aad8b8:	1140010e 	bge	r2,r5,6aad8c0 <___vfprintf_internal_r+0x6b4>
 6aad8bc:	2805883a 	mov	r2,r5
 6aad8c0:	d9814b17 	ldw	r6,1324(sp)
 6aad8c4:	308d883a 	add	r6,r6,r2
 6aad8c8:	d9814b15 	stw	r6,1324(sp)
 6aad8cc:	90013b1e 	bne	r18,zero,6aaddbc <___vfprintf_internal_r+0xbb0>
 6aad8d0:	d9c14017 	ldw	r7,1280(sp)
 6aad8d4:	dd401904 	addi	r21,sp,100
 6aad8d8:	d8000d15 	stw	zero,52(sp)
 6aad8dc:	003ea706 	br	6aad37c <___vfprintf_internal_r+0x170>
 6aad8e0:	d8800e17 	ldw	r2,56(sp)
 6aad8e4:	10053f1e 	bne	r2,zero,6aaede4 <___vfprintf_internal_r+0x1bd8>
 6aad8e8:	d8000d15 	stw	zero,52(sp)
 6aad8ec:	b080030b 	ldhu	r2,12(r22)
 6aad8f0:	1080100c 	andi	r2,r2,64
 6aad8f4:	103e8726 	beq	r2,zero,6aad314 <___vfprintf_internal_r+0x108>
 6aad8f8:	00bfffc4 	movi	r2,-1
 6aad8fc:	d8814b15 	stw	r2,1324(sp)
 6aad900:	003e8406 	br	6aad314 <___vfprintf_internal_r+0x108>
 6aad904:	d9814d17 	ldw	r6,1332(sp)
 6aad908:	00801944 	movi	r2,101
 6aad90c:	11806e16 	blt	r2,r6,6aadac8 <___vfprintf_internal_r+0x8bc>
 6aad910:	d9414717 	ldw	r5,1308(sp)
 6aad914:	00c00044 	movi	r3,1
 6aad918:	1943430e 	bge	r3,r5,6aae628 <___vfprintf_internal_r+0x141c>
 6aad91c:	d8814117 	ldw	r2,1284(sp)
 6aad920:	94800044 	addi	r18,r18,1
 6aad924:	8c400044 	addi	r17,r17,1
 6aad928:	a8800015 	stw	r2,0(r21)
 6aad92c:	008001c4 	movi	r2,7
 6aad930:	a8c00115 	stw	r3,4(r21)
 6aad934:	dc800e15 	stw	r18,56(sp)
 6aad938:	dc400d15 	stw	r17,52(sp)
 6aad93c:	1441ca16 	blt	r2,r17,6aae068 <___vfprintf_internal_r+0xe5c>
 6aad940:	a8c00204 	addi	r3,r21,8
 6aad944:	d9014917 	ldw	r4,1316(sp)
 6aad948:	00800044 	movi	r2,1
 6aad94c:	94800044 	addi	r18,r18,1
 6aad950:	8c400044 	addi	r17,r17,1
 6aad954:	18800115 	stw	r2,4(r3)
 6aad958:	008001c4 	movi	r2,7
 6aad95c:	19000015 	stw	r4,0(r3)
 6aad960:	dc800e15 	stw	r18,56(sp)
 6aad964:	dc400d15 	stw	r17,52(sp)
 6aad968:	1441b616 	blt	r2,r17,6aae044 <___vfprintf_internal_r+0xe38>
 6aad96c:	1cc00204 	addi	r19,r3,8
 6aad970:	d9014217 	ldw	r4,1288(sp)
 6aad974:	d9414317 	ldw	r5,1292(sp)
 6aad978:	000d883a 	mov	r6,zero
 6aad97c:	000f883a 	mov	r7,zero
 6aad980:	6ab47000 	call	6ab4700 <__nedf2>
 6aad984:	10017426 	beq	r2,zero,6aadf58 <___vfprintf_internal_r+0xd4c>
 6aad988:	d9414717 	ldw	r5,1308(sp)
 6aad98c:	d9814117 	ldw	r6,1284(sp)
 6aad990:	8c400044 	addi	r17,r17,1
 6aad994:	2c85883a 	add	r2,r5,r18
 6aad998:	14bfffc4 	addi	r18,r2,-1
 6aad99c:	28bfffc4 	addi	r2,r5,-1
 6aad9a0:	30c00044 	addi	r3,r6,1
 6aad9a4:	98800115 	stw	r2,4(r19)
 6aad9a8:	008001c4 	movi	r2,7
 6aad9ac:	98c00015 	stw	r3,0(r19)
 6aad9b0:	dc800e15 	stw	r18,56(sp)
 6aad9b4:	dc400d15 	stw	r17,52(sp)
 6aad9b8:	14418e16 	blt	r2,r17,6aadff4 <___vfprintf_internal_r+0xde8>
 6aad9bc:	9cc00204 	addi	r19,r19,8
 6aad9c0:	d9414817 	ldw	r5,1312(sp)
 6aad9c4:	d8800804 	addi	r2,sp,32
 6aad9c8:	8c400044 	addi	r17,r17,1
 6aad9cc:	9165883a 	add	r18,r18,r5
 6aad9d0:	98800015 	stw	r2,0(r19)
 6aad9d4:	008001c4 	movi	r2,7
 6aad9d8:	99400115 	stw	r5,4(r19)
 6aad9dc:	dc800e15 	stw	r18,56(sp)
 6aad9e0:	dc400d15 	stw	r17,52(sp)
 6aad9e4:	1440ed16 	blt	r2,r17,6aadd9c <___vfprintf_internal_r+0xb90>
 6aad9e8:	98c00204 	addi	r3,r19,8
 6aad9ec:	003f8506 	br	6aad804 <___vfprintf_internal_r+0x5f8>
 6aad9f0:	d9814a17 	ldw	r6,1320(sp)
 6aad9f4:	d8814517 	ldw	r2,1300(sp)
 6aad9f8:	30a1c83a 	sub	r16,r6,r2
 6aad9fc:	043f4b0e 	bge	zero,r16,6aad72c <___vfprintf_internal_r+0x520>
 6aada00:	00800404 	movi	r2,16
 6aada04:	1404340e 	bge	r2,r16,6aaead8 <___vfprintf_internal_r+0x18cc>
 6aada08:	1027883a 	mov	r19,r2
 6aada0c:	0701ab34 	movhi	fp,1708
 6aada10:	e7226484 	addi	fp,fp,-30318
 6aada14:	050001c4 	movi	r20,7
 6aada18:	00000306 	br	6aada28 <___vfprintf_internal_r+0x81c>
 6aada1c:	843ffc04 	addi	r16,r16,-16
 6aada20:	ad400204 	addi	r21,r21,8
 6aada24:	9c00130e 	bge	r19,r16,6aada74 <___vfprintf_internal_r+0x868>
 6aada28:	94800404 	addi	r18,r18,16
 6aada2c:	8c400044 	addi	r17,r17,1
 6aada30:	af000015 	stw	fp,0(r21)
 6aada34:	acc00115 	stw	r19,4(r21)
 6aada38:	dc800e15 	stw	r18,56(sp)
 6aada3c:	dc400d15 	stw	r17,52(sp)
 6aada40:	a47ff60e 	bge	r20,r17,6aada1c <___vfprintf_internal_r+0x810>
 6aada44:	d9014f17 	ldw	r4,1340(sp)
 6aada48:	b00b883a 	mov	r5,r22
 6aada4c:	d9800c04 	addi	r6,sp,48
 6aada50:	d9c15115 	stw	r7,1348(sp)
 6aada54:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aada58:	d9c15117 	ldw	r7,1348(sp)
 6aada5c:	103fa31e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aada60:	843ffc04 	addi	r16,r16,-16
 6aada64:	dc800e17 	ldw	r18,56(sp)
 6aada68:	dc400d17 	ldw	r17,52(sp)
 6aada6c:	dd401904 	addi	r21,sp,100
 6aada70:	9c3fed16 	blt	r19,r16,6aada28 <___vfprintf_internal_r+0x81c>
 6aada74:	9425883a 	add	r18,r18,r16
 6aada78:	8c400044 	addi	r17,r17,1
 6aada7c:	008001c4 	movi	r2,7
 6aada80:	af000015 	stw	fp,0(r21)
 6aada84:	ac000115 	stw	r16,4(r21)
 6aada88:	dc800e15 	stw	r18,56(sp)
 6aada8c:	dc400d15 	stw	r17,52(sp)
 6aada90:	14416116 	blt	r2,r17,6aae018 <___vfprintf_internal_r+0xe0c>
 6aada94:	ad400204 	addi	r21,r21,8
 6aada98:	003f2406 	br	6aad72c <___vfprintf_internal_r+0x520>
 6aada9c:	d9014f17 	ldw	r4,1340(sp)
 6aadaa0:	6aab2b00 	call	6aab2b0 <__sinit>
 6aadaa4:	d9c15117 	ldw	r7,1348(sp)
 6aadaa8:	003def06 	br	6aad268 <___vfprintf_internal_r+0x5c>
 6aadaac:	d9014f17 	ldw	r4,1340(sp)
 6aadab0:	b00b883a 	mov	r5,r22
 6aadab4:	d9c15115 	stw	r7,1348(sp)
 6aadab8:	6aaf2a00 	call	6aaf2a0 <__swsetup_r>
 6aadabc:	d9c15117 	ldw	r7,1348(sp)
 6aadac0:	103dee26 	beq	r2,zero,6aad27c <___vfprintf_internal_r+0x70>
 6aadac4:	003f8c06 	br	6aad8f8 <___vfprintf_internal_r+0x6ec>
 6aadac8:	d9014217 	ldw	r4,1288(sp)
 6aadacc:	d9414317 	ldw	r5,1292(sp)
 6aadad0:	000d883a 	mov	r6,zero
 6aadad4:	000f883a 	mov	r7,zero
 6aadad8:	6ab46780 	call	6ab4678 <__eqdf2>
 6aadadc:	1000f21e 	bne	r2,zero,6aadea8 <___vfprintf_internal_r+0xc9c>
 6aadae0:	0081ab34 	movhi	r2,1708
 6aadae4:	10a26404 	addi	r2,r2,-30320
 6aadae8:	94800044 	addi	r18,r18,1
 6aadaec:	8c400044 	addi	r17,r17,1
 6aadaf0:	a8800015 	stw	r2,0(r21)
 6aadaf4:	00c00044 	movi	r3,1
 6aadaf8:	008001c4 	movi	r2,7
 6aadafc:	a8c00115 	stw	r3,4(r21)
 6aadb00:	dc800e15 	stw	r18,56(sp)
 6aadb04:	dc400d15 	stw	r17,52(sp)
 6aadb08:	1442fa16 	blt	r2,r17,6aae6f4 <___vfprintf_internal_r+0x14e8>
 6aadb0c:	a8c00204 	addi	r3,r21,8
 6aadb10:	d8800517 	ldw	r2,20(sp)
 6aadb14:	d9014717 	ldw	r4,1308(sp)
 6aadb18:	11015c0e 	bge	r2,r4,6aae08c <___vfprintf_internal_r+0xe80>
 6aadb1c:	dc400d17 	ldw	r17,52(sp)
 6aadb20:	d9814917 	ldw	r6,1316(sp)
 6aadb24:	00800044 	movi	r2,1
 6aadb28:	94800044 	addi	r18,r18,1
 6aadb2c:	8c400044 	addi	r17,r17,1
 6aadb30:	18800115 	stw	r2,4(r3)
 6aadb34:	008001c4 	movi	r2,7
 6aadb38:	19800015 	stw	r6,0(r3)
 6aadb3c:	dc800e15 	stw	r18,56(sp)
 6aadb40:	dc400d15 	stw	r17,52(sp)
 6aadb44:	14431016 	blt	r2,r17,6aae788 <___vfprintf_internal_r+0x157c>
 6aadb48:	18c00204 	addi	r3,r3,8
 6aadb4c:	d8814717 	ldw	r2,1308(sp)
 6aadb50:	143fffc4 	addi	r16,r2,-1
 6aadb54:	043f2b0e 	bge	zero,r16,6aad804 <___vfprintf_internal_r+0x5f8>
 6aadb58:	00800404 	movi	r2,16
 6aadb5c:	1402a20e 	bge	r2,r16,6aae5e8 <___vfprintf_internal_r+0x13dc>
 6aadb60:	dc400d17 	ldw	r17,52(sp)
 6aadb64:	1027883a 	mov	r19,r2
 6aadb68:	0701ab34 	movhi	fp,1708
 6aadb6c:	e7226484 	addi	fp,fp,-30318
 6aadb70:	050001c4 	movi	r20,7
 6aadb74:	00000306 	br	6aadb84 <___vfprintf_internal_r+0x978>
 6aadb78:	18c00204 	addi	r3,r3,8
 6aadb7c:	843ffc04 	addi	r16,r16,-16
 6aadb80:	9c029c0e 	bge	r19,r16,6aae5f4 <___vfprintf_internal_r+0x13e8>
 6aadb84:	94800404 	addi	r18,r18,16
 6aadb88:	8c400044 	addi	r17,r17,1
 6aadb8c:	1f000015 	stw	fp,0(r3)
 6aadb90:	1cc00115 	stw	r19,4(r3)
 6aadb94:	dc800e15 	stw	r18,56(sp)
 6aadb98:	dc400d15 	stw	r17,52(sp)
 6aadb9c:	a47ff60e 	bge	r20,r17,6aadb78 <___vfprintf_internal_r+0x96c>
 6aadba0:	d9014f17 	ldw	r4,1340(sp)
 6aadba4:	b00b883a 	mov	r5,r22
 6aadba8:	d9800c04 	addi	r6,sp,48
 6aadbac:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aadbb0:	103f4e1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aadbb4:	dc800e17 	ldw	r18,56(sp)
 6aadbb8:	dc400d17 	ldw	r17,52(sp)
 6aadbbc:	d8c01904 	addi	r3,sp,100
 6aadbc0:	003fee06 	br	6aadb7c <___vfprintf_internal_r+0x970>
 6aadbc4:	d8802c0b 	ldhu	r2,176(sp)
 6aadbc8:	00ffffc4 	movi	r3,-1
 6aadbcc:	d8c14b15 	stw	r3,1324(sp)
 6aadbd0:	1080100c 	andi	r2,r2,64
 6aadbd4:	103dcc1e 	bne	r2,zero,6aad308 <___vfprintf_internal_r+0xfc>
 6aadbd8:	003dce06 	br	6aad314 <___vfprintf_internal_r+0x108>
 6aadbdc:	d9014f17 	ldw	r4,1340(sp)
 6aadbe0:	b00b883a 	mov	r5,r22
 6aadbe4:	d9800c04 	addi	r6,sp,48
 6aadbe8:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aadbec:	103f3f1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aadbf0:	dc800e17 	ldw	r18,56(sp)
 6aadbf4:	003f2e06 	br	6aad8b0 <___vfprintf_internal_r+0x6a4>
 6aadbf8:	d9414c17 	ldw	r5,1328(sp)
 6aadbfc:	29400414 	ori	r5,r5,16
 6aadc00:	d9414c15 	stw	r5,1328(sp)
 6aadc04:	d9814c17 	ldw	r6,1328(sp)
 6aadc08:	3080080c 	andi	r2,r6,32
 6aadc0c:	10014f1e 	bne	r2,zero,6aae14c <___vfprintf_internal_r+0xf40>
 6aadc10:	d8c14c17 	ldw	r3,1328(sp)
 6aadc14:	1880040c 	andi	r2,r3,16
 6aadc18:	1002ea1e 	bne	r2,zero,6aae7c4 <___vfprintf_internal_r+0x15b8>
 6aadc1c:	d9014c17 	ldw	r4,1328(sp)
 6aadc20:	2080100c 	andi	r2,r4,64
 6aadc24:	1002e726 	beq	r2,zero,6aae7c4 <___vfprintf_internal_r+0x15b8>
 6aadc28:	3880000f 	ldh	r2,0(r7)
 6aadc2c:	39c00104 	addi	r7,r7,4
 6aadc30:	d9c14015 	stw	r7,1280(sp)
 6aadc34:	1023d7fa 	srai	r17,r2,31
 6aadc38:	1021883a 	mov	r16,r2
 6aadc3c:	88037216 	blt	r17,zero,6aaea08 <___vfprintf_internal_r+0x17fc>
 6aadc40:	01000044 	movi	r4,1
 6aadc44:	98000416 	blt	r19,zero,6aadc58 <___vfprintf_internal_r+0xa4c>
 6aadc48:	d8c14c17 	ldw	r3,1328(sp)
 6aadc4c:	00bfdfc4 	movi	r2,-129
 6aadc50:	1886703a 	and	r3,r3,r2
 6aadc54:	d8c14c15 	stw	r3,1328(sp)
 6aadc58:	8444b03a 	or	r2,r16,r17
 6aadc5c:	1002261e 	bne	r2,zero,6aae4f8 <___vfprintf_internal_r+0x12ec>
 6aadc60:	9802251e 	bne	r19,zero,6aae4f8 <___vfprintf_internal_r+0x12ec>
 6aadc64:	20803fcc 	andi	r2,r4,255
 6aadc68:	10029b26 	beq	r2,zero,6aae6d8 <___vfprintf_internal_r+0x14cc>
 6aadc6c:	d8c01904 	addi	r3,sp,100
 6aadc70:	dd000f04 	addi	r20,sp,60
 6aadc74:	d8c14115 	stw	r3,1284(sp)
 6aadc78:	d8c14117 	ldw	r3,1284(sp)
 6aadc7c:	dcc14515 	stw	r19,1300(sp)
 6aadc80:	a0c5c83a 	sub	r2,r20,r3
 6aadc84:	11c00a04 	addi	r7,r2,40
 6aadc88:	99c0010e 	bge	r19,r7,6aadc90 <___vfprintf_internal_r+0xa84>
 6aadc8c:	d9c14515 	stw	r7,1300(sp)
 6aadc90:	dcc14615 	stw	r19,1304(sp)
 6aadc94:	d8800407 	ldb	r2,16(sp)
 6aadc98:	103e4c26 	beq	r2,zero,6aad5cc <___vfprintf_internal_r+0x3c0>
 6aadc9c:	d8814517 	ldw	r2,1300(sp)
 6aadca0:	10800044 	addi	r2,r2,1
 6aadca4:	d8814515 	stw	r2,1300(sp)
 6aadca8:	003e4806 	br	6aad5cc <___vfprintf_internal_r+0x3c0>
 6aadcac:	d9814c17 	ldw	r6,1328(sp)
 6aadcb0:	31800414 	ori	r6,r6,16
 6aadcb4:	d9814c15 	stw	r6,1328(sp)
 6aadcb8:	d8c14c17 	ldw	r3,1328(sp)
 6aadcbc:	1880080c 	andi	r2,r3,32
 6aadcc0:	1001271e 	bne	r2,zero,6aae160 <___vfprintf_internal_r+0xf54>
 6aadcc4:	d9414c17 	ldw	r5,1328(sp)
 6aadcc8:	2880040c 	andi	r2,r5,16
 6aadccc:	1002b61e 	bne	r2,zero,6aae7a8 <___vfprintf_internal_r+0x159c>
 6aadcd0:	d9814c17 	ldw	r6,1328(sp)
 6aadcd4:	3080100c 	andi	r2,r6,64
 6aadcd8:	1002b326 	beq	r2,zero,6aae7a8 <___vfprintf_internal_r+0x159c>
 6aadcdc:	3c00000b 	ldhu	r16,0(r7)
 6aadce0:	0009883a 	mov	r4,zero
 6aadce4:	39c00104 	addi	r7,r7,4
 6aadce8:	0023883a 	mov	r17,zero
 6aadcec:	d9c14015 	stw	r7,1280(sp)
 6aadcf0:	d8000405 	stb	zero,16(sp)
 6aadcf4:	003fd306 	br	6aadc44 <___vfprintf_internal_r+0xa38>
 6aadcf8:	d9014c17 	ldw	r4,1328(sp)
 6aadcfc:	21000414 	ori	r4,r4,16
 6aadd00:	d9014c15 	stw	r4,1328(sp)
 6aadd04:	d9414c17 	ldw	r5,1328(sp)
 6aadd08:	2880080c 	andi	r2,r5,32
 6aadd0c:	1001081e 	bne	r2,zero,6aae130 <___vfprintf_internal_r+0xf24>
 6aadd10:	d8c14c17 	ldw	r3,1328(sp)
 6aadd14:	1880040c 	andi	r2,r3,16
 6aadd18:	1002b01e 	bne	r2,zero,6aae7dc <___vfprintf_internal_r+0x15d0>
 6aadd1c:	d9014c17 	ldw	r4,1328(sp)
 6aadd20:	2080100c 	andi	r2,r4,64
 6aadd24:	1002ad26 	beq	r2,zero,6aae7dc <___vfprintf_internal_r+0x15d0>
 6aadd28:	3c00000b 	ldhu	r16,0(r7)
 6aadd2c:	01000044 	movi	r4,1
 6aadd30:	39c00104 	addi	r7,r7,4
 6aadd34:	0023883a 	mov	r17,zero
 6aadd38:	d9c14015 	stw	r7,1280(sp)
 6aadd3c:	d8000405 	stb	zero,16(sp)
 6aadd40:	003fc006 	br	6aadc44 <___vfprintf_internal_r+0xa38>
 6aadd44:	d9014f17 	ldw	r4,1340(sp)
 6aadd48:	b00b883a 	mov	r5,r22
 6aadd4c:	d9800c04 	addi	r6,sp,48
 6aadd50:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aadd54:	103ee51e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aadd58:	dc800e17 	ldw	r18,56(sp)
 6aadd5c:	d8c01904 	addi	r3,sp,100
 6aadd60:	d9814c17 	ldw	r6,1328(sp)
 6aadd64:	3080004c 	andi	r2,r6,1
 6aadd68:	1005003a 	cmpeq	r2,r2,zero
 6aadd6c:	103ea51e 	bne	r2,zero,6aad804 <___vfprintf_internal_r+0x5f8>
 6aadd70:	00800044 	movi	r2,1
 6aadd74:	dc400d17 	ldw	r17,52(sp)
 6aadd78:	18800115 	stw	r2,4(r3)
 6aadd7c:	d8814917 	ldw	r2,1316(sp)
 6aadd80:	94800044 	addi	r18,r18,1
 6aadd84:	8c400044 	addi	r17,r17,1
 6aadd88:	18800015 	stw	r2,0(r3)
 6aadd8c:	008001c4 	movi	r2,7
 6aadd90:	dc800e15 	stw	r18,56(sp)
 6aadd94:	dc400d15 	stw	r17,52(sp)
 6aadd98:	14421e0e 	bge	r2,r17,6aae614 <___vfprintf_internal_r+0x1408>
 6aadd9c:	d9014f17 	ldw	r4,1340(sp)
 6aadda0:	b00b883a 	mov	r5,r22
 6aadda4:	d9800c04 	addi	r6,sp,48
 6aadda8:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aaddac:	103ecf1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aaddb0:	dc800e17 	ldw	r18,56(sp)
 6aaddb4:	d8c01904 	addi	r3,sp,100
 6aaddb8:	003e9206 	br	6aad804 <___vfprintf_internal_r+0x5f8>
 6aaddbc:	d9014f17 	ldw	r4,1340(sp)
 6aaddc0:	b00b883a 	mov	r5,r22
 6aaddc4:	d9800c04 	addi	r6,sp,48
 6aaddc8:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aaddcc:	103ec026 	beq	r2,zero,6aad8d0 <___vfprintf_internal_r+0x6c4>
 6aaddd0:	003ec606 	br	6aad8ec <___vfprintf_internal_r+0x6e0>
 6aaddd4:	d9014f17 	ldw	r4,1340(sp)
 6aaddd8:	b00b883a 	mov	r5,r22
 6aadddc:	d9800c04 	addi	r6,sp,48
 6aadde0:	d9c15115 	stw	r7,1348(sp)
 6aadde4:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aadde8:	d9c15117 	ldw	r7,1348(sp)
 6aaddec:	103ebf1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aaddf0:	dc800e17 	ldw	r18,56(sp)
 6aaddf4:	dc400d17 	ldw	r17,52(sp)
 6aaddf8:	dd401904 	addi	r21,sp,100
 6aaddfc:	003e7406 	br	6aad7d0 <___vfprintf_internal_r+0x5c4>
 6aade00:	d9014f17 	ldw	r4,1340(sp)
 6aade04:	b00b883a 	mov	r5,r22
 6aade08:	d9800c04 	addi	r6,sp,48
 6aade0c:	d9c15115 	stw	r7,1348(sp)
 6aade10:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aade14:	d9c15117 	ldw	r7,1348(sp)
 6aade18:	103eb41e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aade1c:	dd401904 	addi	r21,sp,100
 6aade20:	003d6d06 	br	6aad3d8 <___vfprintf_internal_r+0x1cc>
 6aade24:	d9014f17 	ldw	r4,1340(sp)
 6aade28:	b00b883a 	mov	r5,r22
 6aade2c:	d9800c04 	addi	r6,sp,48
 6aade30:	d9c15115 	stw	r7,1348(sp)
 6aade34:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aade38:	d9c15117 	ldw	r7,1348(sp)
 6aade3c:	103eab1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aade40:	dc800e17 	ldw	r18,56(sp)
 6aade44:	dc400d17 	ldw	r17,52(sp)
 6aade48:	dd401904 	addi	r21,sp,100
 6aade4c:	003e3406 	br	6aad720 <___vfprintf_internal_r+0x514>
 6aade50:	d9014f17 	ldw	r4,1340(sp)
 6aade54:	b00b883a 	mov	r5,r22
 6aade58:	d9800c04 	addi	r6,sp,48
 6aade5c:	d9c15115 	stw	r7,1348(sp)
 6aade60:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aade64:	d9c15117 	ldw	r7,1348(sp)
 6aade68:	103ea01e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aade6c:	dc800e17 	ldw	r18,56(sp)
 6aade70:	dc400d17 	ldw	r17,52(sp)
 6aade74:	dd401904 	addi	r21,sp,100
 6aade78:	003e1c06 	br	6aad6ec <___vfprintf_internal_r+0x4e0>
 6aade7c:	d9014f17 	ldw	r4,1340(sp)
 6aade80:	b00b883a 	mov	r5,r22
 6aade84:	d9800c04 	addi	r6,sp,48
 6aade88:	d9c15115 	stw	r7,1348(sp)
 6aade8c:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aade90:	d9c15117 	ldw	r7,1348(sp)
 6aade94:	103e951e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aade98:	dc800e17 	ldw	r18,56(sp)
 6aade9c:	dc400d17 	ldw	r17,52(sp)
 6aadea0:	dd401904 	addi	r21,sp,100
 6aadea4:	003e0406 	br	6aad6b8 <___vfprintf_internal_r+0x4ac>
 6aadea8:	d9000517 	ldw	r4,20(sp)
 6aadeac:	0102520e 	bge	zero,r4,6aae7f8 <___vfprintf_internal_r+0x15ec>
 6aadeb0:	d9814717 	ldw	r6,1308(sp)
 6aadeb4:	21807a16 	blt	r4,r6,6aae0a0 <___vfprintf_internal_r+0xe94>
 6aadeb8:	d8814117 	ldw	r2,1284(sp)
 6aadebc:	91a5883a 	add	r18,r18,r6
 6aadec0:	8c400044 	addi	r17,r17,1
 6aadec4:	a8800015 	stw	r2,0(r21)
 6aadec8:	008001c4 	movi	r2,7
 6aadecc:	a9800115 	stw	r6,4(r21)
 6aaded0:	dc800e15 	stw	r18,56(sp)
 6aaded4:	dc400d15 	stw	r17,52(sp)
 6aaded8:	1442f616 	blt	r2,r17,6aaeab4 <___vfprintf_internal_r+0x18a8>
 6aadedc:	a8c00204 	addi	r3,r21,8
 6aadee0:	d9414717 	ldw	r5,1308(sp)
 6aadee4:	2161c83a 	sub	r16,r4,r5
 6aadee8:	043f9d0e 	bge	zero,r16,6aadd60 <___vfprintf_internal_r+0xb54>
 6aadeec:	00800404 	movi	r2,16
 6aadef0:	1402130e 	bge	r2,r16,6aae740 <___vfprintf_internal_r+0x1534>
 6aadef4:	dc400d17 	ldw	r17,52(sp)
 6aadef8:	1027883a 	mov	r19,r2
 6aadefc:	0701ab34 	movhi	fp,1708
 6aadf00:	e7226484 	addi	fp,fp,-30318
 6aadf04:	050001c4 	movi	r20,7
 6aadf08:	00000306 	br	6aadf18 <___vfprintf_internal_r+0xd0c>
 6aadf0c:	18c00204 	addi	r3,r3,8
 6aadf10:	843ffc04 	addi	r16,r16,-16
 6aadf14:	9c020d0e 	bge	r19,r16,6aae74c <___vfprintf_internal_r+0x1540>
 6aadf18:	94800404 	addi	r18,r18,16
 6aadf1c:	8c400044 	addi	r17,r17,1
 6aadf20:	1f000015 	stw	fp,0(r3)
 6aadf24:	1cc00115 	stw	r19,4(r3)
 6aadf28:	dc800e15 	stw	r18,56(sp)
 6aadf2c:	dc400d15 	stw	r17,52(sp)
 6aadf30:	a47ff60e 	bge	r20,r17,6aadf0c <___vfprintf_internal_r+0xd00>
 6aadf34:	d9014f17 	ldw	r4,1340(sp)
 6aadf38:	b00b883a 	mov	r5,r22
 6aadf3c:	d9800c04 	addi	r6,sp,48
 6aadf40:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aadf44:	103e691e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aadf48:	dc800e17 	ldw	r18,56(sp)
 6aadf4c:	dc400d17 	ldw	r17,52(sp)
 6aadf50:	d8c01904 	addi	r3,sp,100
 6aadf54:	003fee06 	br	6aadf10 <___vfprintf_internal_r+0xd04>
 6aadf58:	d8814717 	ldw	r2,1308(sp)
 6aadf5c:	143fffc4 	addi	r16,r2,-1
 6aadf60:	043e970e 	bge	zero,r16,6aad9c0 <___vfprintf_internal_r+0x7b4>
 6aadf64:	00800404 	movi	r2,16
 6aadf68:	1400180e 	bge	r2,r16,6aadfcc <___vfprintf_internal_r+0xdc0>
 6aadf6c:	1029883a 	mov	r20,r2
 6aadf70:	0701ab34 	movhi	fp,1708
 6aadf74:	e7226484 	addi	fp,fp,-30318
 6aadf78:	054001c4 	movi	r21,7
 6aadf7c:	00000306 	br	6aadf8c <___vfprintf_internal_r+0xd80>
 6aadf80:	9cc00204 	addi	r19,r19,8
 6aadf84:	843ffc04 	addi	r16,r16,-16
 6aadf88:	a400120e 	bge	r20,r16,6aadfd4 <___vfprintf_internal_r+0xdc8>
 6aadf8c:	94800404 	addi	r18,r18,16
 6aadf90:	8c400044 	addi	r17,r17,1
 6aadf94:	9f000015 	stw	fp,0(r19)
 6aadf98:	9d000115 	stw	r20,4(r19)
 6aadf9c:	dc800e15 	stw	r18,56(sp)
 6aadfa0:	dc400d15 	stw	r17,52(sp)
 6aadfa4:	ac7ff60e 	bge	r21,r17,6aadf80 <___vfprintf_internal_r+0xd74>
 6aadfa8:	d9014f17 	ldw	r4,1340(sp)
 6aadfac:	b00b883a 	mov	r5,r22
 6aadfb0:	d9800c04 	addi	r6,sp,48
 6aadfb4:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aadfb8:	103e4c1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aadfbc:	dc800e17 	ldw	r18,56(sp)
 6aadfc0:	dc400d17 	ldw	r17,52(sp)
 6aadfc4:	dcc01904 	addi	r19,sp,100
 6aadfc8:	003fee06 	br	6aadf84 <___vfprintf_internal_r+0xd78>
 6aadfcc:	0701ab34 	movhi	fp,1708
 6aadfd0:	e7226484 	addi	fp,fp,-30318
 6aadfd4:	9425883a 	add	r18,r18,r16
 6aadfd8:	8c400044 	addi	r17,r17,1
 6aadfdc:	008001c4 	movi	r2,7
 6aadfe0:	9f000015 	stw	fp,0(r19)
 6aadfe4:	9c000115 	stw	r16,4(r19)
 6aadfe8:	dc800e15 	stw	r18,56(sp)
 6aadfec:	dc400d15 	stw	r17,52(sp)
 6aadff0:	147e720e 	bge	r2,r17,6aad9bc <___vfprintf_internal_r+0x7b0>
 6aadff4:	d9014f17 	ldw	r4,1340(sp)
 6aadff8:	b00b883a 	mov	r5,r22
 6aadffc:	d9800c04 	addi	r6,sp,48
 6aae000:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aae004:	103e391e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aae008:	dc800e17 	ldw	r18,56(sp)
 6aae00c:	dc400d17 	ldw	r17,52(sp)
 6aae010:	dcc01904 	addi	r19,sp,100
 6aae014:	003e6a06 	br	6aad9c0 <___vfprintf_internal_r+0x7b4>
 6aae018:	d9014f17 	ldw	r4,1340(sp)
 6aae01c:	b00b883a 	mov	r5,r22
 6aae020:	d9800c04 	addi	r6,sp,48
 6aae024:	d9c15115 	stw	r7,1348(sp)
 6aae028:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aae02c:	d9c15117 	ldw	r7,1348(sp)
 6aae030:	103e2e1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aae034:	dc800e17 	ldw	r18,56(sp)
 6aae038:	dc400d17 	ldw	r17,52(sp)
 6aae03c:	dd401904 	addi	r21,sp,100
 6aae040:	003dba06 	br	6aad72c <___vfprintf_internal_r+0x520>
 6aae044:	d9014f17 	ldw	r4,1340(sp)
 6aae048:	b00b883a 	mov	r5,r22
 6aae04c:	d9800c04 	addi	r6,sp,48
 6aae050:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aae054:	103e251e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aae058:	dc800e17 	ldw	r18,56(sp)
 6aae05c:	dc400d17 	ldw	r17,52(sp)
 6aae060:	dcc01904 	addi	r19,sp,100
 6aae064:	003e4206 	br	6aad970 <___vfprintf_internal_r+0x764>
 6aae068:	d9014f17 	ldw	r4,1340(sp)
 6aae06c:	b00b883a 	mov	r5,r22
 6aae070:	d9800c04 	addi	r6,sp,48
 6aae074:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aae078:	103e1c1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aae07c:	dc800e17 	ldw	r18,56(sp)
 6aae080:	dc400d17 	ldw	r17,52(sp)
 6aae084:	d8c01904 	addi	r3,sp,100
 6aae088:	003e2e06 	br	6aad944 <___vfprintf_internal_r+0x738>
 6aae08c:	d9414c17 	ldw	r5,1328(sp)
 6aae090:	2880004c 	andi	r2,r5,1
 6aae094:	1005003a 	cmpeq	r2,r2,zero
 6aae098:	103dda1e 	bne	r2,zero,6aad804 <___vfprintf_internal_r+0x5f8>
 6aae09c:	003e9f06 	br	6aadb1c <___vfprintf_internal_r+0x910>
 6aae0a0:	d8c14117 	ldw	r3,1284(sp)
 6aae0a4:	9125883a 	add	r18,r18,r4
 6aae0a8:	8c400044 	addi	r17,r17,1
 6aae0ac:	008001c4 	movi	r2,7
 6aae0b0:	a8c00015 	stw	r3,0(r21)
 6aae0b4:	a9000115 	stw	r4,4(r21)
 6aae0b8:	dc800e15 	stw	r18,56(sp)
 6aae0bc:	dc400d15 	stw	r17,52(sp)
 6aae0c0:	14426616 	blt	r2,r17,6aaea5c <___vfprintf_internal_r+0x1850>
 6aae0c4:	a8c00204 	addi	r3,r21,8
 6aae0c8:	d9414917 	ldw	r5,1316(sp)
 6aae0cc:	00800044 	movi	r2,1
 6aae0d0:	94800044 	addi	r18,r18,1
 6aae0d4:	8c400044 	addi	r17,r17,1
 6aae0d8:	18800115 	stw	r2,4(r3)
 6aae0dc:	008001c4 	movi	r2,7
 6aae0e0:	19400015 	stw	r5,0(r3)
 6aae0e4:	dc800e15 	stw	r18,56(sp)
 6aae0e8:	dc400d15 	stw	r17,52(sp)
 6aae0ec:	2021883a 	mov	r16,r4
 6aae0f0:	14425016 	blt	r2,r17,6aaea34 <___vfprintf_internal_r+0x1828>
 6aae0f4:	19400204 	addi	r5,r3,8
 6aae0f8:	d9814717 	ldw	r6,1308(sp)
 6aae0fc:	8c400044 	addi	r17,r17,1
 6aae100:	dc400d15 	stw	r17,52(sp)
 6aae104:	3107c83a 	sub	r3,r6,r4
 6aae108:	d9014117 	ldw	r4,1284(sp)
 6aae10c:	90e5883a 	add	r18,r18,r3
 6aae110:	28c00115 	stw	r3,4(r5)
 6aae114:	8105883a 	add	r2,r16,r4
 6aae118:	28800015 	stw	r2,0(r5)
 6aae11c:	008001c4 	movi	r2,7
 6aae120:	dc800e15 	stw	r18,56(sp)
 6aae124:	147f1d16 	blt	r2,r17,6aadd9c <___vfprintf_internal_r+0xb90>
 6aae128:	28c00204 	addi	r3,r5,8
 6aae12c:	003db506 	br	6aad804 <___vfprintf_internal_r+0x5f8>
 6aae130:	3c000017 	ldw	r16,0(r7)
 6aae134:	3c400117 	ldw	r17,4(r7)
 6aae138:	39800204 	addi	r6,r7,8
 6aae13c:	01000044 	movi	r4,1
 6aae140:	d9814015 	stw	r6,1280(sp)
 6aae144:	d8000405 	stb	zero,16(sp)
 6aae148:	003ebe06 	br	6aadc44 <___vfprintf_internal_r+0xa38>
 6aae14c:	3c000017 	ldw	r16,0(r7)
 6aae150:	3c400117 	ldw	r17,4(r7)
 6aae154:	38800204 	addi	r2,r7,8
 6aae158:	d8814015 	stw	r2,1280(sp)
 6aae15c:	003eb706 	br	6aadc3c <___vfprintf_internal_r+0xa30>
 6aae160:	3c000017 	ldw	r16,0(r7)
 6aae164:	3c400117 	ldw	r17,4(r7)
 6aae168:	39000204 	addi	r4,r7,8
 6aae16c:	d9014015 	stw	r4,1280(sp)
 6aae170:	0009883a 	mov	r4,zero
 6aae174:	d8000405 	stb	zero,16(sp)
 6aae178:	003eb206 	br	6aadc44 <___vfprintf_internal_r+0xa38>
 6aae17c:	38c00017 	ldw	r3,0(r7)
 6aae180:	39c00104 	addi	r7,r7,4
 6aae184:	d8c14a15 	stw	r3,1320(sp)
 6aae188:	1800d10e 	bge	r3,zero,6aae4d0 <___vfprintf_internal_r+0x12c4>
 6aae18c:	00c7c83a 	sub	r3,zero,r3
 6aae190:	d8c14a15 	stw	r3,1320(sp)
 6aae194:	d9014c17 	ldw	r4,1328(sp)
 6aae198:	b8c00007 	ldb	r3,0(r23)
 6aae19c:	21000114 	ori	r4,r4,4
 6aae1a0:	d9014c15 	stw	r4,1328(sp)
 6aae1a4:	003c9806 	br	6aad408 <___vfprintf_internal_r+0x1fc>
 6aae1a8:	d9814c17 	ldw	r6,1328(sp)
 6aae1ac:	3080080c 	andi	r2,r6,32
 6aae1b0:	1001f026 	beq	r2,zero,6aae974 <___vfprintf_internal_r+0x1768>
 6aae1b4:	d9014b17 	ldw	r4,1324(sp)
 6aae1b8:	38800017 	ldw	r2,0(r7)
 6aae1bc:	39c00104 	addi	r7,r7,4
 6aae1c0:	d9c14015 	stw	r7,1280(sp)
 6aae1c4:	2007d7fa 	srai	r3,r4,31
 6aae1c8:	d9c14017 	ldw	r7,1280(sp)
 6aae1cc:	11000015 	stw	r4,0(r2)
 6aae1d0:	10c00115 	stw	r3,4(r2)
 6aae1d4:	003c6906 	br	6aad37c <___vfprintf_internal_r+0x170>
 6aae1d8:	b8c00007 	ldb	r3,0(r23)
 6aae1dc:	00801b04 	movi	r2,108
 6aae1e0:	18824f26 	beq	r3,r2,6aaeb20 <___vfprintf_internal_r+0x1914>
 6aae1e4:	d9414c17 	ldw	r5,1328(sp)
 6aae1e8:	29400414 	ori	r5,r5,16
 6aae1ec:	d9414c15 	stw	r5,1328(sp)
 6aae1f0:	003c8506 	br	6aad408 <___vfprintf_internal_r+0x1fc>
 6aae1f4:	d9814c17 	ldw	r6,1328(sp)
 6aae1f8:	b8c00007 	ldb	r3,0(r23)
 6aae1fc:	31800814 	ori	r6,r6,32
 6aae200:	d9814c15 	stw	r6,1328(sp)
 6aae204:	003c8006 	br	6aad408 <___vfprintf_internal_r+0x1fc>
 6aae208:	d8814c17 	ldw	r2,1328(sp)
 6aae20c:	3c000017 	ldw	r16,0(r7)
 6aae210:	00c01e04 	movi	r3,120
 6aae214:	10800094 	ori	r2,r2,2
 6aae218:	d8814c15 	stw	r2,1328(sp)
 6aae21c:	39c00104 	addi	r7,r7,4
 6aae220:	0141ab34 	movhi	r5,1708
 6aae224:	29624d04 	addi	r5,r5,-30412
 6aae228:	00800c04 	movi	r2,48
 6aae22c:	0023883a 	mov	r17,zero
 6aae230:	01000084 	movi	r4,2
 6aae234:	d9c14015 	stw	r7,1280(sp)
 6aae238:	d8c14d15 	stw	r3,1332(sp)
 6aae23c:	d9414415 	stw	r5,1296(sp)
 6aae240:	d8800445 	stb	r2,17(sp)
 6aae244:	d8c00485 	stb	r3,18(sp)
 6aae248:	d8000405 	stb	zero,16(sp)
 6aae24c:	003e7d06 	br	6aadc44 <___vfprintf_internal_r+0xa38>
 6aae250:	d8814c17 	ldw	r2,1328(sp)
 6aae254:	b8c00007 	ldb	r3,0(r23)
 6aae258:	10801014 	ori	r2,r2,64
 6aae25c:	d8814c15 	stw	r2,1328(sp)
 6aae260:	003c6906 	br	6aad408 <___vfprintf_internal_r+0x1fc>
 6aae264:	d9414c17 	ldw	r5,1328(sp)
 6aae268:	2880020c 	andi	r2,r5,8
 6aae26c:	1001df26 	beq	r2,zero,6aae9ec <___vfprintf_internal_r+0x17e0>
 6aae270:	39800017 	ldw	r6,0(r7)
 6aae274:	38800204 	addi	r2,r7,8
 6aae278:	d8814015 	stw	r2,1280(sp)
 6aae27c:	d9814215 	stw	r6,1288(sp)
 6aae280:	39c00117 	ldw	r7,4(r7)
 6aae284:	d9c14315 	stw	r7,1292(sp)
 6aae288:	d9014217 	ldw	r4,1288(sp)
 6aae28c:	d9414317 	ldw	r5,1292(sp)
 6aae290:	6ab2d780 	call	6ab2d78 <__isinfd>
 6aae294:	10021726 	beq	r2,zero,6aaeaf4 <___vfprintf_internal_r+0x18e8>
 6aae298:	d9014217 	ldw	r4,1288(sp)
 6aae29c:	d9414317 	ldw	r5,1292(sp)
 6aae2a0:	000d883a 	mov	r6,zero
 6aae2a4:	000f883a 	mov	r7,zero
 6aae2a8:	6ab48980 	call	6ab4898 <__ltdf2>
 6aae2ac:	1002ca16 	blt	r2,zero,6aaedd8 <___vfprintf_internal_r+0x1bcc>
 6aae2b0:	d9414d17 	ldw	r5,1332(sp)
 6aae2b4:	008011c4 	movi	r2,71
 6aae2b8:	11420a16 	blt	r2,r5,6aaeae4 <___vfprintf_internal_r+0x18d8>
 6aae2bc:	0181ab34 	movhi	r6,1708
 6aae2c0:	31a25204 	addi	r6,r6,-30392
 6aae2c4:	d9814115 	stw	r6,1284(sp)
 6aae2c8:	d9014c17 	ldw	r4,1328(sp)
 6aae2cc:	00c000c4 	movi	r3,3
 6aae2d0:	00bfdfc4 	movi	r2,-129
 6aae2d4:	2088703a 	and	r4,r4,r2
 6aae2d8:	180f883a 	mov	r7,r3
 6aae2dc:	d8c14515 	stw	r3,1300(sp)
 6aae2e0:	d9014c15 	stw	r4,1328(sp)
 6aae2e4:	d8014615 	stw	zero,1304(sp)
 6aae2e8:	003e6a06 	br	6aadc94 <___vfprintf_internal_r+0xa88>
 6aae2ec:	38800017 	ldw	r2,0(r7)
 6aae2f0:	00c00044 	movi	r3,1
 6aae2f4:	39c00104 	addi	r7,r7,4
 6aae2f8:	d9c14015 	stw	r7,1280(sp)
 6aae2fc:	d9000f04 	addi	r4,sp,60
 6aae300:	180f883a 	mov	r7,r3
 6aae304:	d8c14515 	stw	r3,1300(sp)
 6aae308:	d9014115 	stw	r4,1284(sp)
 6aae30c:	d8800f05 	stb	r2,60(sp)
 6aae310:	d8000405 	stb	zero,16(sp)
 6aae314:	003cac06 	br	6aad5c8 <___vfprintf_internal_r+0x3bc>
 6aae318:	0141ab34 	movhi	r5,1708
 6aae31c:	29625804 	addi	r5,r5,-30368
 6aae320:	d9414415 	stw	r5,1296(sp)
 6aae324:	d9814c17 	ldw	r6,1328(sp)
 6aae328:	3080080c 	andi	r2,r6,32
 6aae32c:	1000f926 	beq	r2,zero,6aae714 <___vfprintf_internal_r+0x1508>
 6aae330:	3c000017 	ldw	r16,0(r7)
 6aae334:	3c400117 	ldw	r17,4(r7)
 6aae338:	38800204 	addi	r2,r7,8
 6aae33c:	d8814015 	stw	r2,1280(sp)
 6aae340:	d9414c17 	ldw	r5,1328(sp)
 6aae344:	2880004c 	andi	r2,r5,1
 6aae348:	1005003a 	cmpeq	r2,r2,zero
 6aae34c:	1000b31e 	bne	r2,zero,6aae61c <___vfprintf_internal_r+0x1410>
 6aae350:	8444b03a 	or	r2,r16,r17
 6aae354:	1000b126 	beq	r2,zero,6aae61c <___vfprintf_internal_r+0x1410>
 6aae358:	d9814d17 	ldw	r6,1332(sp)
 6aae35c:	29400094 	ori	r5,r5,2
 6aae360:	00800c04 	movi	r2,48
 6aae364:	01000084 	movi	r4,2
 6aae368:	d9414c15 	stw	r5,1328(sp)
 6aae36c:	d8800445 	stb	r2,17(sp)
 6aae370:	d9800485 	stb	r6,18(sp)
 6aae374:	d8000405 	stb	zero,16(sp)
 6aae378:	003e3206 	br	6aadc44 <___vfprintf_internal_r+0xa38>
 6aae37c:	0181ab34 	movhi	r6,1708
 6aae380:	31a24d04 	addi	r6,r6,-30412
 6aae384:	d9814415 	stw	r6,1296(sp)
 6aae388:	003fe606 	br	6aae324 <___vfprintf_internal_r+0x1118>
 6aae38c:	00800ac4 	movi	r2,43
 6aae390:	d8800405 	stb	r2,16(sp)
 6aae394:	b8c00007 	ldb	r3,0(r23)
 6aae398:	003c1b06 	br	6aad408 <___vfprintf_internal_r+0x1fc>
 6aae39c:	d8814c17 	ldw	r2,1328(sp)
 6aae3a0:	b8c00007 	ldb	r3,0(r23)
 6aae3a4:	10800054 	ori	r2,r2,1
 6aae3a8:	d8814c15 	stw	r2,1328(sp)
 6aae3ac:	003c1606 	br	6aad408 <___vfprintf_internal_r+0x1fc>
 6aae3b0:	d8800407 	ldb	r2,16(sp)
 6aae3b4:	1000461e 	bne	r2,zero,6aae4d0 <___vfprintf_internal_r+0x12c4>
 6aae3b8:	00800804 	movi	r2,32
 6aae3bc:	d8800405 	stb	r2,16(sp)
 6aae3c0:	b8c00007 	ldb	r3,0(r23)
 6aae3c4:	003c1006 	br	6aad408 <___vfprintf_internal_r+0x1fc>
 6aae3c8:	d9814c17 	ldw	r6,1328(sp)
 6aae3cc:	b8c00007 	ldb	r3,0(r23)
 6aae3d0:	31800214 	ori	r6,r6,8
 6aae3d4:	d9814c15 	stw	r6,1328(sp)
 6aae3d8:	003c0b06 	br	6aad408 <___vfprintf_internal_r+0x1fc>
 6aae3dc:	0007883a 	mov	r3,zero
 6aae3e0:	01000244 	movi	r4,9
 6aae3e4:	188002a4 	muli	r2,r3,10
 6aae3e8:	b8c00007 	ldb	r3,0(r23)
 6aae3ec:	d9814d17 	ldw	r6,1332(sp)
 6aae3f0:	bdc00044 	addi	r23,r23,1
 6aae3f4:	d8c14d15 	stw	r3,1332(sp)
 6aae3f8:	d9414d17 	ldw	r5,1332(sp)
 6aae3fc:	3085883a 	add	r2,r6,r2
 6aae400:	10fff404 	addi	r3,r2,-48
 6aae404:	28bff404 	addi	r2,r5,-48
 6aae408:	20bff62e 	bgeu	r4,r2,6aae3e4 <___vfprintf_internal_r+0x11d8>
 6aae40c:	d8c14a15 	stw	r3,1320(sp)
 6aae410:	003bff06 	br	6aad410 <___vfprintf_internal_r+0x204>
 6aae414:	d9414c17 	ldw	r5,1328(sp)
 6aae418:	b8c00007 	ldb	r3,0(r23)
 6aae41c:	29402014 	ori	r5,r5,128
 6aae420:	d9414c15 	stw	r5,1328(sp)
 6aae424:	003bf806 	br	6aad408 <___vfprintf_internal_r+0x1fc>
 6aae428:	b8c00007 	ldb	r3,0(r23)
 6aae42c:	00800a84 	movi	r2,42
 6aae430:	bdc00044 	addi	r23,r23,1
 6aae434:	18831526 	beq	r3,r2,6aaf08c <___vfprintf_internal_r+0x1e80>
 6aae438:	d8c14d15 	stw	r3,1332(sp)
 6aae43c:	18bff404 	addi	r2,r3,-48
 6aae440:	00c00244 	movi	r3,9
 6aae444:	18827836 	bltu	r3,r2,6aaee28 <___vfprintf_internal_r+0x1c1c>
 6aae448:	000d883a 	mov	r6,zero
 6aae44c:	308002a4 	muli	r2,r6,10
 6aae450:	b9800007 	ldb	r6,0(r23)
 6aae454:	d9414d17 	ldw	r5,1332(sp)
 6aae458:	bdc00044 	addi	r23,r23,1
 6aae45c:	d9814d15 	stw	r6,1332(sp)
 6aae460:	d9014d17 	ldw	r4,1332(sp)
 6aae464:	1145883a 	add	r2,r2,r5
 6aae468:	11bff404 	addi	r6,r2,-48
 6aae46c:	20bff404 	addi	r2,r4,-48
 6aae470:	18bff62e 	bgeu	r3,r2,6aae44c <___vfprintf_internal_r+0x1240>
 6aae474:	3027883a 	mov	r19,r6
 6aae478:	303be50e 	bge	r6,zero,6aad410 <___vfprintf_internal_r+0x204>
 6aae47c:	04ffffc4 	movi	r19,-1
 6aae480:	003be306 	br	6aad410 <___vfprintf_internal_r+0x204>
 6aae484:	d8000405 	stb	zero,16(sp)
 6aae488:	39800017 	ldw	r6,0(r7)
 6aae48c:	39c00104 	addi	r7,r7,4
 6aae490:	d9c14015 	stw	r7,1280(sp)
 6aae494:	d9814115 	stw	r6,1284(sp)
 6aae498:	3001c926 	beq	r6,zero,6aaebc0 <___vfprintf_internal_r+0x19b4>
 6aae49c:	98000e16 	blt	r19,zero,6aae4d8 <___vfprintf_internal_r+0x12cc>
 6aae4a0:	d9014117 	ldw	r4,1284(sp)
 6aae4a4:	000b883a 	mov	r5,zero
 6aae4a8:	980d883a 	mov	r6,r19
 6aae4ac:	6ab14b40 	call	6ab14b4 <memchr>
 6aae4b0:	10025926 	beq	r2,zero,6aaee18 <___vfprintf_internal_r+0x1c0c>
 6aae4b4:	d8c14117 	ldw	r3,1284(sp)
 6aae4b8:	10cfc83a 	sub	r7,r2,r3
 6aae4bc:	99c19e16 	blt	r19,r7,6aaeb38 <___vfprintf_internal_r+0x192c>
 6aae4c0:	d9c14515 	stw	r7,1300(sp)
 6aae4c4:	38000916 	blt	r7,zero,6aae4ec <___vfprintf_internal_r+0x12e0>
 6aae4c8:	d8014615 	stw	zero,1304(sp)
 6aae4cc:	003df106 	br	6aadc94 <___vfprintf_internal_r+0xa88>
 6aae4d0:	b8c00007 	ldb	r3,0(r23)
 6aae4d4:	003bcc06 	br	6aad408 <___vfprintf_internal_r+0x1fc>
 6aae4d8:	d9014117 	ldw	r4,1284(sp)
 6aae4dc:	6ab2ea40 	call	6ab2ea4 <strlen>
 6aae4e0:	d8814515 	stw	r2,1300(sp)
 6aae4e4:	100f883a 	mov	r7,r2
 6aae4e8:	103ff70e 	bge	r2,zero,6aae4c8 <___vfprintf_internal_r+0x12bc>
 6aae4ec:	d8014515 	stw	zero,1300(sp)
 6aae4f0:	d8014615 	stw	zero,1304(sp)
 6aae4f4:	003de706 	br	6aadc94 <___vfprintf_internal_r+0xa88>
 6aae4f8:	20c03fcc 	andi	r3,r4,255
 6aae4fc:	00800044 	movi	r2,1
 6aae500:	18802d26 	beq	r3,r2,6aae5b8 <___vfprintf_internal_r+0x13ac>
 6aae504:	18800e36 	bltu	r3,r2,6aae540 <___vfprintf_internal_r+0x1334>
 6aae508:	00800084 	movi	r2,2
 6aae50c:	1880fa26 	beq	r3,r2,6aae8f8 <___vfprintf_internal_r+0x16ec>
 6aae510:	0101ab34 	movhi	r4,1708
 6aae514:	21225d04 	addi	r4,r4,-30348
 6aae518:	6ab2ea40 	call	6ab2ea4 <strlen>
 6aae51c:	100f883a 	mov	r7,r2
 6aae520:	dcc14515 	stw	r19,1300(sp)
 6aae524:	9880010e 	bge	r19,r2,6aae52c <___vfprintf_internal_r+0x1320>
 6aae528:	d8814515 	stw	r2,1300(sp)
 6aae52c:	0081ab34 	movhi	r2,1708
 6aae530:	10a25d04 	addi	r2,r2,-30348
 6aae534:	dcc14615 	stw	r19,1304(sp)
 6aae538:	d8814115 	stw	r2,1284(sp)
 6aae53c:	003dd506 	br	6aadc94 <___vfprintf_internal_r+0xa88>
 6aae540:	d9401904 	addi	r5,sp,100
 6aae544:	dd000f04 	addi	r20,sp,60
 6aae548:	d9414115 	stw	r5,1284(sp)
 6aae54c:	880a977a 	slli	r5,r17,29
 6aae550:	d9814117 	ldw	r6,1284(sp)
 6aae554:	8004d0fa 	srli	r2,r16,3
 6aae558:	8806d0fa 	srli	r3,r17,3
 6aae55c:	810001cc 	andi	r4,r16,7
 6aae560:	2884b03a 	or	r2,r5,r2
 6aae564:	31bfffc4 	addi	r6,r6,-1
 6aae568:	21000c04 	addi	r4,r4,48
 6aae56c:	d9814115 	stw	r6,1284(sp)
 6aae570:	10cab03a 	or	r5,r2,r3
 6aae574:	31000005 	stb	r4,0(r6)
 6aae578:	1021883a 	mov	r16,r2
 6aae57c:	1823883a 	mov	r17,r3
 6aae580:	283ff21e 	bne	r5,zero,6aae54c <___vfprintf_internal_r+0x1340>
 6aae584:	d8c14c17 	ldw	r3,1328(sp)
 6aae588:	1880004c 	andi	r2,r3,1
 6aae58c:	1005003a 	cmpeq	r2,r2,zero
 6aae590:	103db91e 	bne	r2,zero,6aadc78 <___vfprintf_internal_r+0xa6c>
 6aae594:	20803fcc 	andi	r2,r4,255
 6aae598:	1080201c 	xori	r2,r2,128
 6aae59c:	10bfe004 	addi	r2,r2,-128
 6aae5a0:	00c00c04 	movi	r3,48
 6aae5a4:	10fdb426 	beq	r2,r3,6aadc78 <___vfprintf_internal_r+0xa6c>
 6aae5a8:	31bfffc4 	addi	r6,r6,-1
 6aae5ac:	d9814115 	stw	r6,1284(sp)
 6aae5b0:	30c00005 	stb	r3,0(r6)
 6aae5b4:	003db006 	br	6aadc78 <___vfprintf_internal_r+0xa6c>
 6aae5b8:	88800068 	cmpgeui	r2,r17,1
 6aae5bc:	10002c1e 	bne	r2,zero,6aae670 <___vfprintf_internal_r+0x1464>
 6aae5c0:	8800021e 	bne	r17,zero,6aae5cc <___vfprintf_internal_r+0x13c0>
 6aae5c4:	00800244 	movi	r2,9
 6aae5c8:	14002936 	bltu	r2,r16,6aae670 <___vfprintf_internal_r+0x1464>
 6aae5cc:	d90018c4 	addi	r4,sp,99
 6aae5d0:	dd000f04 	addi	r20,sp,60
 6aae5d4:	d9014115 	stw	r4,1284(sp)
 6aae5d8:	d9014117 	ldw	r4,1284(sp)
 6aae5dc:	80800c04 	addi	r2,r16,48
 6aae5e0:	20800005 	stb	r2,0(r4)
 6aae5e4:	003da406 	br	6aadc78 <___vfprintf_internal_r+0xa6c>
 6aae5e8:	dc400d17 	ldw	r17,52(sp)
 6aae5ec:	0701ab34 	movhi	fp,1708
 6aae5f0:	e7226484 	addi	fp,fp,-30318
 6aae5f4:	9425883a 	add	r18,r18,r16
 6aae5f8:	8c400044 	addi	r17,r17,1
 6aae5fc:	008001c4 	movi	r2,7
 6aae600:	1f000015 	stw	fp,0(r3)
 6aae604:	1c000115 	stw	r16,4(r3)
 6aae608:	dc800e15 	stw	r18,56(sp)
 6aae60c:	dc400d15 	stw	r17,52(sp)
 6aae610:	147de216 	blt	r2,r17,6aadd9c <___vfprintf_internal_r+0xb90>
 6aae614:	18c00204 	addi	r3,r3,8
 6aae618:	003c7a06 	br	6aad804 <___vfprintf_internal_r+0x5f8>
 6aae61c:	01000084 	movi	r4,2
 6aae620:	d8000405 	stb	zero,16(sp)
 6aae624:	003d8706 	br	6aadc44 <___vfprintf_internal_r+0xa38>
 6aae628:	d9814c17 	ldw	r6,1328(sp)
 6aae62c:	30c4703a 	and	r2,r6,r3
 6aae630:	1005003a 	cmpeq	r2,r2,zero
 6aae634:	103cb926 	beq	r2,zero,6aad91c <___vfprintf_internal_r+0x710>
 6aae638:	d9014117 	ldw	r4,1284(sp)
 6aae63c:	94800044 	addi	r18,r18,1
 6aae640:	8c400044 	addi	r17,r17,1
 6aae644:	008001c4 	movi	r2,7
 6aae648:	a9000015 	stw	r4,0(r21)
 6aae64c:	a8c00115 	stw	r3,4(r21)
 6aae650:	dc800e15 	stw	r18,56(sp)
 6aae654:	dc400d15 	stw	r17,52(sp)
 6aae658:	147e6616 	blt	r2,r17,6aadff4 <___vfprintf_internal_r+0xde8>
 6aae65c:	acc00204 	addi	r19,r21,8
 6aae660:	003cd706 	br	6aad9c0 <___vfprintf_internal_r+0x7b4>
 6aae664:	0701ab34 	movhi	fp,1708
 6aae668:	e7226484 	addi	fp,fp,-30318
 6aae66c:	003c4f06 	br	6aad7ac <___vfprintf_internal_r+0x5a0>
 6aae670:	dd000f04 	addi	r20,sp,60
 6aae674:	dc801904 	addi	r18,sp,100
 6aae678:	8009883a 	mov	r4,r16
 6aae67c:	880b883a 	mov	r5,r17
 6aae680:	01800284 	movi	r6,10
 6aae684:	000f883a 	mov	r7,zero
 6aae688:	6ab35a80 	call	6ab35a8 <__umoddi3>
 6aae68c:	12000c04 	addi	r8,r2,48
 6aae690:	94bfffc4 	addi	r18,r18,-1
 6aae694:	8009883a 	mov	r4,r16
 6aae698:	880b883a 	mov	r5,r17
 6aae69c:	01800284 	movi	r6,10
 6aae6a0:	000f883a 	mov	r7,zero
 6aae6a4:	92000005 	stb	r8,0(r18)
 6aae6a8:	6ab2fcc0 	call	6ab2fcc <__udivdi3>
 6aae6ac:	1009883a 	mov	r4,r2
 6aae6b0:	1021883a 	mov	r16,r2
 6aae6b4:	18800068 	cmpgeui	r2,r3,1
 6aae6b8:	1823883a 	mov	r17,r3
 6aae6bc:	103fee1e 	bne	r2,zero,6aae678 <___vfprintf_internal_r+0x146c>
 6aae6c0:	1800021e 	bne	r3,zero,6aae6cc <___vfprintf_internal_r+0x14c0>
 6aae6c4:	00800244 	movi	r2,9
 6aae6c8:	113feb36 	bltu	r2,r4,6aae678 <___vfprintf_internal_r+0x146c>
 6aae6cc:	94bfffc4 	addi	r18,r18,-1
 6aae6d0:	dc814115 	stw	r18,1284(sp)
 6aae6d4:	003fc006 	br	6aae5d8 <___vfprintf_internal_r+0x13cc>
 6aae6d8:	d9014c17 	ldw	r4,1328(sp)
 6aae6dc:	2080004c 	andi	r2,r4,1
 6aae6e0:	10009a1e 	bne	r2,zero,6aae94c <___vfprintf_internal_r+0x1740>
 6aae6e4:	d9401904 	addi	r5,sp,100
 6aae6e8:	dd000f04 	addi	r20,sp,60
 6aae6ec:	d9414115 	stw	r5,1284(sp)
 6aae6f0:	003d6106 	br	6aadc78 <___vfprintf_internal_r+0xa6c>
 6aae6f4:	d9014f17 	ldw	r4,1340(sp)
 6aae6f8:	b00b883a 	mov	r5,r22
 6aae6fc:	d9800c04 	addi	r6,sp,48
 6aae700:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aae704:	103c791e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aae708:	dc800e17 	ldw	r18,56(sp)
 6aae70c:	d8c01904 	addi	r3,sp,100
 6aae710:	003cff06 	br	6aadb10 <___vfprintf_internal_r+0x904>
 6aae714:	d8c14c17 	ldw	r3,1328(sp)
 6aae718:	1880040c 	andi	r2,r3,16
 6aae71c:	1000711e 	bne	r2,zero,6aae8e4 <___vfprintf_internal_r+0x16d8>
 6aae720:	d9014c17 	ldw	r4,1328(sp)
 6aae724:	2080100c 	andi	r2,r4,64
 6aae728:	10006e26 	beq	r2,zero,6aae8e4 <___vfprintf_internal_r+0x16d8>
 6aae72c:	3c00000b 	ldhu	r16,0(r7)
 6aae730:	0023883a 	mov	r17,zero
 6aae734:	39c00104 	addi	r7,r7,4
 6aae738:	d9c14015 	stw	r7,1280(sp)
 6aae73c:	003f0006 	br	6aae340 <___vfprintf_internal_r+0x1134>
 6aae740:	dc400d17 	ldw	r17,52(sp)
 6aae744:	0701ab34 	movhi	fp,1708
 6aae748:	e7226484 	addi	fp,fp,-30318
 6aae74c:	9425883a 	add	r18,r18,r16
 6aae750:	8c400044 	addi	r17,r17,1
 6aae754:	008001c4 	movi	r2,7
 6aae758:	1f000015 	stw	fp,0(r3)
 6aae75c:	1c000115 	stw	r16,4(r3)
 6aae760:	dc800e15 	stw	r18,56(sp)
 6aae764:	dc400d15 	stw	r17,52(sp)
 6aae768:	147d7616 	blt	r2,r17,6aadd44 <___vfprintf_internal_r+0xb38>
 6aae76c:	18c00204 	addi	r3,r3,8
 6aae770:	003d7b06 	br	6aadd60 <___vfprintf_internal_r+0xb54>
 6aae774:	dc800e17 	ldw	r18,56(sp)
 6aae778:	dc400d17 	ldw	r17,52(sp)
 6aae77c:	0701ab34 	movhi	fp,1708
 6aae780:	e7226884 	addi	fp,fp,-30302
 6aae784:	003bc006 	br	6aad688 <___vfprintf_internal_r+0x47c>
 6aae788:	d9014f17 	ldw	r4,1340(sp)
 6aae78c:	b00b883a 	mov	r5,r22
 6aae790:	d9800c04 	addi	r6,sp,48
 6aae794:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aae798:	103c541e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aae79c:	dc800e17 	ldw	r18,56(sp)
 6aae7a0:	d8c01904 	addi	r3,sp,100
 6aae7a4:	003ce906 	br	6aadb4c <___vfprintf_internal_r+0x940>
 6aae7a8:	3c000017 	ldw	r16,0(r7)
 6aae7ac:	0009883a 	mov	r4,zero
 6aae7b0:	39c00104 	addi	r7,r7,4
 6aae7b4:	0023883a 	mov	r17,zero
 6aae7b8:	d9c14015 	stw	r7,1280(sp)
 6aae7bc:	d8000405 	stb	zero,16(sp)
 6aae7c0:	003d2006 	br	6aadc44 <___vfprintf_internal_r+0xa38>
 6aae7c4:	38800017 	ldw	r2,0(r7)
 6aae7c8:	39c00104 	addi	r7,r7,4
 6aae7cc:	d9c14015 	stw	r7,1280(sp)
 6aae7d0:	1023d7fa 	srai	r17,r2,31
 6aae7d4:	1021883a 	mov	r16,r2
 6aae7d8:	003d1806 	br	6aadc3c <___vfprintf_internal_r+0xa30>
 6aae7dc:	3c000017 	ldw	r16,0(r7)
 6aae7e0:	01000044 	movi	r4,1
 6aae7e4:	39c00104 	addi	r7,r7,4
 6aae7e8:	0023883a 	mov	r17,zero
 6aae7ec:	d9c14015 	stw	r7,1280(sp)
 6aae7f0:	d8000405 	stb	zero,16(sp)
 6aae7f4:	003d1306 	br	6aadc44 <___vfprintf_internal_r+0xa38>
 6aae7f8:	0081ab34 	movhi	r2,1708
 6aae7fc:	10a26404 	addi	r2,r2,-30320
 6aae800:	94800044 	addi	r18,r18,1
 6aae804:	8c400044 	addi	r17,r17,1
 6aae808:	a8800015 	stw	r2,0(r21)
 6aae80c:	00c00044 	movi	r3,1
 6aae810:	008001c4 	movi	r2,7
 6aae814:	a8c00115 	stw	r3,4(r21)
 6aae818:	dc800e15 	stw	r18,56(sp)
 6aae81c:	dc400d15 	stw	r17,52(sp)
 6aae820:	1440ca16 	blt	r2,r17,6aaeb4c <___vfprintf_internal_r+0x1940>
 6aae824:	a8c00204 	addi	r3,r21,8
 6aae828:	2000061e 	bne	r4,zero,6aae844 <___vfprintf_internal_r+0x1638>
 6aae82c:	d9414717 	ldw	r5,1308(sp)
 6aae830:	2800041e 	bne	r5,zero,6aae844 <___vfprintf_internal_r+0x1638>
 6aae834:	d9814c17 	ldw	r6,1328(sp)
 6aae838:	3080004c 	andi	r2,r6,1
 6aae83c:	1005003a 	cmpeq	r2,r2,zero
 6aae840:	103bf01e 	bne	r2,zero,6aad804 <___vfprintf_internal_r+0x5f8>
 6aae844:	00800044 	movi	r2,1
 6aae848:	dc400d17 	ldw	r17,52(sp)
 6aae84c:	18800115 	stw	r2,4(r3)
 6aae850:	d8814917 	ldw	r2,1316(sp)
 6aae854:	94800044 	addi	r18,r18,1
 6aae858:	8c400044 	addi	r17,r17,1
 6aae85c:	18800015 	stw	r2,0(r3)
 6aae860:	008001c4 	movi	r2,7
 6aae864:	dc800e15 	stw	r18,56(sp)
 6aae868:	dc400d15 	stw	r17,52(sp)
 6aae86c:	1440ca16 	blt	r2,r17,6aaeb98 <___vfprintf_internal_r+0x198c>
 6aae870:	18c00204 	addi	r3,r3,8
 6aae874:	0121c83a 	sub	r16,zero,r4
 6aae878:	0400500e 	bge	zero,r16,6aae9bc <___vfprintf_internal_r+0x17b0>
 6aae87c:	00800404 	movi	r2,16
 6aae880:	1400800e 	bge	r2,r16,6aaea84 <___vfprintf_internal_r+0x1878>
 6aae884:	1027883a 	mov	r19,r2
 6aae888:	0701ab34 	movhi	fp,1708
 6aae88c:	e7226484 	addi	fp,fp,-30318
 6aae890:	050001c4 	movi	r20,7
 6aae894:	00000306 	br	6aae8a4 <___vfprintf_internal_r+0x1698>
 6aae898:	18c00204 	addi	r3,r3,8
 6aae89c:	843ffc04 	addi	r16,r16,-16
 6aae8a0:	9c007a0e 	bge	r19,r16,6aaea8c <___vfprintf_internal_r+0x1880>
 6aae8a4:	94800404 	addi	r18,r18,16
 6aae8a8:	8c400044 	addi	r17,r17,1
 6aae8ac:	1f000015 	stw	fp,0(r3)
 6aae8b0:	1cc00115 	stw	r19,4(r3)
 6aae8b4:	dc800e15 	stw	r18,56(sp)
 6aae8b8:	dc400d15 	stw	r17,52(sp)
 6aae8bc:	a47ff60e 	bge	r20,r17,6aae898 <___vfprintf_internal_r+0x168c>
 6aae8c0:	d9014f17 	ldw	r4,1340(sp)
 6aae8c4:	b00b883a 	mov	r5,r22
 6aae8c8:	d9800c04 	addi	r6,sp,48
 6aae8cc:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aae8d0:	103c061e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aae8d4:	dc800e17 	ldw	r18,56(sp)
 6aae8d8:	dc400d17 	ldw	r17,52(sp)
 6aae8dc:	d8c01904 	addi	r3,sp,100
 6aae8e0:	003fee06 	br	6aae89c <___vfprintf_internal_r+0x1690>
 6aae8e4:	3c000017 	ldw	r16,0(r7)
 6aae8e8:	0023883a 	mov	r17,zero
 6aae8ec:	39c00104 	addi	r7,r7,4
 6aae8f0:	d9c14015 	stw	r7,1280(sp)
 6aae8f4:	003e9206 	br	6aae340 <___vfprintf_internal_r+0x1134>
 6aae8f8:	d9401904 	addi	r5,sp,100
 6aae8fc:	dd000f04 	addi	r20,sp,60
 6aae900:	d9414115 	stw	r5,1284(sp)
 6aae904:	d9814417 	ldw	r6,1296(sp)
 6aae908:	880a973a 	slli	r5,r17,28
 6aae90c:	8004d13a 	srli	r2,r16,4
 6aae910:	810003cc 	andi	r4,r16,15
 6aae914:	3109883a 	add	r4,r6,r4
 6aae918:	2884b03a 	or	r2,r5,r2
 6aae91c:	21400003 	ldbu	r5,0(r4)
 6aae920:	d9014117 	ldw	r4,1284(sp)
 6aae924:	8806d13a 	srli	r3,r17,4
 6aae928:	1021883a 	mov	r16,r2
 6aae92c:	213fffc4 	addi	r4,r4,-1
 6aae930:	d9014115 	stw	r4,1284(sp)
 6aae934:	d9814117 	ldw	r6,1284(sp)
 6aae938:	10c8b03a 	or	r4,r2,r3
 6aae93c:	1823883a 	mov	r17,r3
 6aae940:	31400005 	stb	r5,0(r6)
 6aae944:	203fef1e 	bne	r4,zero,6aae904 <___vfprintf_internal_r+0x16f8>
 6aae948:	003ccb06 	br	6aadc78 <___vfprintf_internal_r+0xa6c>
 6aae94c:	00800c04 	movi	r2,48
 6aae950:	d98018c4 	addi	r6,sp,99
 6aae954:	dd000f04 	addi	r20,sp,60
 6aae958:	d88018c5 	stb	r2,99(sp)
 6aae95c:	d9814115 	stw	r6,1284(sp)
 6aae960:	003cc506 	br	6aadc78 <___vfprintf_internal_r+0xa6c>
 6aae964:	dc400d17 	ldw	r17,52(sp)
 6aae968:	0701ab34 	movhi	fp,1708
 6aae96c:	e7226884 	addi	fp,fp,-30302
 6aae970:	003bc706 	br	6aad890 <___vfprintf_internal_r+0x684>
 6aae974:	d9414c17 	ldw	r5,1328(sp)
 6aae978:	2880040c 	andi	r2,r5,16
 6aae97c:	10007c26 	beq	r2,zero,6aaeb70 <___vfprintf_internal_r+0x1964>
 6aae980:	38800017 	ldw	r2,0(r7)
 6aae984:	39c00104 	addi	r7,r7,4
 6aae988:	d9c14015 	stw	r7,1280(sp)
 6aae98c:	d9814b17 	ldw	r6,1324(sp)
 6aae990:	d9c14017 	ldw	r7,1280(sp)
 6aae994:	11800015 	stw	r6,0(r2)
 6aae998:	003a7806 	br	6aad37c <___vfprintf_internal_r+0x170>
 6aae99c:	d9014f17 	ldw	r4,1340(sp)
 6aae9a0:	b00b883a 	mov	r5,r22
 6aae9a4:	d9800c04 	addi	r6,sp,48
 6aae9a8:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aae9ac:	103bcf1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aae9b0:	dc800e17 	ldw	r18,56(sp)
 6aae9b4:	dc400d17 	ldw	r17,52(sp)
 6aae9b8:	d8c01904 	addi	r3,sp,100
 6aae9bc:	d9014717 	ldw	r4,1308(sp)
 6aae9c0:	d9414117 	ldw	r5,1284(sp)
 6aae9c4:	8c400044 	addi	r17,r17,1
 6aae9c8:	9125883a 	add	r18,r18,r4
 6aae9cc:	008001c4 	movi	r2,7
 6aae9d0:	19400015 	stw	r5,0(r3)
 6aae9d4:	19000115 	stw	r4,4(r3)
 6aae9d8:	dc800e15 	stw	r18,56(sp)
 6aae9dc:	dc400d15 	stw	r17,52(sp)
 6aae9e0:	147cee16 	blt	r2,r17,6aadd9c <___vfprintf_internal_r+0xb90>
 6aae9e4:	18c00204 	addi	r3,r3,8
 6aae9e8:	003b8606 	br	6aad804 <___vfprintf_internal_r+0x5f8>
 6aae9ec:	38c00017 	ldw	r3,0(r7)
 6aae9f0:	39000204 	addi	r4,r7,8
 6aae9f4:	d9014015 	stw	r4,1280(sp)
 6aae9f8:	d8c14215 	stw	r3,1288(sp)
 6aae9fc:	39c00117 	ldw	r7,4(r7)
 6aaea00:	d9c14315 	stw	r7,1292(sp)
 6aaea04:	003e2006 	br	6aae288 <___vfprintf_internal_r+0x107c>
 6aaea08:	0005883a 	mov	r2,zero
 6aaea0c:	1409c83a 	sub	r4,r2,r16
 6aaea10:	1105803a 	cmpltu	r2,r2,r4
 6aaea14:	044bc83a 	sub	r5,zero,r17
 6aaea18:	2885c83a 	sub	r2,r5,r2
 6aaea1c:	2021883a 	mov	r16,r4
 6aaea20:	1023883a 	mov	r17,r2
 6aaea24:	01000044 	movi	r4,1
 6aaea28:	00800b44 	movi	r2,45
 6aaea2c:	d8800405 	stb	r2,16(sp)
 6aaea30:	003c8406 	br	6aadc44 <___vfprintf_internal_r+0xa38>
 6aaea34:	d9014f17 	ldw	r4,1340(sp)
 6aaea38:	b00b883a 	mov	r5,r22
 6aaea3c:	d9800c04 	addi	r6,sp,48
 6aaea40:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aaea44:	103ba91e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aaea48:	dc800e17 	ldw	r18,56(sp)
 6aaea4c:	dc400d17 	ldw	r17,52(sp)
 6aaea50:	d9000517 	ldw	r4,20(sp)
 6aaea54:	d9401904 	addi	r5,sp,100
 6aaea58:	003da706 	br	6aae0f8 <___vfprintf_internal_r+0xeec>
 6aaea5c:	d9014f17 	ldw	r4,1340(sp)
 6aaea60:	b00b883a 	mov	r5,r22
 6aaea64:	d9800c04 	addi	r6,sp,48
 6aaea68:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aaea6c:	103b9f1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aaea70:	dc800e17 	ldw	r18,56(sp)
 6aaea74:	dc400d17 	ldw	r17,52(sp)
 6aaea78:	d9000517 	ldw	r4,20(sp)
 6aaea7c:	d8c01904 	addi	r3,sp,100
 6aaea80:	003d9106 	br	6aae0c8 <___vfprintf_internal_r+0xebc>
 6aaea84:	0701ab34 	movhi	fp,1708
 6aaea88:	e7226484 	addi	fp,fp,-30318
 6aaea8c:	9425883a 	add	r18,r18,r16
 6aaea90:	8c400044 	addi	r17,r17,1
 6aaea94:	008001c4 	movi	r2,7
 6aaea98:	1f000015 	stw	fp,0(r3)
 6aaea9c:	1c000115 	stw	r16,4(r3)
 6aaeaa0:	dc800e15 	stw	r18,56(sp)
 6aaeaa4:	dc400d15 	stw	r17,52(sp)
 6aaeaa8:	147fbc16 	blt	r2,r17,6aae99c <___vfprintf_internal_r+0x1790>
 6aaeaac:	18c00204 	addi	r3,r3,8
 6aaeab0:	003fc206 	br	6aae9bc <___vfprintf_internal_r+0x17b0>
 6aaeab4:	d9014f17 	ldw	r4,1340(sp)
 6aaeab8:	b00b883a 	mov	r5,r22
 6aaeabc:	d9800c04 	addi	r6,sp,48
 6aaeac0:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aaeac4:	103b891e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aaeac8:	dc800e17 	ldw	r18,56(sp)
 6aaeacc:	d9000517 	ldw	r4,20(sp)
 6aaead0:	d8c01904 	addi	r3,sp,100
 6aaead4:	003d0206 	br	6aadee0 <___vfprintf_internal_r+0xcd4>
 6aaead8:	0701ab34 	movhi	fp,1708
 6aaeadc:	e7226484 	addi	fp,fp,-30318
 6aaeae0:	003be406 	br	6aada74 <___vfprintf_internal_r+0x868>
 6aaeae4:	0081ab34 	movhi	r2,1708
 6aaeae8:	10a25304 	addi	r2,r2,-30388
 6aaeaec:	d8814115 	stw	r2,1284(sp)
 6aaeaf0:	003df506 	br	6aae2c8 <___vfprintf_internal_r+0x10bc>
 6aaeaf4:	d9014217 	ldw	r4,1288(sp)
 6aaeaf8:	d9414317 	ldw	r5,1292(sp)
 6aaeafc:	6ab2db80 	call	6ab2db8 <__isnand>
 6aaeb00:	10003926 	beq	r2,zero,6aaebe8 <___vfprintf_internal_r+0x19dc>
 6aaeb04:	d9414d17 	ldw	r5,1332(sp)
 6aaeb08:	008011c4 	movi	r2,71
 6aaeb0c:	1140ce16 	blt	r2,r5,6aaee48 <___vfprintf_internal_r+0x1c3c>
 6aaeb10:	0181ab34 	movhi	r6,1708
 6aaeb14:	31a25404 	addi	r6,r6,-30384
 6aaeb18:	d9814115 	stw	r6,1284(sp)
 6aaeb1c:	003dea06 	br	6aae2c8 <___vfprintf_internal_r+0x10bc>
 6aaeb20:	d9014c17 	ldw	r4,1328(sp)
 6aaeb24:	bdc00044 	addi	r23,r23,1
 6aaeb28:	b8c00007 	ldb	r3,0(r23)
 6aaeb2c:	21000814 	ori	r4,r4,32
 6aaeb30:	d9014c15 	stw	r4,1328(sp)
 6aaeb34:	003a3406 	br	6aad408 <___vfprintf_internal_r+0x1fc>
 6aaeb38:	dcc14515 	stw	r19,1300(sp)
 6aaeb3c:	98011016 	blt	r19,zero,6aaef80 <___vfprintf_internal_r+0x1d74>
 6aaeb40:	980f883a 	mov	r7,r19
 6aaeb44:	d8014615 	stw	zero,1304(sp)
 6aaeb48:	003c5206 	br	6aadc94 <___vfprintf_internal_r+0xa88>
 6aaeb4c:	d9014f17 	ldw	r4,1340(sp)
 6aaeb50:	b00b883a 	mov	r5,r22
 6aaeb54:	d9800c04 	addi	r6,sp,48
 6aaeb58:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aaeb5c:	103b631e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aaeb60:	dc800e17 	ldw	r18,56(sp)
 6aaeb64:	d9000517 	ldw	r4,20(sp)
 6aaeb68:	d8c01904 	addi	r3,sp,100
 6aaeb6c:	003f2e06 	br	6aae828 <___vfprintf_internal_r+0x161c>
 6aaeb70:	d8c14c17 	ldw	r3,1328(sp)
 6aaeb74:	1880100c 	andi	r2,r3,64
 6aaeb78:	1000a026 	beq	r2,zero,6aaedfc <___vfprintf_internal_r+0x1bf0>
 6aaeb7c:	38800017 	ldw	r2,0(r7)
 6aaeb80:	39c00104 	addi	r7,r7,4
 6aaeb84:	d9c14015 	stw	r7,1280(sp)
 6aaeb88:	d9014b17 	ldw	r4,1324(sp)
 6aaeb8c:	d9c14017 	ldw	r7,1280(sp)
 6aaeb90:	1100000d 	sth	r4,0(r2)
 6aaeb94:	0039f906 	br	6aad37c <___vfprintf_internal_r+0x170>
 6aaeb98:	d9014f17 	ldw	r4,1340(sp)
 6aaeb9c:	b00b883a 	mov	r5,r22
 6aaeba0:	d9800c04 	addi	r6,sp,48
 6aaeba4:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aaeba8:	103b501e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aaebac:	dc800e17 	ldw	r18,56(sp)
 6aaebb0:	dc400d17 	ldw	r17,52(sp)
 6aaebb4:	d9000517 	ldw	r4,20(sp)
 6aaebb8:	d8c01904 	addi	r3,sp,100
 6aaebbc:	003f2d06 	br	6aae874 <___vfprintf_internal_r+0x1668>
 6aaebc0:	00800184 	movi	r2,6
 6aaebc4:	14c09a36 	bltu	r2,r19,6aaee30 <___vfprintf_internal_r+0x1c24>
 6aaebc8:	dcc14515 	stw	r19,1300(sp)
 6aaebcc:	9800010e 	bge	r19,zero,6aaebd4 <___vfprintf_internal_r+0x19c8>
 6aaebd0:	d8014515 	stw	zero,1300(sp)
 6aaebd4:	0081ab34 	movhi	r2,1708
 6aaebd8:	10a25604 	addi	r2,r2,-30376
 6aaebdc:	980f883a 	mov	r7,r19
 6aaebe0:	d8814115 	stw	r2,1284(sp)
 6aaebe4:	003a7806 	br	6aad5c8 <___vfprintf_internal_r+0x3bc>
 6aaebe8:	00bfffc4 	movi	r2,-1
 6aaebec:	9880e226 	beq	r19,r2,6aaef78 <___vfprintf_internal_r+0x1d6c>
 6aaebf0:	d9414d17 	ldw	r5,1332(sp)
 6aaebf4:	008019c4 	movi	r2,103
 6aaebf8:	2880dc26 	beq	r5,r2,6aaef6c <___vfprintf_internal_r+0x1d60>
 6aaebfc:	008011c4 	movi	r2,71
 6aaec00:	2880da26 	beq	r5,r2,6aaef6c <___vfprintf_internal_r+0x1d60>
 6aaec04:	d9414c17 	ldw	r5,1328(sp)
 6aaec08:	d9014317 	ldw	r4,1292(sp)
 6aaec0c:	d9814217 	ldw	r6,1288(sp)
 6aaec10:	29404014 	ori	r5,r5,256
 6aaec14:	d9414c15 	stw	r5,1328(sp)
 6aaec18:	2000cc16 	blt	r4,zero,6aaef4c <___vfprintf_internal_r+0x1d40>
 6aaec1c:	3021883a 	mov	r16,r6
 6aaec20:	2023883a 	mov	r17,r4
 6aaec24:	0039883a 	mov	fp,zero
 6aaec28:	d9414d17 	ldw	r5,1332(sp)
 6aaec2c:	00801984 	movi	r2,102
 6aaec30:	2880b726 	beq	r5,r2,6aaef10 <___vfprintf_internal_r+0x1d04>
 6aaec34:	00801184 	movi	r2,70
 6aaec38:	2880b526 	beq	r5,r2,6aaef10 <___vfprintf_internal_r+0x1d04>
 6aaec3c:	00801944 	movi	r2,101
 6aaec40:	2880c826 	beq	r5,r2,6aaef64 <___vfprintf_internal_r+0x1d58>
 6aaec44:	00801144 	movi	r2,69
 6aaec48:	2880c626 	beq	r5,r2,6aaef64 <___vfprintf_internal_r+0x1d58>
 6aaec4c:	9829883a 	mov	r20,r19
 6aaec50:	d9014f17 	ldw	r4,1340(sp)
 6aaec54:	d8800504 	addi	r2,sp,20
 6aaec58:	880d883a 	mov	r6,r17
 6aaec5c:	d8800115 	stw	r2,4(sp)
 6aaec60:	d8c00604 	addi	r3,sp,24
 6aaec64:	d8800704 	addi	r2,sp,28
 6aaec68:	800b883a 	mov	r5,r16
 6aaec6c:	01c00084 	movi	r7,2
 6aaec70:	d8c00215 	stw	r3,8(sp)
 6aaec74:	d8800315 	stw	r2,12(sp)
 6aaec78:	dd000015 	stw	r20,0(sp)
 6aaec7c:	6aaf8180 	call	6aaf818 <_dtoa_r>
 6aaec80:	d9814d17 	ldw	r6,1332(sp)
 6aaec84:	d8814115 	stw	r2,1284(sp)
 6aaec88:	008019c4 	movi	r2,103
 6aaec8c:	30809526 	beq	r6,r2,6aaeee4 <___vfprintf_internal_r+0x1cd8>
 6aaec90:	d8c14d17 	ldw	r3,1332(sp)
 6aaec94:	008011c4 	movi	r2,71
 6aaec98:	18809226 	beq	r3,r2,6aaeee4 <___vfprintf_internal_r+0x1cd8>
 6aaec9c:	d9414117 	ldw	r5,1284(sp)
 6aaeca0:	d9814d17 	ldw	r6,1332(sp)
 6aaeca4:	00801984 	movi	r2,102
 6aaeca8:	2d25883a 	add	r18,r5,r20
 6aaecac:	30808626 	beq	r6,r2,6aaeec8 <___vfprintf_internal_r+0x1cbc>
 6aaecb0:	00801184 	movi	r2,70
 6aaecb4:	30808426 	beq	r6,r2,6aaeec8 <___vfprintf_internal_r+0x1cbc>
 6aaecb8:	000d883a 	mov	r6,zero
 6aaecbc:	000f883a 	mov	r7,zero
 6aaecc0:	880b883a 	mov	r5,r17
 6aaecc4:	8009883a 	mov	r4,r16
 6aaecc8:	6ab46780 	call	6ab4678 <__eqdf2>
 6aaeccc:	1000751e 	bne	r2,zero,6aaeea4 <___vfprintf_internal_r+0x1c98>
 6aaecd0:	9005883a 	mov	r2,r18
 6aaecd4:	dc800715 	stw	r18,28(sp)
 6aaecd8:	d9014117 	ldw	r4,1284(sp)
 6aaecdc:	d9414d17 	ldw	r5,1332(sp)
 6aaece0:	00c019c4 	movi	r3,103
 6aaece4:	1125c83a 	sub	r18,r2,r4
 6aaece8:	28c06826 	beq	r5,r3,6aaee8c <___vfprintf_internal_r+0x1c80>
 6aaecec:	008011c4 	movi	r2,71
 6aaecf0:	28806626 	beq	r5,r2,6aaee8c <___vfprintf_internal_r+0x1c80>
 6aaecf4:	d9000517 	ldw	r4,20(sp)
 6aaecf8:	d8c14d17 	ldw	r3,1332(sp)
 6aaecfc:	00801944 	movi	r2,101
 6aaed00:	10c05516 	blt	r2,r3,6aaee58 <___vfprintf_internal_r+0x1c4c>
 6aaed04:	213fffc4 	addi	r4,r4,-1
 6aaed08:	d9000515 	stw	r4,20(sp)
 6aaed0c:	d8c00805 	stb	r3,32(sp)
 6aaed10:	2021883a 	mov	r16,r4
 6aaed14:	2000c116 	blt	r4,zero,6aaf01c <___vfprintf_internal_r+0x1e10>
 6aaed18:	00800ac4 	movi	r2,43
 6aaed1c:	d8800845 	stb	r2,33(sp)
 6aaed20:	00800244 	movi	r2,9
 6aaed24:	1400af0e 	bge	r2,r16,6aaefe4 <___vfprintf_internal_r+0x1dd8>
 6aaed28:	1027883a 	mov	r19,r2
 6aaed2c:	dc400b84 	addi	r17,sp,46
 6aaed30:	8009883a 	mov	r4,r16
 6aaed34:	01400284 	movi	r5,10
 6aaed38:	6ab4d600 	call	6ab4d60 <__modsi3>
 6aaed3c:	10800c04 	addi	r2,r2,48
 6aaed40:	8c7fffc4 	addi	r17,r17,-1
 6aaed44:	8009883a 	mov	r4,r16
 6aaed48:	01400284 	movi	r5,10
 6aaed4c:	88800005 	stb	r2,0(r17)
 6aaed50:	6ab4d000 	call	6ab4d00 <__divsi3>
 6aaed54:	1021883a 	mov	r16,r2
 6aaed58:	98bff516 	blt	r19,r2,6aaed30 <___vfprintf_internal_r+0x1b24>
 6aaed5c:	10c00c04 	addi	r3,r2,48
 6aaed60:	d88009c4 	addi	r2,sp,39
 6aaed64:	108001c4 	addi	r2,r2,7
 6aaed68:	897fffc4 	addi	r5,r17,-1
 6aaed6c:	88ffffc5 	stb	r3,-1(r17)
 6aaed70:	2880a72e 	bgeu	r5,r2,6aaf010 <___vfprintf_internal_r+0x1e04>
 6aaed74:	1009883a 	mov	r4,r2
 6aaed78:	d9800804 	addi	r6,sp,32
 6aaed7c:	d8c00884 	addi	r3,sp,34
 6aaed80:	28800003 	ldbu	r2,0(r5)
 6aaed84:	29400044 	addi	r5,r5,1
 6aaed88:	18800005 	stb	r2,0(r3)
 6aaed8c:	18c00044 	addi	r3,r3,1
 6aaed90:	293ffb36 	bltu	r5,r4,6aaed80 <___vfprintf_internal_r+0x1b74>
 6aaed94:	1987c83a 	sub	r3,r3,r6
 6aaed98:	00800044 	movi	r2,1
 6aaed9c:	d8c14815 	stw	r3,1312(sp)
 6aaeda0:	90cf883a 	add	r7,r18,r3
 6aaeda4:	1480960e 	bge	r2,r18,6aaf000 <___vfprintf_internal_r+0x1df4>
 6aaeda8:	39c00044 	addi	r7,r7,1
 6aaedac:	d9c14515 	stw	r7,1300(sp)
 6aaedb0:	38003416 	blt	r7,zero,6aaee84 <___vfprintf_internal_r+0x1c78>
 6aaedb4:	e0803fcc 	andi	r2,fp,255
 6aaedb8:	1080201c 	xori	r2,r2,128
 6aaedbc:	10bfe004 	addi	r2,r2,-128
 6aaedc0:	10004e26 	beq	r2,zero,6aaeefc <___vfprintf_internal_r+0x1cf0>
 6aaedc4:	00800b44 	movi	r2,45
 6aaedc8:	dc814715 	stw	r18,1308(sp)
 6aaedcc:	d8014615 	stw	zero,1304(sp)
 6aaedd0:	d8800405 	stb	r2,16(sp)
 6aaedd4:	003bb106 	br	6aadc9c <___vfprintf_internal_r+0xa90>
 6aaedd8:	00800b44 	movi	r2,45
 6aaeddc:	d8800405 	stb	r2,16(sp)
 6aaede0:	003d3306 	br	6aae2b0 <___vfprintf_internal_r+0x10a4>
 6aaede4:	d9014f17 	ldw	r4,1340(sp)
 6aaede8:	b00b883a 	mov	r5,r22
 6aaedec:	d9800c04 	addi	r6,sp,48
 6aaedf0:	6aad1b40 	call	6aad1b4 <__sprint_r>
 6aaedf4:	103abd1e 	bne	r2,zero,6aad8ec <___vfprintf_internal_r+0x6e0>
 6aaedf8:	003abb06 	br	6aad8e8 <___vfprintf_internal_r+0x6dc>
 6aaedfc:	38800017 	ldw	r2,0(r7)
 6aaee00:	39c00104 	addi	r7,r7,4
 6aaee04:	d9c14015 	stw	r7,1280(sp)
 6aaee08:	d9414b17 	ldw	r5,1324(sp)
 6aaee0c:	d9c14017 	ldw	r7,1280(sp)
 6aaee10:	11400015 	stw	r5,0(r2)
 6aaee14:	00395906 	br	6aad37c <___vfprintf_internal_r+0x170>
 6aaee18:	980f883a 	mov	r7,r19
 6aaee1c:	dcc14515 	stw	r19,1300(sp)
 6aaee20:	d8014615 	stw	zero,1304(sp)
 6aaee24:	003b9b06 	br	6aadc94 <___vfprintf_internal_r+0xa88>
 6aaee28:	0027883a 	mov	r19,zero
 6aaee2c:	00397806 	br	6aad410 <___vfprintf_internal_r+0x204>
 6aaee30:	00c1ab34 	movhi	r3,1708
 6aaee34:	18e25604 	addi	r3,r3,-30376
 6aaee38:	100f883a 	mov	r7,r2
 6aaee3c:	d8814515 	stw	r2,1300(sp)
 6aaee40:	d8c14115 	stw	r3,1284(sp)
 6aaee44:	0039e006 	br	6aad5c8 <___vfprintf_internal_r+0x3bc>
 6aaee48:	0081ab34 	movhi	r2,1708
 6aaee4c:	10a25504 	addi	r2,r2,-30380
 6aaee50:	d8814115 	stw	r2,1284(sp)
 6aaee54:	003d1c06 	br	6aae2c8 <___vfprintf_internal_r+0x10bc>
 6aaee58:	d9414d17 	ldw	r5,1332(sp)
 6aaee5c:	00801984 	movi	r2,102
 6aaee60:	28804926 	beq	r5,r2,6aaef88 <___vfprintf_internal_r+0x1d7c>
 6aaee64:	200f883a 	mov	r7,r4
 6aaee68:	24805716 	blt	r4,r18,6aaefc8 <___vfprintf_internal_r+0x1dbc>
 6aaee6c:	d9414c17 	ldw	r5,1328(sp)
 6aaee70:	2880004c 	andi	r2,r5,1
 6aaee74:	10000126 	beq	r2,zero,6aaee7c <___vfprintf_internal_r+0x1c70>
 6aaee78:	21c00044 	addi	r7,r4,1
 6aaee7c:	d9c14515 	stw	r7,1300(sp)
 6aaee80:	383fcc0e 	bge	r7,zero,6aaedb4 <___vfprintf_internal_r+0x1ba8>
 6aaee84:	d8014515 	stw	zero,1300(sp)
 6aaee88:	003fca06 	br	6aaedb4 <___vfprintf_internal_r+0x1ba8>
 6aaee8c:	d9000517 	ldw	r4,20(sp)
 6aaee90:	00bfff04 	movi	r2,-4
 6aaee94:	1100480e 	bge	r2,r4,6aaefb8 <___vfprintf_internal_r+0x1dac>
 6aaee98:	99004716 	blt	r19,r4,6aaefb8 <___vfprintf_internal_r+0x1dac>
 6aaee9c:	d8c14d15 	stw	r3,1332(sp)
 6aaeea0:	003ff006 	br	6aaee64 <___vfprintf_internal_r+0x1c58>
 6aaeea4:	d8800717 	ldw	r2,28(sp)
 6aaeea8:	14bf8b2e 	bgeu	r2,r18,6aaecd8 <___vfprintf_internal_r+0x1acc>
 6aaeeac:	9007883a 	mov	r3,r18
 6aaeeb0:	01000c04 	movi	r4,48
 6aaeeb4:	11000005 	stb	r4,0(r2)
 6aaeeb8:	10800044 	addi	r2,r2,1
 6aaeebc:	d8800715 	stw	r2,28(sp)
 6aaeec0:	18bffc1e 	bne	r3,r2,6aaeeb4 <___vfprintf_internal_r+0x1ca8>
 6aaeec4:	003f8406 	br	6aaecd8 <___vfprintf_internal_r+0x1acc>
 6aaeec8:	d8814117 	ldw	r2,1284(sp)
 6aaeecc:	10c00007 	ldb	r3,0(r2)
 6aaeed0:	00800c04 	movi	r2,48
 6aaeed4:	18805b26 	beq	r3,r2,6aaf044 <___vfprintf_internal_r+0x1e38>
 6aaeed8:	d9000517 	ldw	r4,20(sp)
 6aaeedc:	9125883a 	add	r18,r18,r4
 6aaeee0:	003f7506 	br	6aaecb8 <___vfprintf_internal_r+0x1aac>
 6aaeee4:	d9014c17 	ldw	r4,1328(sp)
 6aaeee8:	2080004c 	andi	r2,r4,1
 6aaeeec:	1005003a 	cmpeq	r2,r2,zero
 6aaeef0:	103f6a26 	beq	r2,zero,6aaec9c <___vfprintf_internal_r+0x1a90>
 6aaeef4:	d8800717 	ldw	r2,28(sp)
 6aaeef8:	003f7706 	br	6aaecd8 <___vfprintf_internal_r+0x1acc>
 6aaeefc:	d9c14515 	stw	r7,1300(sp)
 6aaef00:	38004d16 	blt	r7,zero,6aaf038 <___vfprintf_internal_r+0x1e2c>
 6aaef04:	dc814715 	stw	r18,1308(sp)
 6aaef08:	d8014615 	stw	zero,1304(sp)
 6aaef0c:	003b6106 	br	6aadc94 <___vfprintf_internal_r+0xa88>
 6aaef10:	d9014f17 	ldw	r4,1340(sp)
 6aaef14:	d8800504 	addi	r2,sp,20
 6aaef18:	d8800115 	stw	r2,4(sp)
 6aaef1c:	d8c00604 	addi	r3,sp,24
 6aaef20:	d8800704 	addi	r2,sp,28
 6aaef24:	800b883a 	mov	r5,r16
 6aaef28:	880d883a 	mov	r6,r17
 6aaef2c:	01c000c4 	movi	r7,3
 6aaef30:	d8c00215 	stw	r3,8(sp)
 6aaef34:	d8800315 	stw	r2,12(sp)
 6aaef38:	dcc00015 	stw	r19,0(sp)
 6aaef3c:	9829883a 	mov	r20,r19
 6aaef40:	6aaf8180 	call	6aaf818 <_dtoa_r>
 6aaef44:	d8814115 	stw	r2,1284(sp)
 6aaef48:	003f5106 	br	6aaec90 <___vfprintf_internal_r+0x1a84>
 6aaef4c:	d8c14217 	ldw	r3,1288(sp)
 6aaef50:	d9014317 	ldw	r4,1292(sp)
 6aaef54:	07000b44 	movi	fp,45
 6aaef58:	1821883a 	mov	r16,r3
 6aaef5c:	2460003c 	xorhi	r17,r4,32768
 6aaef60:	003f3106 	br	6aaec28 <___vfprintf_internal_r+0x1a1c>
 6aaef64:	9d000044 	addi	r20,r19,1
 6aaef68:	003f3906 	br	6aaec50 <___vfprintf_internal_r+0x1a44>
 6aaef6c:	983f251e 	bne	r19,zero,6aaec04 <___vfprintf_internal_r+0x19f8>
 6aaef70:	04c00044 	movi	r19,1
 6aaef74:	003f2306 	br	6aaec04 <___vfprintf_internal_r+0x19f8>
 6aaef78:	04c00184 	movi	r19,6
 6aaef7c:	003f2106 	br	6aaec04 <___vfprintf_internal_r+0x19f8>
 6aaef80:	d8014515 	stw	zero,1300(sp)
 6aaef84:	003eee06 	br	6aaeb40 <___vfprintf_internal_r+0x1934>
 6aaef88:	200f883a 	mov	r7,r4
 6aaef8c:	0100370e 	bge	zero,r4,6aaf06c <___vfprintf_internal_r+0x1e60>
 6aaef90:	9800031e 	bne	r19,zero,6aaefa0 <___vfprintf_internal_r+0x1d94>
 6aaef94:	d9814c17 	ldw	r6,1328(sp)
 6aaef98:	3080004c 	andi	r2,r6,1
 6aaef9c:	103fb726 	beq	r2,zero,6aaee7c <___vfprintf_internal_r+0x1c70>
 6aaefa0:	20800044 	addi	r2,r4,1
 6aaefa4:	98a7883a 	add	r19,r19,r2
 6aaefa8:	dcc14515 	stw	r19,1300(sp)
 6aaefac:	980f883a 	mov	r7,r19
 6aaefb0:	983f800e 	bge	r19,zero,6aaedb4 <___vfprintf_internal_r+0x1ba8>
 6aaefb4:	003fb306 	br	6aaee84 <___vfprintf_internal_r+0x1c78>
 6aaefb8:	d9814d17 	ldw	r6,1332(sp)
 6aaefbc:	31bfff84 	addi	r6,r6,-2
 6aaefc0:	d9814d15 	stw	r6,1332(sp)
 6aaefc4:	003f4c06 	br	6aaecf8 <___vfprintf_internal_r+0x1aec>
 6aaefc8:	0100180e 	bge	zero,r4,6aaf02c <___vfprintf_internal_r+0x1e20>
 6aaefcc:	00800044 	movi	r2,1
 6aaefd0:	1485883a 	add	r2,r2,r18
 6aaefd4:	d8814515 	stw	r2,1300(sp)
 6aaefd8:	100f883a 	mov	r7,r2
 6aaefdc:	103f750e 	bge	r2,zero,6aaedb4 <___vfprintf_internal_r+0x1ba8>
 6aaefe0:	003fa806 	br	6aaee84 <___vfprintf_internal_r+0x1c78>
 6aaefe4:	80c00c04 	addi	r3,r16,48
 6aaefe8:	00800c04 	movi	r2,48
 6aaefec:	d8c008c5 	stb	r3,35(sp)
 6aaeff0:	d9800804 	addi	r6,sp,32
 6aaeff4:	d8c00904 	addi	r3,sp,36
 6aaeff8:	d8800885 	stb	r2,34(sp)
 6aaeffc:	003f6506 	br	6aaed94 <___vfprintf_internal_r+0x1b88>
 6aaf000:	d9014c17 	ldw	r4,1328(sp)
 6aaf004:	2084703a 	and	r2,r4,r2
 6aaf008:	103f9c26 	beq	r2,zero,6aaee7c <___vfprintf_internal_r+0x1c70>
 6aaf00c:	003f6606 	br	6aaeda8 <___vfprintf_internal_r+0x1b9c>
 6aaf010:	d9800804 	addi	r6,sp,32
 6aaf014:	d8c00884 	addi	r3,sp,34
 6aaf018:	003f5e06 	br	6aaed94 <___vfprintf_internal_r+0x1b88>
 6aaf01c:	00800b44 	movi	r2,45
 6aaf020:	0121c83a 	sub	r16,zero,r4
 6aaf024:	d8800845 	stb	r2,33(sp)
 6aaf028:	003f3d06 	br	6aaed20 <___vfprintf_internal_r+0x1b14>
 6aaf02c:	00800084 	movi	r2,2
 6aaf030:	1105c83a 	sub	r2,r2,r4
 6aaf034:	003fe606 	br	6aaefd0 <___vfprintf_internal_r+0x1dc4>
 6aaf038:	d8014515 	stw	zero,1300(sp)
 6aaf03c:	dc814715 	stw	r18,1308(sp)
 6aaf040:	003fb106 	br	6aaef08 <___vfprintf_internal_r+0x1cfc>
 6aaf044:	000d883a 	mov	r6,zero
 6aaf048:	000f883a 	mov	r7,zero
 6aaf04c:	8009883a 	mov	r4,r16
 6aaf050:	880b883a 	mov	r5,r17
 6aaf054:	6ab47000 	call	6ab4700 <__nedf2>
 6aaf058:	103f9f26 	beq	r2,zero,6aaeed8 <___vfprintf_internal_r+0x1ccc>
 6aaf05c:	00800044 	movi	r2,1
 6aaf060:	1509c83a 	sub	r4,r2,r20
 6aaf064:	d9000515 	stw	r4,20(sp)
 6aaf068:	003f9b06 	br	6aaeed8 <___vfprintf_internal_r+0x1ccc>
 6aaf06c:	98000d1e 	bne	r19,zero,6aaf0a4 <___vfprintf_internal_r+0x1e98>
 6aaf070:	d8c14c17 	ldw	r3,1328(sp)
 6aaf074:	1880004c 	andi	r2,r3,1
 6aaf078:	10000a1e 	bne	r2,zero,6aaf0a4 <___vfprintf_internal_r+0x1e98>
 6aaf07c:	01000044 	movi	r4,1
 6aaf080:	200f883a 	mov	r7,r4
 6aaf084:	d9014515 	stw	r4,1300(sp)
 6aaf088:	003f4a06 	br	6aaedb4 <___vfprintf_internal_r+0x1ba8>
 6aaf08c:	3cc00017 	ldw	r19,0(r7)
 6aaf090:	39c00104 	addi	r7,r7,4
 6aaf094:	983d0e0e 	bge	r19,zero,6aae4d0 <___vfprintf_internal_r+0x12c4>
 6aaf098:	b8c00007 	ldb	r3,0(r23)
 6aaf09c:	04ffffc4 	movi	r19,-1
 6aaf0a0:	0038d906 	br	6aad408 <___vfprintf_internal_r+0x1fc>
 6aaf0a4:	9cc00084 	addi	r19,r19,2
 6aaf0a8:	dcc14515 	stw	r19,1300(sp)
 6aaf0ac:	980f883a 	mov	r7,r19
 6aaf0b0:	983f400e 	bge	r19,zero,6aaedb4 <___vfprintf_internal_r+0x1ba8>
 6aaf0b4:	003f7306 	br	6aaee84 <___vfprintf_internal_r+0x1c78>

06aaf0b8 <__vfprintf_internal>:
 6aaf0b8:	0081ab34 	movhi	r2,1708
 6aaf0bc:	10a9b004 	addi	r2,r2,-22848
 6aaf0c0:	2013883a 	mov	r9,r4
 6aaf0c4:	11000017 	ldw	r4,0(r2)
 6aaf0c8:	2805883a 	mov	r2,r5
 6aaf0cc:	300f883a 	mov	r7,r6
 6aaf0d0:	480b883a 	mov	r5,r9
 6aaf0d4:	100d883a 	mov	r6,r2
 6aaf0d8:	6aad20c1 	jmpi	6aad20c <___vfprintf_internal_r>

06aaf0dc <__swbuf_r>:
 6aaf0dc:	defffc04 	addi	sp,sp,-16
 6aaf0e0:	dc400215 	stw	r17,8(sp)
 6aaf0e4:	dc000115 	stw	r16,4(sp)
 6aaf0e8:	dfc00315 	stw	ra,12(sp)
 6aaf0ec:	2023883a 	mov	r17,r4
 6aaf0f0:	2821883a 	mov	r16,r5
 6aaf0f4:	20000226 	beq	r4,zero,6aaf100 <__swbuf_r+0x24>
 6aaf0f8:	20800e17 	ldw	r2,56(r4)
 6aaf0fc:	10002f26 	beq	r2,zero,6aaf1bc <__swbuf_r+0xe0>
 6aaf100:	3080030b 	ldhu	r2,12(r6)
 6aaf104:	30c00617 	ldw	r3,24(r6)
 6aaf108:	1080020c 	andi	r2,r2,8
 6aaf10c:	30c00215 	stw	r3,8(r6)
 6aaf110:	10002226 	beq	r2,zero,6aaf19c <__swbuf_r+0xc0>
 6aaf114:	30c00417 	ldw	r3,16(r6)
 6aaf118:	18002026 	beq	r3,zero,6aaf19c <__swbuf_r+0xc0>
 6aaf11c:	31000017 	ldw	r4,0(r6)
 6aaf120:	30800517 	ldw	r2,20(r6)
 6aaf124:	20c7c83a 	sub	r3,r4,r3
 6aaf128:	18802f0e 	bge	r3,r2,6aaf1e8 <__swbuf_r+0x10c>
 6aaf12c:	19400044 	addi	r5,r3,1
 6aaf130:	30800217 	ldw	r2,8(r6)
 6aaf134:	84003fcc 	andi	r16,r16,255
 6aaf138:	20c00044 	addi	r3,r4,1
 6aaf13c:	10bfffc4 	addi	r2,r2,-1
 6aaf140:	30800215 	stw	r2,8(r6)
 6aaf144:	24000005 	stb	r16,0(r4)
 6aaf148:	30800517 	ldw	r2,20(r6)
 6aaf14c:	30c00015 	stw	r3,0(r6)
 6aaf150:	11400c26 	beq	r2,r5,6aaf184 <__swbuf_r+0xa8>
 6aaf154:	3080030b 	ldhu	r2,12(r6)
 6aaf158:	1080004c 	andi	r2,r2,1
 6aaf15c:	1005003a 	cmpeq	r2,r2,zero
 6aaf160:	10000626 	beq	r2,zero,6aaf17c <__swbuf_r+0xa0>
 6aaf164:	8005883a 	mov	r2,r16
 6aaf168:	dfc00317 	ldw	ra,12(sp)
 6aaf16c:	dc400217 	ldw	r17,8(sp)
 6aaf170:	dc000117 	ldw	r16,4(sp)
 6aaf174:	dec00404 	addi	sp,sp,16
 6aaf178:	f800283a 	ret
 6aaf17c:	00800284 	movi	r2,10
 6aaf180:	80bff81e 	bne	r16,r2,6aaf164 <__swbuf_r+0x88>
 6aaf184:	8809883a 	mov	r4,r17
 6aaf188:	300b883a 	mov	r5,r6
 6aaf18c:	6aab0180 	call	6aab018 <_fflush_r>
 6aaf190:	103ff426 	beq	r2,zero,6aaf164 <__swbuf_r+0x88>
 6aaf194:	043fffc4 	movi	r16,-1
 6aaf198:	003ff206 	br	6aaf164 <__swbuf_r+0x88>
 6aaf19c:	300b883a 	mov	r5,r6
 6aaf1a0:	8809883a 	mov	r4,r17
 6aaf1a4:	d9800015 	stw	r6,0(sp)
 6aaf1a8:	6aaf2a00 	call	6aaf2a0 <__swsetup_r>
 6aaf1ac:	d9800017 	ldw	r6,0(sp)
 6aaf1b0:	1000061e 	bne	r2,zero,6aaf1cc <__swbuf_r+0xf0>
 6aaf1b4:	30c00417 	ldw	r3,16(r6)
 6aaf1b8:	003fd806 	br	6aaf11c <__swbuf_r+0x40>
 6aaf1bc:	d9800015 	stw	r6,0(sp)
 6aaf1c0:	6aab2b00 	call	6aab2b0 <__sinit>
 6aaf1c4:	d9800017 	ldw	r6,0(sp)
 6aaf1c8:	003fcd06 	br	6aaf100 <__swbuf_r+0x24>
 6aaf1cc:	3080030b 	ldhu	r2,12(r6)
 6aaf1d0:	00c00244 	movi	r3,9
 6aaf1d4:	043fffc4 	movi	r16,-1
 6aaf1d8:	10801014 	ori	r2,r2,64
 6aaf1dc:	3080030d 	sth	r2,12(r6)
 6aaf1e0:	88c00015 	stw	r3,0(r17)
 6aaf1e4:	003fdf06 	br	6aaf164 <__swbuf_r+0x88>
 6aaf1e8:	300b883a 	mov	r5,r6
 6aaf1ec:	8809883a 	mov	r4,r17
 6aaf1f0:	d9800015 	stw	r6,0(sp)
 6aaf1f4:	6aab0180 	call	6aab018 <_fflush_r>
 6aaf1f8:	d9800017 	ldw	r6,0(sp)
 6aaf1fc:	103fe51e 	bne	r2,zero,6aaf194 <__swbuf_r+0xb8>
 6aaf200:	31000017 	ldw	r4,0(r6)
 6aaf204:	01400044 	movi	r5,1
 6aaf208:	003fc906 	br	6aaf130 <__swbuf_r+0x54>

06aaf20c <__swbuf>:
 6aaf20c:	0181ab34 	movhi	r6,1708
 6aaf210:	31a9b004 	addi	r6,r6,-22848
 6aaf214:	2007883a 	mov	r3,r4
 6aaf218:	31000017 	ldw	r4,0(r6)
 6aaf21c:	280d883a 	mov	r6,r5
 6aaf220:	180b883a 	mov	r5,r3
 6aaf224:	6aaf0dc1 	jmpi	6aaf0dc <__swbuf_r>

06aaf228 <_write_r>:
 6aaf228:	defffd04 	addi	sp,sp,-12
 6aaf22c:	dc000015 	stw	r16,0(sp)
 6aaf230:	0401ab34 	movhi	r16,1708
 6aaf234:	84308504 	addi	r16,r16,-15852
 6aaf238:	dc400115 	stw	r17,4(sp)
 6aaf23c:	80000015 	stw	zero,0(r16)
 6aaf240:	2023883a 	mov	r17,r4
 6aaf244:	2809883a 	mov	r4,r5
 6aaf248:	300b883a 	mov	r5,r6
 6aaf24c:	380d883a 	mov	r6,r7
 6aaf250:	dfc00215 	stw	ra,8(sp)
 6aaf254:	6ab61740 	call	6ab6174 <write>
 6aaf258:	1007883a 	mov	r3,r2
 6aaf25c:	00bfffc4 	movi	r2,-1
 6aaf260:	18800626 	beq	r3,r2,6aaf27c <_write_r+0x54>
 6aaf264:	1805883a 	mov	r2,r3
 6aaf268:	dfc00217 	ldw	ra,8(sp)
 6aaf26c:	dc400117 	ldw	r17,4(sp)
 6aaf270:	dc000017 	ldw	r16,0(sp)
 6aaf274:	dec00304 	addi	sp,sp,12
 6aaf278:	f800283a 	ret
 6aaf27c:	80800017 	ldw	r2,0(r16)
 6aaf280:	103ff826 	beq	r2,zero,6aaf264 <_write_r+0x3c>
 6aaf284:	88800015 	stw	r2,0(r17)
 6aaf288:	1805883a 	mov	r2,r3
 6aaf28c:	dfc00217 	ldw	ra,8(sp)
 6aaf290:	dc400117 	ldw	r17,4(sp)
 6aaf294:	dc000017 	ldw	r16,0(sp)
 6aaf298:	dec00304 	addi	sp,sp,12
 6aaf29c:	f800283a 	ret

06aaf2a0 <__swsetup_r>:
 6aaf2a0:	0081ab34 	movhi	r2,1708
 6aaf2a4:	10a9b004 	addi	r2,r2,-22848
 6aaf2a8:	10c00017 	ldw	r3,0(r2)
 6aaf2ac:	defffd04 	addi	sp,sp,-12
 6aaf2b0:	dc400115 	stw	r17,4(sp)
 6aaf2b4:	dc000015 	stw	r16,0(sp)
 6aaf2b8:	dfc00215 	stw	ra,8(sp)
 6aaf2bc:	2023883a 	mov	r17,r4
 6aaf2c0:	2821883a 	mov	r16,r5
 6aaf2c4:	18000226 	beq	r3,zero,6aaf2d0 <__swsetup_r+0x30>
 6aaf2c8:	18800e17 	ldw	r2,56(r3)
 6aaf2cc:	10001f26 	beq	r2,zero,6aaf34c <__swsetup_r+0xac>
 6aaf2d0:	8100030b 	ldhu	r4,12(r16)
 6aaf2d4:	2080020c 	andi	r2,r4,8
 6aaf2d8:	10002826 	beq	r2,zero,6aaf37c <__swsetup_r+0xdc>
 6aaf2dc:	81400417 	ldw	r5,16(r16)
 6aaf2e0:	28001d26 	beq	r5,zero,6aaf358 <__swsetup_r+0xb8>
 6aaf2e4:	2080004c 	andi	r2,r4,1
 6aaf2e8:	1005003a 	cmpeq	r2,r2,zero
 6aaf2ec:	10000b26 	beq	r2,zero,6aaf31c <__swsetup_r+0x7c>
 6aaf2f0:	2080008c 	andi	r2,r4,2
 6aaf2f4:	10001226 	beq	r2,zero,6aaf340 <__swsetup_r+0xa0>
 6aaf2f8:	0005883a 	mov	r2,zero
 6aaf2fc:	80800215 	stw	r2,8(r16)
 6aaf300:	28000b26 	beq	r5,zero,6aaf330 <__swsetup_r+0x90>
 6aaf304:	0005883a 	mov	r2,zero
 6aaf308:	dfc00217 	ldw	ra,8(sp)
 6aaf30c:	dc400117 	ldw	r17,4(sp)
 6aaf310:	dc000017 	ldw	r16,0(sp)
 6aaf314:	dec00304 	addi	sp,sp,12
 6aaf318:	f800283a 	ret
 6aaf31c:	80800517 	ldw	r2,20(r16)
 6aaf320:	80000215 	stw	zero,8(r16)
 6aaf324:	0085c83a 	sub	r2,zero,r2
 6aaf328:	80800615 	stw	r2,24(r16)
 6aaf32c:	283ff51e 	bne	r5,zero,6aaf304 <__swsetup_r+0x64>
 6aaf330:	2080200c 	andi	r2,r4,128
 6aaf334:	103ff326 	beq	r2,zero,6aaf304 <__swsetup_r+0x64>
 6aaf338:	00bfffc4 	movi	r2,-1
 6aaf33c:	003ff206 	br	6aaf308 <__swsetup_r+0x68>
 6aaf340:	80800517 	ldw	r2,20(r16)
 6aaf344:	80800215 	stw	r2,8(r16)
 6aaf348:	003fed06 	br	6aaf300 <__swsetup_r+0x60>
 6aaf34c:	1809883a 	mov	r4,r3
 6aaf350:	6aab2b00 	call	6aab2b0 <__sinit>
 6aaf354:	003fde06 	br	6aaf2d0 <__swsetup_r+0x30>
 6aaf358:	20c0a00c 	andi	r3,r4,640
 6aaf35c:	00808004 	movi	r2,512
 6aaf360:	18bfe026 	beq	r3,r2,6aaf2e4 <__swsetup_r+0x44>
 6aaf364:	8809883a 	mov	r4,r17
 6aaf368:	800b883a 	mov	r5,r16
 6aaf36c:	6aac1c80 	call	6aac1c8 <__smakebuf_r>
 6aaf370:	8100030b 	ldhu	r4,12(r16)
 6aaf374:	81400417 	ldw	r5,16(r16)
 6aaf378:	003fda06 	br	6aaf2e4 <__swsetup_r+0x44>
 6aaf37c:	2080040c 	andi	r2,r4,16
 6aaf380:	103fed26 	beq	r2,zero,6aaf338 <__swsetup_r+0x98>
 6aaf384:	2080010c 	andi	r2,r4,4
 6aaf388:	10001226 	beq	r2,zero,6aaf3d4 <__swsetup_r+0x134>
 6aaf38c:	81400c17 	ldw	r5,48(r16)
 6aaf390:	28000526 	beq	r5,zero,6aaf3a8 <__swsetup_r+0x108>
 6aaf394:	80801004 	addi	r2,r16,64
 6aaf398:	28800226 	beq	r5,r2,6aaf3a4 <__swsetup_r+0x104>
 6aaf39c:	8809883a 	mov	r4,r17
 6aaf3a0:	6aab8600 	call	6aab860 <_free_r>
 6aaf3a4:	80000c15 	stw	zero,48(r16)
 6aaf3a8:	8080030b 	ldhu	r2,12(r16)
 6aaf3ac:	81400417 	ldw	r5,16(r16)
 6aaf3b0:	80000115 	stw	zero,4(r16)
 6aaf3b4:	10bff6cc 	andi	r2,r2,65499
 6aaf3b8:	8080030d 	sth	r2,12(r16)
 6aaf3bc:	81400015 	stw	r5,0(r16)
 6aaf3c0:	8080030b 	ldhu	r2,12(r16)
 6aaf3c4:	10800214 	ori	r2,r2,8
 6aaf3c8:	113fffcc 	andi	r4,r2,65535
 6aaf3cc:	8080030d 	sth	r2,12(r16)
 6aaf3d0:	003fc306 	br	6aaf2e0 <__swsetup_r+0x40>
 6aaf3d4:	81400417 	ldw	r5,16(r16)
 6aaf3d8:	003ff906 	br	6aaf3c0 <__swsetup_r+0x120>

06aaf3dc <register_fini>:
 6aaf3dc:	f800283a 	ret

06aaf3e0 <__call_exitprocs>:
 6aaf3e0:	0081ab34 	movhi	r2,1708
 6aaf3e4:	10a9b104 	addi	r2,r2,-22844
 6aaf3e8:	10800017 	ldw	r2,0(r2)
 6aaf3ec:	defff304 	addi	sp,sp,-52
 6aaf3f0:	df000b15 	stw	fp,44(sp)
 6aaf3f4:	d8800115 	stw	r2,4(sp)
 6aaf3f8:	00800034 	movhi	r2,0
 6aaf3fc:	10800004 	addi	r2,r2,0
 6aaf400:	1005003a 	cmpeq	r2,r2,zero
 6aaf404:	d8800215 	stw	r2,8(sp)
 6aaf408:	d8800117 	ldw	r2,4(sp)
 6aaf40c:	dd400815 	stw	r21,32(sp)
 6aaf410:	dd000715 	stw	r20,28(sp)
 6aaf414:	10805204 	addi	r2,r2,328
 6aaf418:	dfc00c15 	stw	ra,48(sp)
 6aaf41c:	ddc00a15 	stw	r23,40(sp)
 6aaf420:	dd800915 	stw	r22,36(sp)
 6aaf424:	dcc00615 	stw	r19,24(sp)
 6aaf428:	dc800515 	stw	r18,20(sp)
 6aaf42c:	dc400415 	stw	r17,16(sp)
 6aaf430:	dc000315 	stw	r16,12(sp)
 6aaf434:	282b883a 	mov	r21,r5
 6aaf438:	2039883a 	mov	fp,r4
 6aaf43c:	d8800015 	stw	r2,0(sp)
 6aaf440:	2829003a 	cmpeq	r20,r5,zero
 6aaf444:	d8800117 	ldw	r2,4(sp)
 6aaf448:	14405217 	ldw	r17,328(r2)
 6aaf44c:	88001026 	beq	r17,zero,6aaf490 <__call_exitprocs+0xb0>
 6aaf450:	ddc00017 	ldw	r23,0(sp)
 6aaf454:	88800117 	ldw	r2,4(r17)
 6aaf458:	8c802204 	addi	r18,r17,136
 6aaf45c:	143fffc4 	addi	r16,r2,-1
 6aaf460:	80000916 	blt	r16,zero,6aaf488 <__call_exitprocs+0xa8>
 6aaf464:	05bfffc4 	movi	r22,-1
 6aaf468:	a000151e 	bne	r20,zero,6aaf4c0 <__call_exitprocs+0xe0>
 6aaf46c:	8409883a 	add	r4,r16,r16
 6aaf470:	2105883a 	add	r2,r4,r4
 6aaf474:	1485883a 	add	r2,r2,r18
 6aaf478:	10c02017 	ldw	r3,128(r2)
 6aaf47c:	a8c01126 	beq	r21,r3,6aaf4c4 <__call_exitprocs+0xe4>
 6aaf480:	843fffc4 	addi	r16,r16,-1
 6aaf484:	85bff81e 	bne	r16,r22,6aaf468 <__call_exitprocs+0x88>
 6aaf488:	d8800217 	ldw	r2,8(sp)
 6aaf48c:	10003126 	beq	r2,zero,6aaf554 <__call_exitprocs+0x174>
 6aaf490:	dfc00c17 	ldw	ra,48(sp)
 6aaf494:	df000b17 	ldw	fp,44(sp)
 6aaf498:	ddc00a17 	ldw	r23,40(sp)
 6aaf49c:	dd800917 	ldw	r22,36(sp)
 6aaf4a0:	dd400817 	ldw	r21,32(sp)
 6aaf4a4:	dd000717 	ldw	r20,28(sp)
 6aaf4a8:	dcc00617 	ldw	r19,24(sp)
 6aaf4ac:	dc800517 	ldw	r18,20(sp)
 6aaf4b0:	dc400417 	ldw	r17,16(sp)
 6aaf4b4:	dc000317 	ldw	r16,12(sp)
 6aaf4b8:	dec00d04 	addi	sp,sp,52
 6aaf4bc:	f800283a 	ret
 6aaf4c0:	8409883a 	add	r4,r16,r16
 6aaf4c4:	88c00117 	ldw	r3,4(r17)
 6aaf4c8:	2105883a 	add	r2,r4,r4
 6aaf4cc:	1445883a 	add	r2,r2,r17
 6aaf4d0:	18ffffc4 	addi	r3,r3,-1
 6aaf4d4:	11800217 	ldw	r6,8(r2)
 6aaf4d8:	1c001526 	beq	r3,r16,6aaf530 <__call_exitprocs+0x150>
 6aaf4dc:	10000215 	stw	zero,8(r2)
 6aaf4e0:	303fe726 	beq	r6,zero,6aaf480 <__call_exitprocs+0xa0>
 6aaf4e4:	00c00044 	movi	r3,1
 6aaf4e8:	1c06983a 	sll	r3,r3,r16
 6aaf4ec:	90804017 	ldw	r2,256(r18)
 6aaf4f0:	8cc00117 	ldw	r19,4(r17)
 6aaf4f4:	1884703a 	and	r2,r3,r2
 6aaf4f8:	10001426 	beq	r2,zero,6aaf54c <__call_exitprocs+0x16c>
 6aaf4fc:	90804117 	ldw	r2,260(r18)
 6aaf500:	1884703a 	and	r2,r3,r2
 6aaf504:	10000c1e 	bne	r2,zero,6aaf538 <__call_exitprocs+0x158>
 6aaf508:	2105883a 	add	r2,r4,r4
 6aaf50c:	1485883a 	add	r2,r2,r18
 6aaf510:	11400017 	ldw	r5,0(r2)
 6aaf514:	e009883a 	mov	r4,fp
 6aaf518:	303ee83a 	callr	r6
 6aaf51c:	88800117 	ldw	r2,4(r17)
 6aaf520:	98bfc81e 	bne	r19,r2,6aaf444 <__call_exitprocs+0x64>
 6aaf524:	b8800017 	ldw	r2,0(r23)
 6aaf528:	147fd526 	beq	r2,r17,6aaf480 <__call_exitprocs+0xa0>
 6aaf52c:	003fc506 	br	6aaf444 <__call_exitprocs+0x64>
 6aaf530:	8c000115 	stw	r16,4(r17)
 6aaf534:	003fea06 	br	6aaf4e0 <__call_exitprocs+0x100>
 6aaf538:	2105883a 	add	r2,r4,r4
 6aaf53c:	1485883a 	add	r2,r2,r18
 6aaf540:	11000017 	ldw	r4,0(r2)
 6aaf544:	303ee83a 	callr	r6
 6aaf548:	003ff406 	br	6aaf51c <__call_exitprocs+0x13c>
 6aaf54c:	303ee83a 	callr	r6
 6aaf550:	003ff206 	br	6aaf51c <__call_exitprocs+0x13c>
 6aaf554:	88800117 	ldw	r2,4(r17)
 6aaf558:	1000081e 	bne	r2,zero,6aaf57c <__call_exitprocs+0x19c>
 6aaf55c:	89000017 	ldw	r4,0(r17)
 6aaf560:	20000726 	beq	r4,zero,6aaf580 <__call_exitprocs+0x1a0>
 6aaf564:	b9000015 	stw	r4,0(r23)
 6aaf568:	8809883a 	mov	r4,r17
 6aaf56c:	00000000 	call	0 <__alt_mem_sdram_controller>
 6aaf570:	bc400017 	ldw	r17,0(r23)
 6aaf574:	883fb71e 	bne	r17,zero,6aaf454 <__call_exitprocs+0x74>
 6aaf578:	003fc506 	br	6aaf490 <__call_exitprocs+0xb0>
 6aaf57c:	89000017 	ldw	r4,0(r17)
 6aaf580:	882f883a 	mov	r23,r17
 6aaf584:	2023883a 	mov	r17,r4
 6aaf588:	883fb21e 	bne	r17,zero,6aaf454 <__call_exitprocs+0x74>
 6aaf58c:	003fc006 	br	6aaf490 <__call_exitprocs+0xb0>

06aaf590 <_close_r>:
 6aaf590:	defffd04 	addi	sp,sp,-12
 6aaf594:	dc000015 	stw	r16,0(sp)
 6aaf598:	0401ab34 	movhi	r16,1708
 6aaf59c:	84308504 	addi	r16,r16,-15852
 6aaf5a0:	dc400115 	stw	r17,4(sp)
 6aaf5a4:	80000015 	stw	zero,0(r16)
 6aaf5a8:	2023883a 	mov	r17,r4
 6aaf5ac:	2809883a 	mov	r4,r5
 6aaf5b0:	dfc00215 	stw	ra,8(sp)
 6aaf5b4:	6ab53fc0 	call	6ab53fc <close>
 6aaf5b8:	1007883a 	mov	r3,r2
 6aaf5bc:	00bfffc4 	movi	r2,-1
 6aaf5c0:	18800626 	beq	r3,r2,6aaf5dc <_close_r+0x4c>
 6aaf5c4:	1805883a 	mov	r2,r3
 6aaf5c8:	dfc00217 	ldw	ra,8(sp)
 6aaf5cc:	dc400117 	ldw	r17,4(sp)
 6aaf5d0:	dc000017 	ldw	r16,0(sp)
 6aaf5d4:	dec00304 	addi	sp,sp,12
 6aaf5d8:	f800283a 	ret
 6aaf5dc:	80800017 	ldw	r2,0(r16)
 6aaf5e0:	103ff826 	beq	r2,zero,6aaf5c4 <_close_r+0x34>
 6aaf5e4:	88800015 	stw	r2,0(r17)
 6aaf5e8:	1805883a 	mov	r2,r3
 6aaf5ec:	dfc00217 	ldw	ra,8(sp)
 6aaf5f0:	dc400117 	ldw	r17,4(sp)
 6aaf5f4:	dc000017 	ldw	r16,0(sp)
 6aaf5f8:	dec00304 	addi	sp,sp,12
 6aaf5fc:	f800283a 	ret

06aaf600 <quorem>:
 6aaf600:	28c00417 	ldw	r3,16(r5)
 6aaf604:	20800417 	ldw	r2,16(r4)
 6aaf608:	defff604 	addi	sp,sp,-40
 6aaf60c:	ddc00715 	stw	r23,28(sp)
 6aaf610:	dd400515 	stw	r21,20(sp)
 6aaf614:	dfc00915 	stw	ra,36(sp)
 6aaf618:	df000815 	stw	fp,32(sp)
 6aaf61c:	dd800615 	stw	r22,24(sp)
 6aaf620:	dd000415 	stw	r20,16(sp)
 6aaf624:	dcc00315 	stw	r19,12(sp)
 6aaf628:	dc800215 	stw	r18,8(sp)
 6aaf62c:	dc400115 	stw	r17,4(sp)
 6aaf630:	dc000015 	stw	r16,0(sp)
 6aaf634:	202f883a 	mov	r23,r4
 6aaf638:	282b883a 	mov	r21,r5
 6aaf63c:	10c07416 	blt	r2,r3,6aaf810 <quorem+0x210>
 6aaf640:	1c7fffc4 	addi	r17,r3,-1
 6aaf644:	8c45883a 	add	r2,r17,r17
 6aaf648:	1085883a 	add	r2,r2,r2
 6aaf64c:	2c000504 	addi	r16,r5,20
 6aaf650:	24c00504 	addi	r19,r4,20
 6aaf654:	14ed883a 	add	r22,r2,r19
 6aaf658:	80a5883a 	add	r18,r16,r2
 6aaf65c:	b7000017 	ldw	fp,0(r22)
 6aaf660:	91400017 	ldw	r5,0(r18)
 6aaf664:	e009883a 	mov	r4,fp
 6aaf668:	29400044 	addi	r5,r5,1
 6aaf66c:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6aaf670:	1029883a 	mov	r20,r2
 6aaf674:	10003c1e 	bne	r2,zero,6aaf768 <quorem+0x168>
 6aaf678:	a80b883a 	mov	r5,r21
 6aaf67c:	b809883a 	mov	r4,r23
 6aaf680:	6ab18740 	call	6ab1874 <__mcmp>
 6aaf684:	10002b16 	blt	r2,zero,6aaf734 <quorem+0x134>
 6aaf688:	a5000044 	addi	r20,r20,1
 6aaf68c:	980f883a 	mov	r7,r19
 6aaf690:	0011883a 	mov	r8,zero
 6aaf694:	0009883a 	mov	r4,zero
 6aaf698:	81400017 	ldw	r5,0(r16)
 6aaf69c:	38c00017 	ldw	r3,0(r7)
 6aaf6a0:	84000104 	addi	r16,r16,4
 6aaf6a4:	28bfffcc 	andi	r2,r5,65535
 6aaf6a8:	2085883a 	add	r2,r4,r2
 6aaf6ac:	11bfffcc 	andi	r6,r2,65535
 6aaf6b0:	193fffcc 	andi	r4,r3,65535
 6aaf6b4:	1004d43a 	srli	r2,r2,16
 6aaf6b8:	280ad43a 	srli	r5,r5,16
 6aaf6bc:	2189c83a 	sub	r4,r4,r6
 6aaf6c0:	2209883a 	add	r4,r4,r8
 6aaf6c4:	1806d43a 	srli	r3,r3,16
 6aaf6c8:	288b883a 	add	r5,r5,r2
 6aaf6cc:	200dd43a 	srai	r6,r4,16
 6aaf6d0:	28bfffcc 	andi	r2,r5,65535
 6aaf6d4:	1887c83a 	sub	r3,r3,r2
 6aaf6d8:	1987883a 	add	r3,r3,r6
 6aaf6dc:	3900000d 	sth	r4,0(r7)
 6aaf6e0:	38c0008d 	sth	r3,2(r7)
 6aaf6e4:	2808d43a 	srli	r4,r5,16
 6aaf6e8:	39c00104 	addi	r7,r7,4
 6aaf6ec:	1811d43a 	srai	r8,r3,16
 6aaf6f0:	943fe92e 	bgeu	r18,r16,6aaf698 <quorem+0x98>
 6aaf6f4:	8c45883a 	add	r2,r17,r17
 6aaf6f8:	1085883a 	add	r2,r2,r2
 6aaf6fc:	9885883a 	add	r2,r19,r2
 6aaf700:	10c00017 	ldw	r3,0(r2)
 6aaf704:	18000b1e 	bne	r3,zero,6aaf734 <quorem+0x134>
 6aaf708:	113fff04 	addi	r4,r2,-4
 6aaf70c:	9900082e 	bgeu	r19,r4,6aaf730 <quorem+0x130>
 6aaf710:	10bfff17 	ldw	r2,-4(r2)
 6aaf714:	10000326 	beq	r2,zero,6aaf724 <quorem+0x124>
 6aaf718:	00000506 	br	6aaf730 <quorem+0x130>
 6aaf71c:	20800017 	ldw	r2,0(r4)
 6aaf720:	1000031e 	bne	r2,zero,6aaf730 <quorem+0x130>
 6aaf724:	213fff04 	addi	r4,r4,-4
 6aaf728:	8c7fffc4 	addi	r17,r17,-1
 6aaf72c:	993ffb36 	bltu	r19,r4,6aaf71c <quorem+0x11c>
 6aaf730:	bc400415 	stw	r17,16(r23)
 6aaf734:	a005883a 	mov	r2,r20
 6aaf738:	dfc00917 	ldw	ra,36(sp)
 6aaf73c:	df000817 	ldw	fp,32(sp)
 6aaf740:	ddc00717 	ldw	r23,28(sp)
 6aaf744:	dd800617 	ldw	r22,24(sp)
 6aaf748:	dd400517 	ldw	r21,20(sp)
 6aaf74c:	dd000417 	ldw	r20,16(sp)
 6aaf750:	dcc00317 	ldw	r19,12(sp)
 6aaf754:	dc800217 	ldw	r18,8(sp)
 6aaf758:	dc400117 	ldw	r17,4(sp)
 6aaf75c:	dc000017 	ldw	r16,0(sp)
 6aaf760:	dec00a04 	addi	sp,sp,40
 6aaf764:	f800283a 	ret
 6aaf768:	980f883a 	mov	r7,r19
 6aaf76c:	8011883a 	mov	r8,r16
 6aaf770:	0013883a 	mov	r9,zero
 6aaf774:	000d883a 	mov	r6,zero
 6aaf778:	40c00017 	ldw	r3,0(r8)
 6aaf77c:	39000017 	ldw	r4,0(r7)
 6aaf780:	42000104 	addi	r8,r8,4
 6aaf784:	18bfffcc 	andi	r2,r3,65535
 6aaf788:	a085383a 	mul	r2,r20,r2
 6aaf78c:	1806d43a 	srli	r3,r3,16
 6aaf790:	217fffcc 	andi	r5,r4,65535
 6aaf794:	3085883a 	add	r2,r6,r2
 6aaf798:	11bfffcc 	andi	r6,r2,65535
 6aaf79c:	a0c7383a 	mul	r3,r20,r3
 6aaf7a0:	1004d43a 	srli	r2,r2,16
 6aaf7a4:	298bc83a 	sub	r5,r5,r6
 6aaf7a8:	2a4b883a 	add	r5,r5,r9
 6aaf7ac:	2008d43a 	srli	r4,r4,16
 6aaf7b0:	1887883a 	add	r3,r3,r2
 6aaf7b4:	280dd43a 	srai	r6,r5,16
 6aaf7b8:	18bfffcc 	andi	r2,r3,65535
 6aaf7bc:	2089c83a 	sub	r4,r4,r2
 6aaf7c0:	2189883a 	add	r4,r4,r6
 6aaf7c4:	3900008d 	sth	r4,2(r7)
 6aaf7c8:	3940000d 	sth	r5,0(r7)
 6aaf7cc:	180cd43a 	srli	r6,r3,16
 6aaf7d0:	39c00104 	addi	r7,r7,4
 6aaf7d4:	2013d43a 	srai	r9,r4,16
 6aaf7d8:	923fe72e 	bgeu	r18,r8,6aaf778 <quorem+0x178>
 6aaf7dc:	e03fa61e 	bne	fp,zero,6aaf678 <quorem+0x78>
 6aaf7e0:	b0ffff04 	addi	r3,r22,-4
 6aaf7e4:	98c0082e 	bgeu	r19,r3,6aaf808 <quorem+0x208>
 6aaf7e8:	b0bfff17 	ldw	r2,-4(r22)
 6aaf7ec:	10000326 	beq	r2,zero,6aaf7fc <quorem+0x1fc>
 6aaf7f0:	00000506 	br	6aaf808 <quorem+0x208>
 6aaf7f4:	18800017 	ldw	r2,0(r3)
 6aaf7f8:	1000031e 	bne	r2,zero,6aaf808 <quorem+0x208>
 6aaf7fc:	18ffff04 	addi	r3,r3,-4
 6aaf800:	8c7fffc4 	addi	r17,r17,-1
 6aaf804:	98fffb36 	bltu	r19,r3,6aaf7f4 <quorem+0x1f4>
 6aaf808:	bc400415 	stw	r17,16(r23)
 6aaf80c:	003f9a06 	br	6aaf678 <quorem+0x78>
 6aaf810:	0005883a 	mov	r2,zero
 6aaf814:	003fc806 	br	6aaf738 <quorem+0x138>

06aaf818 <_dtoa_r>:
 6aaf818:	22001017 	ldw	r8,64(r4)
 6aaf81c:	deffda04 	addi	sp,sp,-152
 6aaf820:	dd402115 	stw	r21,132(sp)
 6aaf824:	dd002015 	stw	r20,128(sp)
 6aaf828:	dc801e15 	stw	r18,120(sp)
 6aaf82c:	dc401d15 	stw	r17,116(sp)
 6aaf830:	dfc02515 	stw	ra,148(sp)
 6aaf834:	df002415 	stw	fp,144(sp)
 6aaf838:	ddc02315 	stw	r23,140(sp)
 6aaf83c:	dd802215 	stw	r22,136(sp)
 6aaf840:	dcc01f15 	stw	r19,124(sp)
 6aaf844:	dc001c15 	stw	r16,112(sp)
 6aaf848:	d9001615 	stw	r4,88(sp)
 6aaf84c:	3023883a 	mov	r17,r6
 6aaf850:	2829883a 	mov	r20,r5
 6aaf854:	d9c01715 	stw	r7,92(sp)
 6aaf858:	dc802817 	ldw	r18,160(sp)
 6aaf85c:	302b883a 	mov	r21,r6
 6aaf860:	40000a26 	beq	r8,zero,6aaf88c <_dtoa_r+0x74>
 6aaf864:	20801117 	ldw	r2,68(r4)
 6aaf868:	400b883a 	mov	r5,r8
 6aaf86c:	40800115 	stw	r2,4(r8)
 6aaf870:	20c01117 	ldw	r3,68(r4)
 6aaf874:	00800044 	movi	r2,1
 6aaf878:	10c4983a 	sll	r2,r2,r3
 6aaf87c:	40800215 	stw	r2,8(r8)
 6aaf880:	6ab17180 	call	6ab1718 <_Bfree>
 6aaf884:	d8c01617 	ldw	r3,88(sp)
 6aaf888:	18001015 	stw	zero,64(r3)
 6aaf88c:	8800a316 	blt	r17,zero,6aafb1c <_dtoa_r+0x304>
 6aaf890:	90000015 	stw	zero,0(r18)
 6aaf894:	a8dffc2c 	andhi	r3,r21,32752
 6aaf898:	009ffc34 	movhi	r2,32752
 6aaf89c:	18809126 	beq	r3,r2,6aafae4 <_dtoa_r+0x2cc>
 6aaf8a0:	000d883a 	mov	r6,zero
 6aaf8a4:	000f883a 	mov	r7,zero
 6aaf8a8:	a009883a 	mov	r4,r20
 6aaf8ac:	a80b883a 	mov	r5,r21
 6aaf8b0:	dd001215 	stw	r20,72(sp)
 6aaf8b4:	dd401315 	stw	r21,76(sp)
 6aaf8b8:	6ab47000 	call	6ab4700 <__nedf2>
 6aaf8bc:	1000171e 	bne	r2,zero,6aaf91c <_dtoa_r+0x104>
 6aaf8c0:	d9802717 	ldw	r6,156(sp)
 6aaf8c4:	00800044 	movi	r2,1
 6aaf8c8:	30800015 	stw	r2,0(r6)
 6aaf8cc:	d8802917 	ldw	r2,164(sp)
 6aaf8d0:	10029b26 	beq	r2,zero,6ab0340 <_dtoa_r+0xb28>
 6aaf8d4:	d9002917 	ldw	r4,164(sp)
 6aaf8d8:	0081ab34 	movhi	r2,1708
 6aaf8dc:	10a26444 	addi	r2,r2,-30319
 6aaf8e0:	10ffffc4 	addi	r3,r2,-1
 6aaf8e4:	20800015 	stw	r2,0(r4)
 6aaf8e8:	1805883a 	mov	r2,r3
 6aaf8ec:	dfc02517 	ldw	ra,148(sp)
 6aaf8f0:	df002417 	ldw	fp,144(sp)
 6aaf8f4:	ddc02317 	ldw	r23,140(sp)
 6aaf8f8:	dd802217 	ldw	r22,136(sp)
 6aaf8fc:	dd402117 	ldw	r21,132(sp)
 6aaf900:	dd002017 	ldw	r20,128(sp)
 6aaf904:	dcc01f17 	ldw	r19,124(sp)
 6aaf908:	dc801e17 	ldw	r18,120(sp)
 6aaf90c:	dc401d17 	ldw	r17,116(sp)
 6aaf910:	dc001c17 	ldw	r16,112(sp)
 6aaf914:	dec02604 	addi	sp,sp,152
 6aaf918:	f800283a 	ret
 6aaf91c:	d9001617 	ldw	r4,88(sp)
 6aaf920:	d9401217 	ldw	r5,72(sp)
 6aaf924:	d8800104 	addi	r2,sp,4
 6aaf928:	a80d883a 	mov	r6,r21
 6aaf92c:	d9c00204 	addi	r7,sp,8
 6aaf930:	d8800015 	stw	r2,0(sp)
 6aaf934:	6ab1d540 	call	6ab1d54 <__d2b>
 6aaf938:	d8800715 	stw	r2,28(sp)
 6aaf93c:	a804d53a 	srli	r2,r21,20
 6aaf940:	1101ffcc 	andi	r4,r2,2047
 6aaf944:	20008626 	beq	r4,zero,6aafb60 <_dtoa_r+0x348>
 6aaf948:	d8c01217 	ldw	r3,72(sp)
 6aaf94c:	00800434 	movhi	r2,16
 6aaf950:	10bfffc4 	addi	r2,r2,-1
 6aaf954:	ddc00117 	ldw	r23,4(sp)
 6aaf958:	a884703a 	and	r2,r21,r2
 6aaf95c:	1811883a 	mov	r8,r3
 6aaf960:	124ffc34 	orhi	r9,r2,16368
 6aaf964:	25bf0044 	addi	r22,r4,-1023
 6aaf968:	d8000815 	stw	zero,32(sp)
 6aaf96c:	0005883a 	mov	r2,zero
 6aaf970:	00cffe34 	movhi	r3,16376
 6aaf974:	480b883a 	mov	r5,r9
 6aaf978:	4009883a 	mov	r4,r8
 6aaf97c:	180f883a 	mov	r7,r3
 6aaf980:	100d883a 	mov	r6,r2
 6aaf984:	6ab3f680 	call	6ab3f68 <__subdf3>
 6aaf988:	0218dbf4 	movhi	r8,25455
 6aaf98c:	4210d844 	addi	r8,r8,17249
 6aaf990:	024ff4f4 	movhi	r9,16339
 6aaf994:	4a61e9c4 	addi	r9,r9,-30809
 6aaf998:	480f883a 	mov	r7,r9
 6aaf99c:	400d883a 	mov	r6,r8
 6aaf9a0:	180b883a 	mov	r5,r3
 6aaf9a4:	1009883a 	mov	r4,r2
 6aaf9a8:	6ab405c0 	call	6ab405c <__muldf3>
 6aaf9ac:	0222d874 	movhi	r8,35681
 6aaf9b0:	42322cc4 	addi	r8,r8,-14157
 6aaf9b4:	024ff1f4 	movhi	r9,16327
 6aaf9b8:	4a628a04 	addi	r9,r9,-30168
 6aaf9bc:	480f883a 	mov	r7,r9
 6aaf9c0:	400d883a 	mov	r6,r8
 6aaf9c4:	180b883a 	mov	r5,r3
 6aaf9c8:	1009883a 	mov	r4,r2
 6aaf9cc:	6ab3fe80 	call	6ab3fe8 <__adddf3>
 6aaf9d0:	b009883a 	mov	r4,r22
 6aaf9d4:	1021883a 	mov	r16,r2
 6aaf9d8:	1823883a 	mov	r17,r3
 6aaf9dc:	6ab49200 	call	6ab4920 <__floatsidf>
 6aaf9e0:	021427f4 	movhi	r8,20639
 6aaf9e4:	421e7ec4 	addi	r8,r8,31227
 6aaf9e8:	024ff4f4 	movhi	r9,16339
 6aaf9ec:	4a5104c4 	addi	r9,r9,17427
 6aaf9f0:	480f883a 	mov	r7,r9
 6aaf9f4:	400d883a 	mov	r6,r8
 6aaf9f8:	180b883a 	mov	r5,r3
 6aaf9fc:	1009883a 	mov	r4,r2
 6aafa00:	6ab405c0 	call	6ab405c <__muldf3>
 6aafa04:	180f883a 	mov	r7,r3
 6aafa08:	880b883a 	mov	r5,r17
 6aafa0c:	100d883a 	mov	r6,r2
 6aafa10:	8009883a 	mov	r4,r16
 6aafa14:	6ab3fe80 	call	6ab3fe8 <__adddf3>
 6aafa18:	1009883a 	mov	r4,r2
 6aafa1c:	180b883a 	mov	r5,r3
 6aafa20:	1021883a 	mov	r16,r2
 6aafa24:	1823883a 	mov	r17,r3
 6aafa28:	6ab4a180 	call	6ab4a18 <__fixdfsi>
 6aafa2c:	000d883a 	mov	r6,zero
 6aafa30:	000f883a 	mov	r7,zero
 6aafa34:	8009883a 	mov	r4,r16
 6aafa38:	880b883a 	mov	r5,r17
 6aafa3c:	d8800d15 	stw	r2,52(sp)
 6aafa40:	6ab48980 	call	6ab4898 <__ltdf2>
 6aafa44:	10031716 	blt	r2,zero,6ab06a4 <_dtoa_r+0xe8c>
 6aafa48:	d8c00d17 	ldw	r3,52(sp)
 6aafa4c:	00800584 	movi	r2,22
 6aafa50:	10c1482e 	bgeu	r2,r3,6aaff74 <_dtoa_r+0x75c>
 6aafa54:	01000044 	movi	r4,1
 6aafa58:	d9000c15 	stw	r4,48(sp)
 6aafa5c:	bd85c83a 	sub	r2,r23,r22
 6aafa60:	11bfffc4 	addi	r6,r2,-1
 6aafa64:	30030b16 	blt	r6,zero,6ab0694 <_dtoa_r+0xe7c>
 6aafa68:	d9800a15 	stw	r6,40(sp)
 6aafa6c:	d8001115 	stw	zero,68(sp)
 6aafa70:	d8c00d17 	ldw	r3,52(sp)
 6aafa74:	1802ff16 	blt	r3,zero,6ab0674 <_dtoa_r+0xe5c>
 6aafa78:	d9000a17 	ldw	r4,40(sp)
 6aafa7c:	d8c00915 	stw	r3,36(sp)
 6aafa80:	d8001015 	stw	zero,64(sp)
 6aafa84:	20c9883a 	add	r4,r4,r3
 6aafa88:	d9000a15 	stw	r4,40(sp)
 6aafa8c:	d9001717 	ldw	r4,92(sp)
 6aafa90:	00800244 	movi	r2,9
 6aafa94:	11004636 	bltu	r2,r4,6aafbb0 <_dtoa_r+0x398>
 6aafa98:	00800144 	movi	r2,5
 6aafa9c:	11020416 	blt	r2,r4,6ab02b0 <_dtoa_r+0xa98>
 6aafaa0:	04400044 	movi	r17,1
 6aafaa4:	d8c01717 	ldw	r3,92(sp)
 6aafaa8:	00800144 	movi	r2,5
 6aafaac:	10c1ed36 	bltu	r2,r3,6ab0264 <_dtoa_r+0xa4c>
 6aafab0:	18c5883a 	add	r2,r3,r3
 6aafab4:	1085883a 	add	r2,r2,r2
 6aafab8:	00c1aaf4 	movhi	r3,1707
 6aafabc:	18feb304 	addi	r3,r3,-1332
 6aafac0:	10c5883a 	add	r2,r2,r3
 6aafac4:	11000017 	ldw	r4,0(r2)
 6aafac8:	2000683a 	jmp	r4
 6aafacc:	06aafbb8 	rdprs	gp,zero,-21522
 6aafad0:	06aafbb8 	rdprs	gp,zero,-21522
 6aafad4:	06ab05b8 	rdprs	gp,zero,-21482
 6aafad8:	06ab0590 	cmplti	gp,zero,-21482
 6aafadc:	06ab05d4 	movui	gp,44055
 6aafae0:	06ab05e0 	cmpeqi	gp,zero,-21481
 6aafae4:	d9002717 	ldw	r4,156(sp)
 6aafae8:	0089c3c4 	movi	r2,9999
 6aafaec:	20800015 	stw	r2,0(r4)
 6aafaf0:	a0001026 	beq	r20,zero,6aafb34 <_dtoa_r+0x31c>
 6aafaf4:	00c1ab34 	movhi	r3,1708
 6aafaf8:	18e27004 	addi	r3,r3,-30272
 6aafafc:	d9802917 	ldw	r6,164(sp)
 6aafb00:	303f7926 	beq	r6,zero,6aaf8e8 <_dtoa_r+0xd0>
 6aafb04:	188000c7 	ldb	r2,3(r3)
 6aafb08:	190000c4 	addi	r4,r3,3
 6aafb0c:	1000101e 	bne	r2,zero,6aafb50 <_dtoa_r+0x338>
 6aafb10:	d8802917 	ldw	r2,164(sp)
 6aafb14:	11000015 	stw	r4,0(r2)
 6aafb18:	003f7306 	br	6aaf8e8 <_dtoa_r+0xd0>
 6aafb1c:	00a00034 	movhi	r2,32768
 6aafb20:	10bfffc4 	addi	r2,r2,-1
 6aafb24:	00c00044 	movi	r3,1
 6aafb28:	88aa703a 	and	r21,r17,r2
 6aafb2c:	90c00015 	stw	r3,0(r18)
 6aafb30:	003f5806 	br	6aaf894 <_dtoa_r+0x7c>
 6aafb34:	00800434 	movhi	r2,16
 6aafb38:	10bfffc4 	addi	r2,r2,-1
 6aafb3c:	a884703a 	and	r2,r21,r2
 6aafb40:	103fec1e 	bne	r2,zero,6aafaf4 <_dtoa_r+0x2dc>
 6aafb44:	00c1ab34 	movhi	r3,1708
 6aafb48:	18e26d04 	addi	r3,r3,-30284
 6aafb4c:	003feb06 	br	6aafafc <_dtoa_r+0x2e4>
 6aafb50:	d8802917 	ldw	r2,164(sp)
 6aafb54:	19000204 	addi	r4,r3,8
 6aafb58:	11000015 	stw	r4,0(r2)
 6aafb5c:	003f6206 	br	6aaf8e8 <_dtoa_r+0xd0>
 6aafb60:	ddc00117 	ldw	r23,4(sp)
 6aafb64:	d8800217 	ldw	r2,8(sp)
 6aafb68:	01000804 	movi	r4,32
 6aafb6c:	b8c10c84 	addi	r3,r23,1074
 6aafb70:	18a3883a 	add	r17,r3,r2
 6aafb74:	2441b80e 	bge	r4,r17,6ab0258 <_dtoa_r+0xa40>
 6aafb78:	00c01004 	movi	r3,64
 6aafb7c:	1c47c83a 	sub	r3,r3,r17
 6aafb80:	88bff804 	addi	r2,r17,-32
 6aafb84:	a8c6983a 	sll	r3,r21,r3
 6aafb88:	a084d83a 	srl	r2,r20,r2
 6aafb8c:	1888b03a 	or	r4,r3,r2
 6aafb90:	6ab4af00 	call	6ab4af0 <__floatunsidf>
 6aafb94:	1011883a 	mov	r8,r2
 6aafb98:	00bf8434 	movhi	r2,65040
 6aafb9c:	01000044 	movi	r4,1
 6aafba0:	10d3883a 	add	r9,r2,r3
 6aafba4:	8dbef344 	addi	r22,r17,-1075
 6aafba8:	d9000815 	stw	r4,32(sp)
 6aafbac:	003f6f06 	br	6aaf96c <_dtoa_r+0x154>
 6aafbb0:	d8001715 	stw	zero,92(sp)
 6aafbb4:	04400044 	movi	r17,1
 6aafbb8:	00bfffc4 	movi	r2,-1
 6aafbbc:	00c00044 	movi	r3,1
 6aafbc0:	d8800e15 	stw	r2,56(sp)
 6aafbc4:	d8002615 	stw	zero,152(sp)
 6aafbc8:	d8800f15 	stw	r2,60(sp)
 6aafbcc:	d8c00b15 	stw	r3,44(sp)
 6aafbd0:	1021883a 	mov	r16,r2
 6aafbd4:	d8801617 	ldw	r2,88(sp)
 6aafbd8:	10001115 	stw	zero,68(r2)
 6aafbdc:	d8801617 	ldw	r2,88(sp)
 6aafbe0:	11401117 	ldw	r5,68(r2)
 6aafbe4:	1009883a 	mov	r4,r2
 6aafbe8:	6ab1c980 	call	6ab1c98 <_Balloc>
 6aafbec:	d8c01617 	ldw	r3,88(sp)
 6aafbf0:	d8800515 	stw	r2,20(sp)
 6aafbf4:	18801015 	stw	r2,64(r3)
 6aafbf8:	00800384 	movi	r2,14
 6aafbfc:	14006836 	bltu	r2,r16,6aafda0 <_dtoa_r+0x588>
 6aafc00:	8805003a 	cmpeq	r2,r17,zero
 6aafc04:	1000661e 	bne	r2,zero,6aafda0 <_dtoa_r+0x588>
 6aafc08:	d9000d17 	ldw	r4,52(sp)
 6aafc0c:	0102300e 	bge	zero,r4,6ab04d0 <_dtoa_r+0xcb8>
 6aafc10:	208003cc 	andi	r2,r4,15
 6aafc14:	100490fa 	slli	r2,r2,3
 6aafc18:	2025d13a 	srai	r18,r4,4
 6aafc1c:	00c1ab34 	movhi	r3,1708
 6aafc20:	18e28104 	addi	r3,r3,-30204
 6aafc24:	10c5883a 	add	r2,r2,r3
 6aafc28:	90c0040c 	andi	r3,r18,16
 6aafc2c:	14000017 	ldw	r16,0(r2)
 6aafc30:	14400117 	ldw	r17,4(r2)
 6aafc34:	18036a1e 	bne	r3,zero,6ab09e0 <_dtoa_r+0x11c8>
 6aafc38:	05800084 	movi	r22,2
 6aafc3c:	90001026 	beq	r18,zero,6aafc80 <_dtoa_r+0x468>
 6aafc40:	04c1ab34 	movhi	r19,1708
 6aafc44:	9ce2b304 	addi	r19,r19,-30004
 6aafc48:	9080004c 	andi	r2,r18,1
 6aafc4c:	1005003a 	cmpeq	r2,r2,zero
 6aafc50:	1000081e 	bne	r2,zero,6aafc74 <_dtoa_r+0x45c>
 6aafc54:	99800017 	ldw	r6,0(r19)
 6aafc58:	99c00117 	ldw	r7,4(r19)
 6aafc5c:	880b883a 	mov	r5,r17
 6aafc60:	8009883a 	mov	r4,r16
 6aafc64:	6ab405c0 	call	6ab405c <__muldf3>
 6aafc68:	1021883a 	mov	r16,r2
 6aafc6c:	b5800044 	addi	r22,r22,1
 6aafc70:	1823883a 	mov	r17,r3
 6aafc74:	9025d07a 	srai	r18,r18,1
 6aafc78:	9cc00204 	addi	r19,r19,8
 6aafc7c:	903ff21e 	bne	r18,zero,6aafc48 <_dtoa_r+0x430>
 6aafc80:	a80b883a 	mov	r5,r21
 6aafc84:	a009883a 	mov	r4,r20
 6aafc88:	880f883a 	mov	r7,r17
 6aafc8c:	800d883a 	mov	r6,r16
 6aafc90:	6ab44200 	call	6ab4420 <__divdf3>
 6aafc94:	1029883a 	mov	r20,r2
 6aafc98:	182b883a 	mov	r21,r3
 6aafc9c:	d8c00c17 	ldw	r3,48(sp)
 6aafca0:	1805003a 	cmpeq	r2,r3,zero
 6aafca4:	1000081e 	bne	r2,zero,6aafcc8 <_dtoa_r+0x4b0>
 6aafca8:	0005883a 	mov	r2,zero
 6aafcac:	00cffc34 	movhi	r3,16368
 6aafcb0:	180f883a 	mov	r7,r3
 6aafcb4:	a009883a 	mov	r4,r20
 6aafcb8:	a80b883a 	mov	r5,r21
 6aafcbc:	100d883a 	mov	r6,r2
 6aafcc0:	6ab48980 	call	6ab4898 <__ltdf2>
 6aafcc4:	1003fe16 	blt	r2,zero,6ab0cc0 <_dtoa_r+0x14a8>
 6aafcc8:	b009883a 	mov	r4,r22
 6aafccc:	6ab49200 	call	6ab4920 <__floatsidf>
 6aafcd0:	180b883a 	mov	r5,r3
 6aafcd4:	1009883a 	mov	r4,r2
 6aafcd8:	a00d883a 	mov	r6,r20
 6aafcdc:	a80f883a 	mov	r7,r21
 6aafce0:	6ab405c0 	call	6ab405c <__muldf3>
 6aafce4:	0011883a 	mov	r8,zero
 6aafce8:	02500734 	movhi	r9,16412
 6aafcec:	1009883a 	mov	r4,r2
 6aafcf0:	180b883a 	mov	r5,r3
 6aafcf4:	480f883a 	mov	r7,r9
 6aafcf8:	400d883a 	mov	r6,r8
 6aafcfc:	6ab3fe80 	call	6ab3fe8 <__adddf3>
 6aafd00:	d9000f17 	ldw	r4,60(sp)
 6aafd04:	102d883a 	mov	r22,r2
 6aafd08:	00bf3034 	movhi	r2,64704
 6aafd0c:	18b9883a 	add	fp,r3,r2
 6aafd10:	e02f883a 	mov	r23,fp
 6aafd14:	20028f1e 	bne	r4,zero,6ab0754 <_dtoa_r+0xf3c>
 6aafd18:	0005883a 	mov	r2,zero
 6aafd1c:	00d00534 	movhi	r3,16404
 6aafd20:	a009883a 	mov	r4,r20
 6aafd24:	a80b883a 	mov	r5,r21
 6aafd28:	180f883a 	mov	r7,r3
 6aafd2c:	100d883a 	mov	r6,r2
 6aafd30:	6ab3f680 	call	6ab3f68 <__subdf3>
 6aafd34:	1009883a 	mov	r4,r2
 6aafd38:	e00f883a 	mov	r7,fp
 6aafd3c:	180b883a 	mov	r5,r3
 6aafd40:	b00d883a 	mov	r6,r22
 6aafd44:	1025883a 	mov	r18,r2
 6aafd48:	1827883a 	mov	r19,r3
 6aafd4c:	6ab47880 	call	6ab4788 <__gtdf2>
 6aafd50:	00834f16 	blt	zero,r2,6ab0a90 <_dtoa_r+0x1278>
 6aafd54:	e0e0003c 	xorhi	r3,fp,32768
 6aafd58:	9009883a 	mov	r4,r18
 6aafd5c:	980b883a 	mov	r5,r19
 6aafd60:	180f883a 	mov	r7,r3
 6aafd64:	b00d883a 	mov	r6,r22
 6aafd68:	6ab48980 	call	6ab4898 <__ltdf2>
 6aafd6c:	1000080e 	bge	r2,zero,6aafd90 <_dtoa_r+0x578>
 6aafd70:	0027883a 	mov	r19,zero
 6aafd74:	0025883a 	mov	r18,zero
 6aafd78:	d8802617 	ldw	r2,152(sp)
 6aafd7c:	df000517 	ldw	fp,20(sp)
 6aafd80:	d8000615 	stw	zero,24(sp)
 6aafd84:	0084303a 	nor	r2,zero,r2
 6aafd88:	d8800d15 	stw	r2,52(sp)
 6aafd8c:	00019b06 	br	6ab03fc <_dtoa_r+0xbe4>
 6aafd90:	d9801217 	ldw	r6,72(sp)
 6aafd94:	d8801317 	ldw	r2,76(sp)
 6aafd98:	3029883a 	mov	r20,r6
 6aafd9c:	102b883a 	mov	r21,r2
 6aafda0:	d8c00217 	ldw	r3,8(sp)
 6aafda4:	18008516 	blt	r3,zero,6aaffbc <_dtoa_r+0x7a4>
 6aafda8:	d9000d17 	ldw	r4,52(sp)
 6aafdac:	00800384 	movi	r2,14
 6aafdb0:	11008216 	blt	r2,r4,6aaffbc <_dtoa_r+0x7a4>
 6aafdb4:	200490fa 	slli	r2,r4,3
 6aafdb8:	d9802617 	ldw	r6,152(sp)
 6aafdbc:	00c1ab34 	movhi	r3,1708
 6aafdc0:	18e28104 	addi	r3,r3,-30204
 6aafdc4:	10c5883a 	add	r2,r2,r3
 6aafdc8:	14800017 	ldw	r18,0(r2)
 6aafdcc:	14c00117 	ldw	r19,4(r2)
 6aafdd0:	30031e16 	blt	r6,zero,6ab0a4c <_dtoa_r+0x1234>
 6aafdd4:	d9000517 	ldw	r4,20(sp)
 6aafdd8:	d8c00f17 	ldw	r3,60(sp)
 6aafddc:	a823883a 	mov	r17,r21
 6aafde0:	a021883a 	mov	r16,r20
 6aafde4:	192b883a 	add	r21,r3,r4
 6aafde8:	2039883a 	mov	fp,r4
 6aafdec:	00000f06 	br	6aafe2c <_dtoa_r+0x614>
 6aafdf0:	0005883a 	mov	r2,zero
 6aafdf4:	00d00934 	movhi	r3,16420
 6aafdf8:	5009883a 	mov	r4,r10
 6aafdfc:	580b883a 	mov	r5,r11
 6aafe00:	180f883a 	mov	r7,r3
 6aafe04:	100d883a 	mov	r6,r2
 6aafe08:	6ab405c0 	call	6ab405c <__muldf3>
 6aafe0c:	180b883a 	mov	r5,r3
 6aafe10:	000d883a 	mov	r6,zero
 6aafe14:	000f883a 	mov	r7,zero
 6aafe18:	1009883a 	mov	r4,r2
 6aafe1c:	1021883a 	mov	r16,r2
 6aafe20:	1823883a 	mov	r17,r3
 6aafe24:	6ab47000 	call	6ab4700 <__nedf2>
 6aafe28:	10004526 	beq	r2,zero,6aaff40 <_dtoa_r+0x728>
 6aafe2c:	900d883a 	mov	r6,r18
 6aafe30:	980f883a 	mov	r7,r19
 6aafe34:	8009883a 	mov	r4,r16
 6aafe38:	880b883a 	mov	r5,r17
 6aafe3c:	6ab44200 	call	6ab4420 <__divdf3>
 6aafe40:	180b883a 	mov	r5,r3
 6aafe44:	1009883a 	mov	r4,r2
 6aafe48:	6ab4a180 	call	6ab4a18 <__fixdfsi>
 6aafe4c:	1009883a 	mov	r4,r2
 6aafe50:	1029883a 	mov	r20,r2
 6aafe54:	6ab49200 	call	6ab4920 <__floatsidf>
 6aafe58:	180f883a 	mov	r7,r3
 6aafe5c:	9009883a 	mov	r4,r18
 6aafe60:	980b883a 	mov	r5,r19
 6aafe64:	100d883a 	mov	r6,r2
 6aafe68:	6ab405c0 	call	6ab405c <__muldf3>
 6aafe6c:	180f883a 	mov	r7,r3
 6aafe70:	880b883a 	mov	r5,r17
 6aafe74:	8009883a 	mov	r4,r16
 6aafe78:	100d883a 	mov	r6,r2
 6aafe7c:	6ab3f680 	call	6ab3f68 <__subdf3>
 6aafe80:	1015883a 	mov	r10,r2
 6aafe84:	a0800c04 	addi	r2,r20,48
 6aafe88:	e0800005 	stb	r2,0(fp)
 6aafe8c:	e7000044 	addi	fp,fp,1
 6aafe90:	1817883a 	mov	r11,r3
 6aafe94:	e57fd61e 	bne	fp,r21,6aafdf0 <_dtoa_r+0x5d8>
 6aafe98:	500d883a 	mov	r6,r10
 6aafe9c:	180f883a 	mov	r7,r3
 6aafea0:	5009883a 	mov	r4,r10
 6aafea4:	180b883a 	mov	r5,r3
 6aafea8:	6ab3fe80 	call	6ab3fe8 <__adddf3>
 6aafeac:	100d883a 	mov	r6,r2
 6aafeb0:	9009883a 	mov	r4,r18
 6aafeb4:	980b883a 	mov	r5,r19
 6aafeb8:	180f883a 	mov	r7,r3
 6aafebc:	1021883a 	mov	r16,r2
 6aafec0:	1823883a 	mov	r17,r3
 6aafec4:	6ab48980 	call	6ab4898 <__ltdf2>
 6aafec8:	10000816 	blt	r2,zero,6aafeec <_dtoa_r+0x6d4>
 6aafecc:	980b883a 	mov	r5,r19
 6aafed0:	800d883a 	mov	r6,r16
 6aafed4:	880f883a 	mov	r7,r17
 6aafed8:	9009883a 	mov	r4,r18
 6aafedc:	6ab46780 	call	6ab4678 <__eqdf2>
 6aafee0:	1000171e 	bne	r2,zero,6aaff40 <_dtoa_r+0x728>
 6aafee4:	a080004c 	andi	r2,r20,1
 6aafee8:	10001526 	beq	r2,zero,6aaff40 <_dtoa_r+0x728>
 6aafeec:	d8800d17 	ldw	r2,52(sp)
 6aafef0:	d8800415 	stw	r2,16(sp)
 6aafef4:	e009883a 	mov	r4,fp
 6aafef8:	213fffc4 	addi	r4,r4,-1
 6aafefc:	20c00007 	ldb	r3,0(r4)
 6aaff00:	00800e44 	movi	r2,57
 6aaff04:	1880081e 	bne	r3,r2,6aaff28 <_dtoa_r+0x710>
 6aaff08:	d8800517 	ldw	r2,20(sp)
 6aaff0c:	113ffa1e 	bne	r2,r4,6aafef8 <_dtoa_r+0x6e0>
 6aaff10:	d8c00417 	ldw	r3,16(sp)
 6aaff14:	d9800517 	ldw	r6,20(sp)
 6aaff18:	00800c04 	movi	r2,48
 6aaff1c:	18c00044 	addi	r3,r3,1
 6aaff20:	d8c00415 	stw	r3,16(sp)
 6aaff24:	30800005 	stb	r2,0(r6)
 6aaff28:	20800003 	ldbu	r2,0(r4)
 6aaff2c:	d8c00417 	ldw	r3,16(sp)
 6aaff30:	27000044 	addi	fp,r4,1
 6aaff34:	10800044 	addi	r2,r2,1
 6aaff38:	d8c00d15 	stw	r3,52(sp)
 6aaff3c:	20800005 	stb	r2,0(r4)
 6aaff40:	d9001617 	ldw	r4,88(sp)
 6aaff44:	d9400717 	ldw	r5,28(sp)
 6aaff48:	6ab17180 	call	6ab1718 <_Bfree>
 6aaff4c:	e0000005 	stb	zero,0(fp)
 6aaff50:	d9800d17 	ldw	r6,52(sp)
 6aaff54:	d8c02717 	ldw	r3,156(sp)
 6aaff58:	d9002917 	ldw	r4,164(sp)
 6aaff5c:	30800044 	addi	r2,r6,1
 6aaff60:	18800015 	stw	r2,0(r3)
 6aaff64:	20029c26 	beq	r4,zero,6ab09d8 <_dtoa_r+0x11c0>
 6aaff68:	d8c00517 	ldw	r3,20(sp)
 6aaff6c:	27000015 	stw	fp,0(r4)
 6aaff70:	003e5d06 	br	6aaf8e8 <_dtoa_r+0xd0>
 6aaff74:	d9800d17 	ldw	r6,52(sp)
 6aaff78:	00c1ab34 	movhi	r3,1708
 6aaff7c:	18e28104 	addi	r3,r3,-30204
 6aaff80:	d9001217 	ldw	r4,72(sp)
 6aaff84:	300490fa 	slli	r2,r6,3
 6aaff88:	d9401317 	ldw	r5,76(sp)
 6aaff8c:	10c5883a 	add	r2,r2,r3
 6aaff90:	12000017 	ldw	r8,0(r2)
 6aaff94:	12400117 	ldw	r9,4(r2)
 6aaff98:	400d883a 	mov	r6,r8
 6aaff9c:	480f883a 	mov	r7,r9
 6aaffa0:	6ab48980 	call	6ab4898 <__ltdf2>
 6aaffa4:	1000030e 	bge	r2,zero,6aaffb4 <_dtoa_r+0x79c>
 6aaffa8:	d8800d17 	ldw	r2,52(sp)
 6aaffac:	10bfffc4 	addi	r2,r2,-1
 6aaffb0:	d8800d15 	stw	r2,52(sp)
 6aaffb4:	d8000c15 	stw	zero,48(sp)
 6aaffb8:	003ea806 	br	6aafa5c <_dtoa_r+0x244>
 6aaffbc:	d9000b17 	ldw	r4,44(sp)
 6aaffc0:	202cc03a 	cmpne	r22,r4,zero
 6aaffc4:	b000c71e 	bne	r22,zero,6ab02e4 <_dtoa_r+0xacc>
 6aaffc8:	dc001117 	ldw	r16,68(sp)
 6aaffcc:	dc801017 	ldw	r18,64(sp)
 6aaffd0:	0027883a 	mov	r19,zero
 6aaffd4:	04000b0e 	bge	zero,r16,6ab0004 <_dtoa_r+0x7ec>
 6aaffd8:	d8c00a17 	ldw	r3,40(sp)
 6aaffdc:	00c0090e 	bge	zero,r3,6ab0004 <_dtoa_r+0x7ec>
 6aaffe0:	8005883a 	mov	r2,r16
 6aaffe4:	1c011316 	blt	r3,r16,6ab0434 <_dtoa_r+0xc1c>
 6aaffe8:	d9000a17 	ldw	r4,40(sp)
 6aaffec:	d9801117 	ldw	r6,68(sp)
 6aafff0:	80a1c83a 	sub	r16,r16,r2
 6aafff4:	2089c83a 	sub	r4,r4,r2
 6aafff8:	308dc83a 	sub	r6,r6,r2
 6aafffc:	d9000a15 	stw	r4,40(sp)
 6ab0000:	d9801115 	stw	r6,68(sp)
 6ab0004:	d8801017 	ldw	r2,64(sp)
 6ab0008:	0080150e 	bge	zero,r2,6ab0060 <_dtoa_r+0x848>
 6ab000c:	d8c00b17 	ldw	r3,44(sp)
 6ab0010:	1805003a 	cmpeq	r2,r3,zero
 6ab0014:	1001c91e 	bne	r2,zero,6ab073c <_dtoa_r+0xf24>
 6ab0018:	04800e0e 	bge	zero,r18,6ab0054 <_dtoa_r+0x83c>
 6ab001c:	d9001617 	ldw	r4,88(sp)
 6ab0020:	980b883a 	mov	r5,r19
 6ab0024:	900d883a 	mov	r6,r18
 6ab0028:	6ab24cc0 	call	6ab24cc <__pow5mult>
 6ab002c:	d9001617 	ldw	r4,88(sp)
 6ab0030:	d9800717 	ldw	r6,28(sp)
 6ab0034:	100b883a 	mov	r5,r2
 6ab0038:	1027883a 	mov	r19,r2
 6ab003c:	6ab21a80 	call	6ab21a8 <__multiply>
 6ab0040:	d9001617 	ldw	r4,88(sp)
 6ab0044:	d9400717 	ldw	r5,28(sp)
 6ab0048:	1023883a 	mov	r17,r2
 6ab004c:	6ab17180 	call	6ab1718 <_Bfree>
 6ab0050:	dc400715 	stw	r17,28(sp)
 6ab0054:	d9001017 	ldw	r4,64(sp)
 6ab0058:	248dc83a 	sub	r6,r4,r18
 6ab005c:	30010e1e 	bne	r6,zero,6ab0498 <_dtoa_r+0xc80>
 6ab0060:	d9001617 	ldw	r4,88(sp)
 6ab0064:	04400044 	movi	r17,1
 6ab0068:	880b883a 	mov	r5,r17
 6ab006c:	6ab23900 	call	6ab2390 <__i2b>
 6ab0070:	d9800917 	ldw	r6,36(sp)
 6ab0074:	1025883a 	mov	r18,r2
 6ab0078:	0180040e 	bge	zero,r6,6ab008c <_dtoa_r+0x874>
 6ab007c:	d9001617 	ldw	r4,88(sp)
 6ab0080:	100b883a 	mov	r5,r2
 6ab0084:	6ab24cc0 	call	6ab24cc <__pow5mult>
 6ab0088:	1025883a 	mov	r18,r2
 6ab008c:	d8801717 	ldw	r2,92(sp)
 6ab0090:	8880f30e 	bge	r17,r2,6ab0460 <_dtoa_r+0xc48>
 6ab0094:	0023883a 	mov	r17,zero
 6ab0098:	d9800917 	ldw	r6,36(sp)
 6ab009c:	30019e1e 	bne	r6,zero,6ab0718 <_dtoa_r+0xf00>
 6ab00a0:	00c00044 	movi	r3,1
 6ab00a4:	d9000a17 	ldw	r4,40(sp)
 6ab00a8:	20c5883a 	add	r2,r4,r3
 6ab00ac:	10c007cc 	andi	r3,r2,31
 6ab00b0:	1800841e 	bne	r3,zero,6ab02c4 <_dtoa_r+0xaac>
 6ab00b4:	00800704 	movi	r2,28
 6ab00b8:	d9000a17 	ldw	r4,40(sp)
 6ab00bc:	d9801117 	ldw	r6,68(sp)
 6ab00c0:	80a1883a 	add	r16,r16,r2
 6ab00c4:	2089883a 	add	r4,r4,r2
 6ab00c8:	308d883a 	add	r6,r6,r2
 6ab00cc:	d9000a15 	stw	r4,40(sp)
 6ab00d0:	d9801115 	stw	r6,68(sp)
 6ab00d4:	d8801117 	ldw	r2,68(sp)
 6ab00d8:	0080050e 	bge	zero,r2,6ab00f0 <_dtoa_r+0x8d8>
 6ab00dc:	d9400717 	ldw	r5,28(sp)
 6ab00e0:	d9001617 	ldw	r4,88(sp)
 6ab00e4:	100d883a 	mov	r6,r2
 6ab00e8:	6ab205c0 	call	6ab205c <__lshift>
 6ab00ec:	d8800715 	stw	r2,28(sp)
 6ab00f0:	d8c00a17 	ldw	r3,40(sp)
 6ab00f4:	00c0050e 	bge	zero,r3,6ab010c <_dtoa_r+0x8f4>
 6ab00f8:	d9001617 	ldw	r4,88(sp)
 6ab00fc:	900b883a 	mov	r5,r18
 6ab0100:	180d883a 	mov	r6,r3
 6ab0104:	6ab205c0 	call	6ab205c <__lshift>
 6ab0108:	1025883a 	mov	r18,r2
 6ab010c:	d9000c17 	ldw	r4,48(sp)
 6ab0110:	2005003a 	cmpeq	r2,r4,zero
 6ab0114:	10016f26 	beq	r2,zero,6ab06d4 <_dtoa_r+0xebc>
 6ab0118:	d9000f17 	ldw	r4,60(sp)
 6ab011c:	0102170e 	bge	zero,r4,6ab097c <_dtoa_r+0x1164>
 6ab0120:	d9800b17 	ldw	r6,44(sp)
 6ab0124:	3005003a 	cmpeq	r2,r6,zero
 6ab0128:	1000881e 	bne	r2,zero,6ab034c <_dtoa_r+0xb34>
 6ab012c:	0400050e 	bge	zero,r16,6ab0144 <_dtoa_r+0x92c>
 6ab0130:	d9001617 	ldw	r4,88(sp)
 6ab0134:	980b883a 	mov	r5,r19
 6ab0138:	800d883a 	mov	r6,r16
 6ab013c:	6ab205c0 	call	6ab205c <__lshift>
 6ab0140:	1027883a 	mov	r19,r2
 6ab0144:	8804c03a 	cmpne	r2,r17,zero
 6ab0148:	1002541e 	bne	r2,zero,6ab0a9c <_dtoa_r+0x1284>
 6ab014c:	980b883a 	mov	r5,r19
 6ab0150:	dd800517 	ldw	r22,20(sp)
 6ab0154:	dcc00615 	stw	r19,24(sp)
 6ab0158:	a700004c 	andi	fp,r20,1
 6ab015c:	2827883a 	mov	r19,r5
 6ab0160:	d9000717 	ldw	r4,28(sp)
 6ab0164:	900b883a 	mov	r5,r18
 6ab0168:	6aaf6000 	call	6aaf600 <quorem>
 6ab016c:	d9000717 	ldw	r4,28(sp)
 6ab0170:	d9400617 	ldw	r5,24(sp)
 6ab0174:	1023883a 	mov	r17,r2
 6ab0178:	8dc00c04 	addi	r23,r17,48
 6ab017c:	6ab18740 	call	6ab1874 <__mcmp>
 6ab0180:	d9001617 	ldw	r4,88(sp)
 6ab0184:	900b883a 	mov	r5,r18
 6ab0188:	980d883a 	mov	r6,r19
 6ab018c:	1029883a 	mov	r20,r2
 6ab0190:	6ab1ed00 	call	6ab1ed0 <__mdiff>
 6ab0194:	102b883a 	mov	r21,r2
 6ab0198:	10800317 	ldw	r2,12(r2)
 6ab019c:	1001281e 	bne	r2,zero,6ab0640 <_dtoa_r+0xe28>
 6ab01a0:	d9000717 	ldw	r4,28(sp)
 6ab01a4:	a80b883a 	mov	r5,r21
 6ab01a8:	6ab18740 	call	6ab1874 <__mcmp>
 6ab01ac:	d9001617 	ldw	r4,88(sp)
 6ab01b0:	1021883a 	mov	r16,r2
 6ab01b4:	a80b883a 	mov	r5,r21
 6ab01b8:	6ab17180 	call	6ab1718 <_Bfree>
 6ab01bc:	8000041e 	bne	r16,zero,6ab01d0 <_dtoa_r+0x9b8>
 6ab01c0:	d8801717 	ldw	r2,92(sp)
 6ab01c4:	1000021e 	bne	r2,zero,6ab01d0 <_dtoa_r+0x9b8>
 6ab01c8:	e004c03a 	cmpne	r2,fp,zero
 6ab01cc:	10011726 	beq	r2,zero,6ab062c <_dtoa_r+0xe14>
 6ab01d0:	a0010616 	blt	r20,zero,6ab05ec <_dtoa_r+0xdd4>
 6ab01d4:	a000041e 	bne	r20,zero,6ab01e8 <_dtoa_r+0x9d0>
 6ab01d8:	d8c01717 	ldw	r3,92(sp)
 6ab01dc:	1800021e 	bne	r3,zero,6ab01e8 <_dtoa_r+0x9d0>
 6ab01e0:	e004c03a 	cmpne	r2,fp,zero
 6ab01e4:	10010126 	beq	r2,zero,6ab05ec <_dtoa_r+0xdd4>
 6ab01e8:	04023d16 	blt	zero,r16,6ab0ae0 <_dtoa_r+0x12c8>
 6ab01ec:	b5c00005 	stb	r23,0(r22)
 6ab01f0:	d9800517 	ldw	r6,20(sp)
 6ab01f4:	d9000f17 	ldw	r4,60(sp)
 6ab01f8:	b5800044 	addi	r22,r22,1
 6ab01fc:	3105883a 	add	r2,r6,r4
 6ab0200:	b0806526 	beq	r22,r2,6ab0398 <_dtoa_r+0xb80>
 6ab0204:	d9400717 	ldw	r5,28(sp)
 6ab0208:	d9001617 	ldw	r4,88(sp)
 6ab020c:	01800284 	movi	r6,10
 6ab0210:	000f883a 	mov	r7,zero
 6ab0214:	6ab23cc0 	call	6ab23cc <__multadd>
 6ab0218:	d8800715 	stw	r2,28(sp)
 6ab021c:	d8800617 	ldw	r2,24(sp)
 6ab0220:	14c10c26 	beq	r2,r19,6ab0654 <_dtoa_r+0xe3c>
 6ab0224:	d9400617 	ldw	r5,24(sp)
 6ab0228:	d9001617 	ldw	r4,88(sp)
 6ab022c:	01800284 	movi	r6,10
 6ab0230:	000f883a 	mov	r7,zero
 6ab0234:	6ab23cc0 	call	6ab23cc <__multadd>
 6ab0238:	d9001617 	ldw	r4,88(sp)
 6ab023c:	980b883a 	mov	r5,r19
 6ab0240:	01800284 	movi	r6,10
 6ab0244:	000f883a 	mov	r7,zero
 6ab0248:	d8800615 	stw	r2,24(sp)
 6ab024c:	6ab23cc0 	call	6ab23cc <__multadd>
 6ab0250:	1027883a 	mov	r19,r2
 6ab0254:	003fc206 	br	6ab0160 <_dtoa_r+0x948>
 6ab0258:	2445c83a 	sub	r2,r4,r17
 6ab025c:	a088983a 	sll	r4,r20,r2
 6ab0260:	003e4b06 	br	6aafb90 <_dtoa_r+0x378>
 6ab0264:	01bfffc4 	movi	r6,-1
 6ab0268:	00800044 	movi	r2,1
 6ab026c:	d9800e15 	stw	r6,56(sp)
 6ab0270:	d9800f15 	stw	r6,60(sp)
 6ab0274:	d8800b15 	stw	r2,44(sp)
 6ab0278:	d8c01617 	ldw	r3,88(sp)
 6ab027c:	008005c4 	movi	r2,23
 6ab0280:	18001115 	stw	zero,68(r3)
 6ab0284:	1580082e 	bgeu	r2,r22,6ab02a8 <_dtoa_r+0xa90>
 6ab0288:	00c00104 	movi	r3,4
 6ab028c:	0009883a 	mov	r4,zero
 6ab0290:	18c7883a 	add	r3,r3,r3
 6ab0294:	18800504 	addi	r2,r3,20
 6ab0298:	21000044 	addi	r4,r4,1
 6ab029c:	b0bffc2e 	bgeu	r22,r2,6ab0290 <_dtoa_r+0xa78>
 6ab02a0:	d9801617 	ldw	r6,88(sp)
 6ab02a4:	31001115 	stw	r4,68(r6)
 6ab02a8:	dc000f17 	ldw	r16,60(sp)
 6ab02ac:	003e4b06 	br	6aafbdc <_dtoa_r+0x3c4>
 6ab02b0:	d9801717 	ldw	r6,92(sp)
 6ab02b4:	0023883a 	mov	r17,zero
 6ab02b8:	31bfff04 	addi	r6,r6,-4
 6ab02bc:	d9801715 	stw	r6,92(sp)
 6ab02c0:	003df806 	br	6aafaa4 <_dtoa_r+0x28c>
 6ab02c4:	00800804 	movi	r2,32
 6ab02c8:	10c9c83a 	sub	r4,r2,r3
 6ab02cc:	00c00104 	movi	r3,4
 6ab02d0:	19005a16 	blt	r3,r4,6ab043c <_dtoa_r+0xc24>
 6ab02d4:	008000c4 	movi	r2,3
 6ab02d8:	113f7e16 	blt	r2,r4,6ab00d4 <_dtoa_r+0x8bc>
 6ab02dc:	20800704 	addi	r2,r4,28
 6ab02e0:	003f7506 	br	6ab00b8 <_dtoa_r+0x8a0>
 6ab02e4:	d9801717 	ldw	r6,92(sp)
 6ab02e8:	00800044 	movi	r2,1
 6ab02ec:	1180a10e 	bge	r2,r6,6ab0574 <_dtoa_r+0xd5c>
 6ab02f0:	d9800f17 	ldw	r6,60(sp)
 6ab02f4:	d8c01017 	ldw	r3,64(sp)
 6ab02f8:	30bfffc4 	addi	r2,r6,-1
 6ab02fc:	1881c616 	blt	r3,r2,6ab0a18 <_dtoa_r+0x1200>
 6ab0300:	18a5c83a 	sub	r18,r3,r2
 6ab0304:	d8800f17 	ldw	r2,60(sp)
 6ab0308:	10026216 	blt	r2,zero,6ab0c94 <_dtoa_r+0x147c>
 6ab030c:	dc001117 	ldw	r16,68(sp)
 6ab0310:	1007883a 	mov	r3,r2
 6ab0314:	d9800a17 	ldw	r6,40(sp)
 6ab0318:	d8801117 	ldw	r2,68(sp)
 6ab031c:	d9001617 	ldw	r4,88(sp)
 6ab0320:	30cd883a 	add	r6,r6,r3
 6ab0324:	10c5883a 	add	r2,r2,r3
 6ab0328:	01400044 	movi	r5,1
 6ab032c:	d9800a15 	stw	r6,40(sp)
 6ab0330:	d8801115 	stw	r2,68(sp)
 6ab0334:	6ab23900 	call	6ab2390 <__i2b>
 6ab0338:	1027883a 	mov	r19,r2
 6ab033c:	003f2506 	br	6aaffd4 <_dtoa_r+0x7bc>
 6ab0340:	00c1ab34 	movhi	r3,1708
 6ab0344:	18e26404 	addi	r3,r3,-30320
 6ab0348:	003d6706 	br	6aaf8e8 <_dtoa_r+0xd0>
 6ab034c:	dd800517 	ldw	r22,20(sp)
 6ab0350:	04000044 	movi	r16,1
 6ab0354:	00000706 	br	6ab0374 <_dtoa_r+0xb5c>
 6ab0358:	d9400717 	ldw	r5,28(sp)
 6ab035c:	d9001617 	ldw	r4,88(sp)
 6ab0360:	01800284 	movi	r6,10
 6ab0364:	000f883a 	mov	r7,zero
 6ab0368:	6ab23cc0 	call	6ab23cc <__multadd>
 6ab036c:	d8800715 	stw	r2,28(sp)
 6ab0370:	84000044 	addi	r16,r16,1
 6ab0374:	d9000717 	ldw	r4,28(sp)
 6ab0378:	900b883a 	mov	r5,r18
 6ab037c:	6aaf6000 	call	6aaf600 <quorem>
 6ab0380:	15c00c04 	addi	r23,r2,48
 6ab0384:	b5c00005 	stb	r23,0(r22)
 6ab0388:	d8c00f17 	ldw	r3,60(sp)
 6ab038c:	b5800044 	addi	r22,r22,1
 6ab0390:	80fff116 	blt	r16,r3,6ab0358 <_dtoa_r+0xb40>
 6ab0394:	d8000615 	stw	zero,24(sp)
 6ab0398:	d9400717 	ldw	r5,28(sp)
 6ab039c:	d9001617 	ldw	r4,88(sp)
 6ab03a0:	01800044 	movi	r6,1
 6ab03a4:	6ab205c0 	call	6ab205c <__lshift>
 6ab03a8:	1009883a 	mov	r4,r2
 6ab03ac:	900b883a 	mov	r5,r18
 6ab03b0:	d8800715 	stw	r2,28(sp)
 6ab03b4:	6ab18740 	call	6ab1874 <__mcmp>
 6ab03b8:	00803c0e 	bge	zero,r2,6ab04ac <_dtoa_r+0xc94>
 6ab03bc:	b009883a 	mov	r4,r22
 6ab03c0:	213fffc4 	addi	r4,r4,-1
 6ab03c4:	21400003 	ldbu	r5,0(r4)
 6ab03c8:	00800e44 	movi	r2,57
 6ab03cc:	28c03fcc 	andi	r3,r5,255
 6ab03d0:	18c0201c 	xori	r3,r3,128
 6ab03d4:	18ffe004 	addi	r3,r3,-128
 6ab03d8:	1881981e 	bne	r3,r2,6ab0a3c <_dtoa_r+0x1224>
 6ab03dc:	d9800517 	ldw	r6,20(sp)
 6ab03e0:	21bff71e 	bne	r4,r6,6ab03c0 <_dtoa_r+0xba8>
 6ab03e4:	d8800d17 	ldw	r2,52(sp)
 6ab03e8:	37000044 	addi	fp,r6,1
 6ab03ec:	10800044 	addi	r2,r2,1
 6ab03f0:	d8800d15 	stw	r2,52(sp)
 6ab03f4:	00800c44 	movi	r2,49
 6ab03f8:	30800005 	stb	r2,0(r6)
 6ab03fc:	d9001617 	ldw	r4,88(sp)
 6ab0400:	900b883a 	mov	r5,r18
 6ab0404:	6ab17180 	call	6ab1718 <_Bfree>
 6ab0408:	983ecd26 	beq	r19,zero,6aaff40 <_dtoa_r+0x728>
 6ab040c:	d8c00617 	ldw	r3,24(sp)
 6ab0410:	18000426 	beq	r3,zero,6ab0424 <_dtoa_r+0xc0c>
 6ab0414:	1cc00326 	beq	r3,r19,6ab0424 <_dtoa_r+0xc0c>
 6ab0418:	d9001617 	ldw	r4,88(sp)
 6ab041c:	180b883a 	mov	r5,r3
 6ab0420:	6ab17180 	call	6ab1718 <_Bfree>
 6ab0424:	d9001617 	ldw	r4,88(sp)
 6ab0428:	980b883a 	mov	r5,r19
 6ab042c:	6ab17180 	call	6ab1718 <_Bfree>
 6ab0430:	003ec306 	br	6aaff40 <_dtoa_r+0x728>
 6ab0434:	1805883a 	mov	r2,r3
 6ab0438:	003eeb06 	br	6aaffe8 <_dtoa_r+0x7d0>
 6ab043c:	d9800a17 	ldw	r6,40(sp)
 6ab0440:	d8c01117 	ldw	r3,68(sp)
 6ab0444:	20bfff04 	addi	r2,r4,-4
 6ab0448:	308d883a 	add	r6,r6,r2
 6ab044c:	1887883a 	add	r3,r3,r2
 6ab0450:	80a1883a 	add	r16,r16,r2
 6ab0454:	d9800a15 	stw	r6,40(sp)
 6ab0458:	d8c01115 	stw	r3,68(sp)
 6ab045c:	003f1d06 	br	6ab00d4 <_dtoa_r+0x8bc>
 6ab0460:	a03f0c1e 	bne	r20,zero,6ab0094 <_dtoa_r+0x87c>
 6ab0464:	00800434 	movhi	r2,16
 6ab0468:	10bfffc4 	addi	r2,r2,-1
 6ab046c:	a884703a 	and	r2,r21,r2
 6ab0470:	103f081e 	bne	r2,zero,6ab0094 <_dtoa_r+0x87c>
 6ab0474:	a89ffc2c 	andhi	r2,r21,32752
 6ab0478:	103f0626 	beq	r2,zero,6ab0094 <_dtoa_r+0x87c>
 6ab047c:	d8c01117 	ldw	r3,68(sp)
 6ab0480:	d9000a17 	ldw	r4,40(sp)
 6ab0484:	18c00044 	addi	r3,r3,1
 6ab0488:	21000044 	addi	r4,r4,1
 6ab048c:	d8c01115 	stw	r3,68(sp)
 6ab0490:	d9000a15 	stw	r4,40(sp)
 6ab0494:	003f0006 	br	6ab0098 <_dtoa_r+0x880>
 6ab0498:	d9400717 	ldw	r5,28(sp)
 6ab049c:	d9001617 	ldw	r4,88(sp)
 6ab04a0:	6ab24cc0 	call	6ab24cc <__pow5mult>
 6ab04a4:	d8800715 	stw	r2,28(sp)
 6ab04a8:	003eed06 	br	6ab0060 <_dtoa_r+0x848>
 6ab04ac:	1000021e 	bne	r2,zero,6ab04b8 <_dtoa_r+0xca0>
 6ab04b0:	b880004c 	andi	r2,r23,1
 6ab04b4:	103fc11e 	bne	r2,zero,6ab03bc <_dtoa_r+0xba4>
 6ab04b8:	b5bfffc4 	addi	r22,r22,-1
 6ab04bc:	b0c00007 	ldb	r3,0(r22)
 6ab04c0:	00800c04 	movi	r2,48
 6ab04c4:	18bffc26 	beq	r3,r2,6ab04b8 <_dtoa_r+0xca0>
 6ab04c8:	b7000044 	addi	fp,r22,1
 6ab04cc:	003fcb06 	br	6ab03fc <_dtoa_r+0xbe4>
 6ab04d0:	d9800d17 	ldw	r6,52(sp)
 6ab04d4:	018fc83a 	sub	r7,zero,r6
 6ab04d8:	3801f726 	beq	r7,zero,6ab0cb8 <_dtoa_r+0x14a0>
 6ab04dc:	398003cc 	andi	r6,r7,15
 6ab04e0:	300c90fa 	slli	r6,r6,3
 6ab04e4:	0141ab34 	movhi	r5,1708
 6ab04e8:	29628104 	addi	r5,r5,-30204
 6ab04ec:	d9001217 	ldw	r4,72(sp)
 6ab04f0:	314d883a 	add	r6,r6,r5
 6ab04f4:	30c00117 	ldw	r3,4(r6)
 6ab04f8:	30800017 	ldw	r2,0(r6)
 6ab04fc:	d9401317 	ldw	r5,76(sp)
 6ab0500:	3821d13a 	srai	r16,r7,4
 6ab0504:	100d883a 	mov	r6,r2
 6ab0508:	180f883a 	mov	r7,r3
 6ab050c:	6ab405c0 	call	6ab405c <__muldf3>
 6ab0510:	1011883a 	mov	r8,r2
 6ab0514:	1813883a 	mov	r9,r3
 6ab0518:	1029883a 	mov	r20,r2
 6ab051c:	182b883a 	mov	r21,r3
 6ab0520:	8001e526 	beq	r16,zero,6ab0cb8 <_dtoa_r+0x14a0>
 6ab0524:	05800084 	movi	r22,2
 6ab0528:	0441ab34 	movhi	r17,1708
 6ab052c:	8c62b304 	addi	r17,r17,-30004
 6ab0530:	8080004c 	andi	r2,r16,1
 6ab0534:	1005003a 	cmpeq	r2,r2,zero
 6ab0538:	1000081e 	bne	r2,zero,6ab055c <_dtoa_r+0xd44>
 6ab053c:	89800017 	ldw	r6,0(r17)
 6ab0540:	89c00117 	ldw	r7,4(r17)
 6ab0544:	480b883a 	mov	r5,r9
 6ab0548:	4009883a 	mov	r4,r8
 6ab054c:	6ab405c0 	call	6ab405c <__muldf3>
 6ab0550:	1011883a 	mov	r8,r2
 6ab0554:	b5800044 	addi	r22,r22,1
 6ab0558:	1813883a 	mov	r9,r3
 6ab055c:	8021d07a 	srai	r16,r16,1
 6ab0560:	8c400204 	addi	r17,r17,8
 6ab0564:	803ff21e 	bne	r16,zero,6ab0530 <_dtoa_r+0xd18>
 6ab0568:	4029883a 	mov	r20,r8
 6ab056c:	482b883a 	mov	r21,r9
 6ab0570:	003dca06 	br	6aafc9c <_dtoa_r+0x484>
 6ab0574:	d9000817 	ldw	r4,32(sp)
 6ab0578:	2005003a 	cmpeq	r2,r4,zero
 6ab057c:	1001f61e 	bne	r2,zero,6ab0d58 <_dtoa_r+0x1540>
 6ab0580:	dc001117 	ldw	r16,68(sp)
 6ab0584:	dc801017 	ldw	r18,64(sp)
 6ab0588:	18c10cc4 	addi	r3,r3,1075
 6ab058c:	003f6106 	br	6ab0314 <_dtoa_r+0xafc>
 6ab0590:	d8000b15 	stw	zero,44(sp)
 6ab0594:	d9802617 	ldw	r6,152(sp)
 6ab0598:	d8c00d17 	ldw	r3,52(sp)
 6ab059c:	30800044 	addi	r2,r6,1
 6ab05a0:	18ad883a 	add	r22,r3,r2
 6ab05a4:	b13fffc4 	addi	r4,r22,-1
 6ab05a8:	d9000e15 	stw	r4,56(sp)
 6ab05ac:	0581f60e 	bge	zero,r22,6ab0d88 <_dtoa_r+0x1570>
 6ab05b0:	dd800f15 	stw	r22,60(sp)
 6ab05b4:	003f3006 	br	6ab0278 <_dtoa_r+0xa60>
 6ab05b8:	d8000b15 	stw	zero,44(sp)
 6ab05bc:	d9002617 	ldw	r4,152(sp)
 6ab05c0:	0101eb0e 	bge	zero,r4,6ab0d70 <_dtoa_r+0x1558>
 6ab05c4:	202d883a 	mov	r22,r4
 6ab05c8:	d9000e15 	stw	r4,56(sp)
 6ab05cc:	d9000f15 	stw	r4,60(sp)
 6ab05d0:	003f2906 	br	6ab0278 <_dtoa_r+0xa60>
 6ab05d4:	01800044 	movi	r6,1
 6ab05d8:	d9800b15 	stw	r6,44(sp)
 6ab05dc:	003ff706 	br	6ab05bc <_dtoa_r+0xda4>
 6ab05e0:	01000044 	movi	r4,1
 6ab05e4:	d9000b15 	stw	r4,44(sp)
 6ab05e8:	003fea06 	br	6ab0594 <_dtoa_r+0xd7c>
 6ab05ec:	04000c0e 	bge	zero,r16,6ab0620 <_dtoa_r+0xe08>
 6ab05f0:	d9400717 	ldw	r5,28(sp)
 6ab05f4:	d9001617 	ldw	r4,88(sp)
 6ab05f8:	01800044 	movi	r6,1
 6ab05fc:	6ab205c0 	call	6ab205c <__lshift>
 6ab0600:	1009883a 	mov	r4,r2
 6ab0604:	900b883a 	mov	r5,r18
 6ab0608:	d8800715 	stw	r2,28(sp)
 6ab060c:	6ab18740 	call	6ab1874 <__mcmp>
 6ab0610:	0081e00e 	bge	zero,r2,6ab0d94 <_dtoa_r+0x157c>
 6ab0614:	bdc00044 	addi	r23,r23,1
 6ab0618:	00800e84 	movi	r2,58
 6ab061c:	b881a226 	beq	r23,r2,6ab0ca8 <_dtoa_r+0x1490>
 6ab0620:	b7000044 	addi	fp,r22,1
 6ab0624:	b5c00005 	stb	r23,0(r22)
 6ab0628:	003f7406 	br	6ab03fc <_dtoa_r+0xbe4>
 6ab062c:	00800e44 	movi	r2,57
 6ab0630:	b8819d26 	beq	r23,r2,6ab0ca8 <_dtoa_r+0x1490>
 6ab0634:	053ffa0e 	bge	zero,r20,6ab0620 <_dtoa_r+0xe08>
 6ab0638:	8dc00c44 	addi	r23,r17,49
 6ab063c:	003ff806 	br	6ab0620 <_dtoa_r+0xe08>
 6ab0640:	d9001617 	ldw	r4,88(sp)
 6ab0644:	a80b883a 	mov	r5,r21
 6ab0648:	04000044 	movi	r16,1
 6ab064c:	6ab17180 	call	6ab1718 <_Bfree>
 6ab0650:	003edf06 	br	6ab01d0 <_dtoa_r+0x9b8>
 6ab0654:	d9001617 	ldw	r4,88(sp)
 6ab0658:	980b883a 	mov	r5,r19
 6ab065c:	01800284 	movi	r6,10
 6ab0660:	000f883a 	mov	r7,zero
 6ab0664:	6ab23cc0 	call	6ab23cc <__multadd>
 6ab0668:	1027883a 	mov	r19,r2
 6ab066c:	d8800615 	stw	r2,24(sp)
 6ab0670:	003ebb06 	br	6ab0160 <_dtoa_r+0x948>
 6ab0674:	d9801117 	ldw	r6,68(sp)
 6ab0678:	d8800d17 	ldw	r2,52(sp)
 6ab067c:	d8000915 	stw	zero,36(sp)
 6ab0680:	308dc83a 	sub	r6,r6,r2
 6ab0684:	0087c83a 	sub	r3,zero,r2
 6ab0688:	d9801115 	stw	r6,68(sp)
 6ab068c:	d8c01015 	stw	r3,64(sp)
 6ab0690:	003cfe06 	br	6aafa8c <_dtoa_r+0x274>
 6ab0694:	018dc83a 	sub	r6,zero,r6
 6ab0698:	d9801115 	stw	r6,68(sp)
 6ab069c:	d8000a15 	stw	zero,40(sp)
 6ab06a0:	003cf306 	br	6aafa70 <_dtoa_r+0x258>
 6ab06a4:	d9000d17 	ldw	r4,52(sp)
 6ab06a8:	6ab49200 	call	6ab4920 <__floatsidf>
 6ab06ac:	880b883a 	mov	r5,r17
 6ab06b0:	8009883a 	mov	r4,r16
 6ab06b4:	180f883a 	mov	r7,r3
 6ab06b8:	100d883a 	mov	r6,r2
 6ab06bc:	6ab47000 	call	6ab4700 <__nedf2>
 6ab06c0:	103ce126 	beq	r2,zero,6aafa48 <_dtoa_r+0x230>
 6ab06c4:	d9800d17 	ldw	r6,52(sp)
 6ab06c8:	31bfffc4 	addi	r6,r6,-1
 6ab06cc:	d9800d15 	stw	r6,52(sp)
 6ab06d0:	003cdd06 	br	6aafa48 <_dtoa_r+0x230>
 6ab06d4:	d9000717 	ldw	r4,28(sp)
 6ab06d8:	900b883a 	mov	r5,r18
 6ab06dc:	6ab18740 	call	6ab1874 <__mcmp>
 6ab06e0:	103e8d0e 	bge	r2,zero,6ab0118 <_dtoa_r+0x900>
 6ab06e4:	d9400717 	ldw	r5,28(sp)
 6ab06e8:	d9001617 	ldw	r4,88(sp)
 6ab06ec:	01800284 	movi	r6,10
 6ab06f0:	000f883a 	mov	r7,zero
 6ab06f4:	6ab23cc0 	call	6ab23cc <__multadd>
 6ab06f8:	d9800d17 	ldw	r6,52(sp)
 6ab06fc:	d8800715 	stw	r2,28(sp)
 6ab0700:	31bfffc4 	addi	r6,r6,-1
 6ab0704:	d9800d15 	stw	r6,52(sp)
 6ab0708:	b001a71e 	bne	r22,zero,6ab0da8 <_dtoa_r+0x1590>
 6ab070c:	d8800e17 	ldw	r2,56(sp)
 6ab0710:	d8800f15 	stw	r2,60(sp)
 6ab0714:	003e8006 	br	6ab0118 <_dtoa_r+0x900>
 6ab0718:	90800417 	ldw	r2,16(r18)
 6ab071c:	1085883a 	add	r2,r2,r2
 6ab0720:	1085883a 	add	r2,r2,r2
 6ab0724:	1485883a 	add	r2,r2,r18
 6ab0728:	11000417 	ldw	r4,16(r2)
 6ab072c:	6ab17400 	call	6ab1740 <__hi0bits>
 6ab0730:	00c00804 	movi	r3,32
 6ab0734:	1887c83a 	sub	r3,r3,r2
 6ab0738:	003e5a06 	br	6ab00a4 <_dtoa_r+0x88c>
 6ab073c:	d9400717 	ldw	r5,28(sp)
 6ab0740:	d9801017 	ldw	r6,64(sp)
 6ab0744:	d9001617 	ldw	r4,88(sp)
 6ab0748:	6ab24cc0 	call	6ab24cc <__pow5mult>
 6ab074c:	d8800715 	stw	r2,28(sp)
 6ab0750:	003e4306 	br	6ab0060 <_dtoa_r+0x848>
 6ab0754:	d9800f17 	ldw	r6,60(sp)
 6ab0758:	d8800d17 	ldw	r2,52(sp)
 6ab075c:	d9800315 	stw	r6,12(sp)
 6ab0760:	d8800415 	stw	r2,16(sp)
 6ab0764:	d8c00b17 	ldw	r3,44(sp)
 6ab0768:	1805003a 	cmpeq	r2,r3,zero
 6ab076c:	1000e21e 	bne	r2,zero,6ab0af8 <_dtoa_r+0x12e0>
 6ab0770:	d9000317 	ldw	r4,12(sp)
 6ab0774:	0005883a 	mov	r2,zero
 6ab0778:	00cff834 	movhi	r3,16352
 6ab077c:	200c90fa 	slli	r6,r4,3
 6ab0780:	0101ab34 	movhi	r4,1708
 6ab0784:	21228104 	addi	r4,r4,-30204
 6ab0788:	180b883a 	mov	r5,r3
 6ab078c:	310d883a 	add	r6,r6,r4
 6ab0790:	327fff17 	ldw	r9,-4(r6)
 6ab0794:	323ffe17 	ldw	r8,-8(r6)
 6ab0798:	1009883a 	mov	r4,r2
 6ab079c:	480f883a 	mov	r7,r9
 6ab07a0:	400d883a 	mov	r6,r8
 6ab07a4:	6ab44200 	call	6ab4420 <__divdf3>
 6ab07a8:	180b883a 	mov	r5,r3
 6ab07ac:	b00d883a 	mov	r6,r22
 6ab07b0:	b80f883a 	mov	r7,r23
 6ab07b4:	1009883a 	mov	r4,r2
 6ab07b8:	6ab3f680 	call	6ab3f68 <__subdf3>
 6ab07bc:	a80b883a 	mov	r5,r21
 6ab07c0:	a009883a 	mov	r4,r20
 6ab07c4:	d8c01915 	stw	r3,100(sp)
 6ab07c8:	d8801815 	stw	r2,96(sp)
 6ab07cc:	6ab4a180 	call	6ab4a18 <__fixdfsi>
 6ab07d0:	1009883a 	mov	r4,r2
 6ab07d4:	1027883a 	mov	r19,r2
 6ab07d8:	6ab49200 	call	6ab4920 <__floatsidf>
 6ab07dc:	a80b883a 	mov	r5,r21
 6ab07e0:	a009883a 	mov	r4,r20
 6ab07e4:	180f883a 	mov	r7,r3
 6ab07e8:	100d883a 	mov	r6,r2
 6ab07ec:	6ab3f680 	call	6ab3f68 <__subdf3>
 6ab07f0:	d9801817 	ldw	r6,96(sp)
 6ab07f4:	1823883a 	mov	r17,r3
 6ab07f8:	d8801415 	stw	r2,80(sp)
 6ab07fc:	302d883a 	mov	r22,r6
 6ab0800:	d9800517 	ldw	r6,20(sp)
 6ab0804:	9cc00c04 	addi	r19,r19,48
 6ab0808:	dc401515 	stw	r17,84(sp)
 6ab080c:	d8c01917 	ldw	r3,100(sp)
 6ab0810:	34c00005 	stb	r19,0(r6)
 6ab0814:	d8800517 	ldw	r2,20(sp)
 6ab0818:	d9401917 	ldw	r5,100(sp)
 6ab081c:	d9801417 	ldw	r6,80(sp)
 6ab0820:	b009883a 	mov	r4,r22
 6ab0824:	880f883a 	mov	r7,r17
 6ab0828:	182f883a 	mov	r23,r3
 6ab082c:	17000044 	addi	fp,r2,1
 6ab0830:	6ab47880 	call	6ab4788 <__gtdf2>
 6ab0834:	00804e16 	blt	zero,r2,6ab0970 <_dtoa_r+0x1158>
 6ab0838:	d9801417 	ldw	r6,80(sp)
 6ab083c:	0005883a 	mov	r2,zero
 6ab0840:	00cffc34 	movhi	r3,16368
 6ab0844:	180b883a 	mov	r5,r3
 6ab0848:	880f883a 	mov	r7,r17
 6ab084c:	1009883a 	mov	r4,r2
 6ab0850:	6ab3f680 	call	6ab3f68 <__subdf3>
 6ab0854:	d9401917 	ldw	r5,100(sp)
 6ab0858:	180f883a 	mov	r7,r3
 6ab085c:	b009883a 	mov	r4,r22
 6ab0860:	100d883a 	mov	r6,r2
 6ab0864:	6ab47880 	call	6ab4788 <__gtdf2>
 6ab0868:	00bda216 	blt	zero,r2,6aafef4 <_dtoa_r+0x6dc>
 6ab086c:	d8c00317 	ldw	r3,12(sp)
 6ab0870:	00800044 	movi	r2,1
 6ab0874:	10c01216 	blt	r2,r3,6ab08c0 <_dtoa_r+0x10a8>
 6ab0878:	003d4506 	br	6aafd90 <_dtoa_r+0x578>
 6ab087c:	d9801417 	ldw	r6,80(sp)
 6ab0880:	0005883a 	mov	r2,zero
 6ab0884:	00cffc34 	movhi	r3,16368
 6ab0888:	180b883a 	mov	r5,r3
 6ab088c:	880f883a 	mov	r7,r17
 6ab0890:	1009883a 	mov	r4,r2
 6ab0894:	6ab3f680 	call	6ab3f68 <__subdf3>
 6ab0898:	d9c01b17 	ldw	r7,108(sp)
 6ab089c:	180b883a 	mov	r5,r3
 6ab08a0:	1009883a 	mov	r4,r2
 6ab08a4:	b00d883a 	mov	r6,r22
 6ab08a8:	6ab48980 	call	6ab4898 <__ltdf2>
 6ab08ac:	103d9116 	blt	r2,zero,6aafef4 <_dtoa_r+0x6dc>
 6ab08b0:	d9800517 	ldw	r6,20(sp)
 6ab08b4:	d9000317 	ldw	r4,12(sp)
 6ab08b8:	3105883a 	add	r2,r6,r4
 6ab08bc:	e0bd3426 	beq	fp,r2,6aafd90 <_dtoa_r+0x578>
 6ab08c0:	04500934 	movhi	r17,16420
 6ab08c4:	0021883a 	mov	r16,zero
 6ab08c8:	b80b883a 	mov	r5,r23
 6ab08cc:	b009883a 	mov	r4,r22
 6ab08d0:	800d883a 	mov	r6,r16
 6ab08d4:	880f883a 	mov	r7,r17
 6ab08d8:	6ab405c0 	call	6ab405c <__muldf3>
 6ab08dc:	d9401517 	ldw	r5,84(sp)
 6ab08e0:	d9001417 	ldw	r4,80(sp)
 6ab08e4:	880f883a 	mov	r7,r17
 6ab08e8:	000d883a 	mov	r6,zero
 6ab08ec:	d8801a15 	stw	r2,104(sp)
 6ab08f0:	d8c01b15 	stw	r3,108(sp)
 6ab08f4:	6ab405c0 	call	6ab405c <__muldf3>
 6ab08f8:	180b883a 	mov	r5,r3
 6ab08fc:	1009883a 	mov	r4,r2
 6ab0900:	1823883a 	mov	r17,r3
 6ab0904:	1021883a 	mov	r16,r2
 6ab0908:	6ab4a180 	call	6ab4a18 <__fixdfsi>
 6ab090c:	1009883a 	mov	r4,r2
 6ab0910:	102b883a 	mov	r21,r2
 6ab0914:	6ab49200 	call	6ab4920 <__floatsidf>
 6ab0918:	880b883a 	mov	r5,r17
 6ab091c:	8009883a 	mov	r4,r16
 6ab0920:	180f883a 	mov	r7,r3
 6ab0924:	100d883a 	mov	r6,r2
 6ab0928:	6ab3f680 	call	6ab3f68 <__subdf3>
 6ab092c:	1021883a 	mov	r16,r2
 6ab0930:	d9001b17 	ldw	r4,108(sp)
 6ab0934:	1823883a 	mov	r17,r3
 6ab0938:	dc001415 	stw	r16,80(sp)
 6ab093c:	ad400c04 	addi	r21,r21,48
 6ab0940:	dc401515 	stw	r17,84(sp)
 6ab0944:	d8801a17 	ldw	r2,104(sp)
 6ab0948:	e5400005 	stb	r21,0(fp)
 6ab094c:	202f883a 	mov	r23,r4
 6ab0950:	d9c01b17 	ldw	r7,108(sp)
 6ab0954:	d9001417 	ldw	r4,80(sp)
 6ab0958:	880b883a 	mov	r5,r17
 6ab095c:	100d883a 	mov	r6,r2
 6ab0960:	102d883a 	mov	r22,r2
 6ab0964:	e7000044 	addi	fp,fp,1
 6ab0968:	6ab48980 	call	6ab4898 <__ltdf2>
 6ab096c:	103fc30e 	bge	r2,zero,6ab087c <_dtoa_r+0x1064>
 6ab0970:	d9000417 	ldw	r4,16(sp)
 6ab0974:	d9000d15 	stw	r4,52(sp)
 6ab0978:	003d7106 	br	6aaff40 <_dtoa_r+0x728>
 6ab097c:	d9801717 	ldw	r6,92(sp)
 6ab0980:	00800084 	movi	r2,2
 6ab0984:	11bde60e 	bge	r2,r6,6ab0120 <_dtoa_r+0x908>
 6ab0988:	203cfb1e 	bne	r4,zero,6aafd78 <_dtoa_r+0x560>
 6ab098c:	d9001617 	ldw	r4,88(sp)
 6ab0990:	900b883a 	mov	r5,r18
 6ab0994:	01800144 	movi	r6,5
 6ab0998:	000f883a 	mov	r7,zero
 6ab099c:	6ab23cc0 	call	6ab23cc <__multadd>
 6ab09a0:	d9000717 	ldw	r4,28(sp)
 6ab09a4:	100b883a 	mov	r5,r2
 6ab09a8:	1025883a 	mov	r18,r2
 6ab09ac:	6ab18740 	call	6ab1874 <__mcmp>
 6ab09b0:	00bcf10e 	bge	zero,r2,6aafd78 <_dtoa_r+0x560>
 6ab09b4:	d8c00d17 	ldw	r3,52(sp)
 6ab09b8:	d9000517 	ldw	r4,20(sp)
 6ab09bc:	d8000615 	stw	zero,24(sp)
 6ab09c0:	18c00044 	addi	r3,r3,1
 6ab09c4:	d8c00d15 	stw	r3,52(sp)
 6ab09c8:	00800c44 	movi	r2,49
 6ab09cc:	27000044 	addi	fp,r4,1
 6ab09d0:	20800005 	stb	r2,0(r4)
 6ab09d4:	003e8906 	br	6ab03fc <_dtoa_r+0xbe4>
 6ab09d8:	d8c00517 	ldw	r3,20(sp)
 6ab09dc:	003bc206 	br	6aaf8e8 <_dtoa_r+0xd0>
 6ab09e0:	0181ab34 	movhi	r6,1708
 6ab09e4:	31a2b304 	addi	r6,r6,-30004
 6ab09e8:	30c00917 	ldw	r3,36(r6)
 6ab09ec:	30800817 	ldw	r2,32(r6)
 6ab09f0:	d9001217 	ldw	r4,72(sp)
 6ab09f4:	d9401317 	ldw	r5,76(sp)
 6ab09f8:	180f883a 	mov	r7,r3
 6ab09fc:	100d883a 	mov	r6,r2
 6ab0a00:	6ab44200 	call	6ab4420 <__divdf3>
 6ab0a04:	948003cc 	andi	r18,r18,15
 6ab0a08:	058000c4 	movi	r22,3
 6ab0a0c:	1029883a 	mov	r20,r2
 6ab0a10:	182b883a 	mov	r21,r3
 6ab0a14:	003c8906 	br	6aafc3c <_dtoa_r+0x424>
 6ab0a18:	d9001017 	ldw	r4,64(sp)
 6ab0a1c:	d9800917 	ldw	r6,36(sp)
 6ab0a20:	0025883a 	mov	r18,zero
 6ab0a24:	1105c83a 	sub	r2,r2,r4
 6ab0a28:	2089883a 	add	r4,r4,r2
 6ab0a2c:	308d883a 	add	r6,r6,r2
 6ab0a30:	d9001015 	stw	r4,64(sp)
 6ab0a34:	d9800915 	stw	r6,36(sp)
 6ab0a38:	003e3206 	br	6ab0304 <_dtoa_r+0xaec>
 6ab0a3c:	28800044 	addi	r2,r5,1
 6ab0a40:	27000044 	addi	fp,r4,1
 6ab0a44:	20800005 	stb	r2,0(r4)
 6ab0a48:	003e6c06 	br	6ab03fc <_dtoa_r+0xbe4>
 6ab0a4c:	d8800f17 	ldw	r2,60(sp)
 6ab0a50:	00bce016 	blt	zero,r2,6aafdd4 <_dtoa_r+0x5bc>
 6ab0a54:	d9800f17 	ldw	r6,60(sp)
 6ab0a58:	303cc51e 	bne	r6,zero,6aafd70 <_dtoa_r+0x558>
 6ab0a5c:	0005883a 	mov	r2,zero
 6ab0a60:	00d00534 	movhi	r3,16404
 6ab0a64:	980b883a 	mov	r5,r19
 6ab0a68:	180f883a 	mov	r7,r3
 6ab0a6c:	9009883a 	mov	r4,r18
 6ab0a70:	100d883a 	mov	r6,r2
 6ab0a74:	6ab405c0 	call	6ab405c <__muldf3>
 6ab0a78:	180b883a 	mov	r5,r3
 6ab0a7c:	a80f883a 	mov	r7,r21
 6ab0a80:	1009883a 	mov	r4,r2
 6ab0a84:	a00d883a 	mov	r6,r20
 6ab0a88:	6ab48100 	call	6ab4810 <__gedf2>
 6ab0a8c:	103cb80e 	bge	r2,zero,6aafd70 <_dtoa_r+0x558>
 6ab0a90:	0027883a 	mov	r19,zero
 6ab0a94:	0025883a 	mov	r18,zero
 6ab0a98:	003fc606 	br	6ab09b4 <_dtoa_r+0x119c>
 6ab0a9c:	99400117 	ldw	r5,4(r19)
 6ab0aa0:	d9001617 	ldw	r4,88(sp)
 6ab0aa4:	6ab1c980 	call	6ab1c98 <_Balloc>
 6ab0aa8:	99800417 	ldw	r6,16(r19)
 6ab0aac:	11000304 	addi	r4,r2,12
 6ab0ab0:	99400304 	addi	r5,r19,12
 6ab0ab4:	318d883a 	add	r6,r6,r6
 6ab0ab8:	318d883a 	add	r6,r6,r6
 6ab0abc:	31800204 	addi	r6,r6,8
 6ab0ac0:	1023883a 	mov	r17,r2
 6ab0ac4:	6ab15980 	call	6ab1598 <memcpy>
 6ab0ac8:	d9001617 	ldw	r4,88(sp)
 6ab0acc:	880b883a 	mov	r5,r17
 6ab0ad0:	01800044 	movi	r6,1
 6ab0ad4:	6ab205c0 	call	6ab205c <__lshift>
 6ab0ad8:	100b883a 	mov	r5,r2
 6ab0adc:	003d9c06 	br	6ab0150 <_dtoa_r+0x938>
 6ab0ae0:	00800e44 	movi	r2,57
 6ab0ae4:	b8807026 	beq	r23,r2,6ab0ca8 <_dtoa_r+0x1490>
 6ab0ae8:	b8800044 	addi	r2,r23,1
 6ab0aec:	b7000044 	addi	fp,r22,1
 6ab0af0:	b0800005 	stb	r2,0(r22)
 6ab0af4:	003e4106 	br	6ab03fc <_dtoa_r+0xbe4>
 6ab0af8:	d8800317 	ldw	r2,12(sp)
 6ab0afc:	0181ab34 	movhi	r6,1708
 6ab0b00:	31a28104 	addi	r6,r6,-30204
 6ab0b04:	b009883a 	mov	r4,r22
 6ab0b08:	100e90fa 	slli	r7,r2,3
 6ab0b0c:	b80b883a 	mov	r5,r23
 6ab0b10:	398f883a 	add	r7,r7,r6
 6ab0b14:	38bffe17 	ldw	r2,-8(r7)
 6ab0b18:	d9800517 	ldw	r6,20(sp)
 6ab0b1c:	38ffff17 	ldw	r3,-4(r7)
 6ab0b20:	37000044 	addi	fp,r6,1
 6ab0b24:	180f883a 	mov	r7,r3
 6ab0b28:	100d883a 	mov	r6,r2
 6ab0b2c:	6ab405c0 	call	6ab405c <__muldf3>
 6ab0b30:	a80b883a 	mov	r5,r21
 6ab0b34:	a009883a 	mov	r4,r20
 6ab0b38:	182f883a 	mov	r23,r3
 6ab0b3c:	102d883a 	mov	r22,r2
 6ab0b40:	6ab4a180 	call	6ab4a18 <__fixdfsi>
 6ab0b44:	1009883a 	mov	r4,r2
 6ab0b48:	1027883a 	mov	r19,r2
 6ab0b4c:	6ab49200 	call	6ab4920 <__floatsidf>
 6ab0b50:	a80b883a 	mov	r5,r21
 6ab0b54:	a009883a 	mov	r4,r20
 6ab0b58:	180f883a 	mov	r7,r3
 6ab0b5c:	100d883a 	mov	r6,r2
 6ab0b60:	6ab3f680 	call	6ab3f68 <__subdf3>
 6ab0b64:	180b883a 	mov	r5,r3
 6ab0b68:	d8c00517 	ldw	r3,20(sp)
 6ab0b6c:	9cc00c04 	addi	r19,r19,48
 6ab0b70:	1009883a 	mov	r4,r2
 6ab0b74:	1cc00005 	stb	r19,0(r3)
 6ab0b78:	2021883a 	mov	r16,r4
 6ab0b7c:	d9000317 	ldw	r4,12(sp)
 6ab0b80:	00800044 	movi	r2,1
 6ab0b84:	2823883a 	mov	r17,r5
 6ab0b88:	20802226 	beq	r4,r2,6ab0c14 <_dtoa_r+0x13fc>
 6ab0b8c:	1029883a 	mov	r20,r2
 6ab0b90:	0005883a 	mov	r2,zero
 6ab0b94:	00d00934 	movhi	r3,16420
 6ab0b98:	180f883a 	mov	r7,r3
 6ab0b9c:	100d883a 	mov	r6,r2
 6ab0ba0:	880b883a 	mov	r5,r17
 6ab0ba4:	8009883a 	mov	r4,r16
 6ab0ba8:	6ab405c0 	call	6ab405c <__muldf3>
 6ab0bac:	180b883a 	mov	r5,r3
 6ab0bb0:	1009883a 	mov	r4,r2
 6ab0bb4:	1823883a 	mov	r17,r3
 6ab0bb8:	1021883a 	mov	r16,r2
 6ab0bbc:	6ab4a180 	call	6ab4a18 <__fixdfsi>
 6ab0bc0:	1009883a 	mov	r4,r2
 6ab0bc4:	102b883a 	mov	r21,r2
 6ab0bc8:	6ab49200 	call	6ab4920 <__floatsidf>
 6ab0bcc:	880b883a 	mov	r5,r17
 6ab0bd0:	8009883a 	mov	r4,r16
 6ab0bd4:	180f883a 	mov	r7,r3
 6ab0bd8:	100d883a 	mov	r6,r2
 6ab0bdc:	6ab3f680 	call	6ab3f68 <__subdf3>
 6ab0be0:	180b883a 	mov	r5,r3
 6ab0be4:	d8c00517 	ldw	r3,20(sp)
 6ab0be8:	1009883a 	mov	r4,r2
 6ab0bec:	ad400c04 	addi	r21,r21,48
 6ab0bf0:	1d05883a 	add	r2,r3,r20
 6ab0bf4:	15400005 	stb	r21,0(r2)
 6ab0bf8:	2021883a 	mov	r16,r4
 6ab0bfc:	d9000317 	ldw	r4,12(sp)
 6ab0c00:	a5000044 	addi	r20,r20,1
 6ab0c04:	2823883a 	mov	r17,r5
 6ab0c08:	a13fe11e 	bne	r20,r4,6ab0b90 <_dtoa_r+0x1378>
 6ab0c0c:	e505883a 	add	r2,fp,r20
 6ab0c10:	173fffc4 	addi	fp,r2,-1
 6ab0c14:	0025883a 	mov	r18,zero
 6ab0c18:	04cff834 	movhi	r19,16352
 6ab0c1c:	b009883a 	mov	r4,r22
 6ab0c20:	b80b883a 	mov	r5,r23
 6ab0c24:	900d883a 	mov	r6,r18
 6ab0c28:	980f883a 	mov	r7,r19
 6ab0c2c:	6ab3fe80 	call	6ab3fe8 <__adddf3>
 6ab0c30:	180b883a 	mov	r5,r3
 6ab0c34:	1009883a 	mov	r4,r2
 6ab0c38:	800d883a 	mov	r6,r16
 6ab0c3c:	880f883a 	mov	r7,r17
 6ab0c40:	6ab48980 	call	6ab4898 <__ltdf2>
 6ab0c44:	103cab16 	blt	r2,zero,6aafef4 <_dtoa_r+0x6dc>
 6ab0c48:	0009883a 	mov	r4,zero
 6ab0c4c:	980b883a 	mov	r5,r19
 6ab0c50:	b80f883a 	mov	r7,r23
 6ab0c54:	b00d883a 	mov	r6,r22
 6ab0c58:	6ab3f680 	call	6ab3f68 <__subdf3>
 6ab0c5c:	180b883a 	mov	r5,r3
 6ab0c60:	880f883a 	mov	r7,r17
 6ab0c64:	1009883a 	mov	r4,r2
 6ab0c68:	800d883a 	mov	r6,r16
 6ab0c6c:	6ab47880 	call	6ab4788 <__gtdf2>
 6ab0c70:	00bc470e 	bge	zero,r2,6aafd90 <_dtoa_r+0x578>
 6ab0c74:	00c00c04 	movi	r3,48
 6ab0c78:	e73fffc4 	addi	fp,fp,-1
 6ab0c7c:	e0800007 	ldb	r2,0(fp)
 6ab0c80:	10fffd26 	beq	r2,r3,6ab0c78 <_dtoa_r+0x1460>
 6ab0c84:	d9800417 	ldw	r6,16(sp)
 6ab0c88:	e7000044 	addi	fp,fp,1
 6ab0c8c:	d9800d15 	stw	r6,52(sp)
 6ab0c90:	003cab06 	br	6aaff40 <_dtoa_r+0x728>
 6ab0c94:	d8c00f17 	ldw	r3,60(sp)
 6ab0c98:	d9001117 	ldw	r4,68(sp)
 6ab0c9c:	20e1c83a 	sub	r16,r4,r3
 6ab0ca0:	0007883a 	mov	r3,zero
 6ab0ca4:	003d9b06 	br	6ab0314 <_dtoa_r+0xafc>
 6ab0ca8:	00800e44 	movi	r2,57
 6ab0cac:	b0800005 	stb	r2,0(r22)
 6ab0cb0:	b5800044 	addi	r22,r22,1
 6ab0cb4:	003dc106 	br	6ab03bc <_dtoa_r+0xba4>
 6ab0cb8:	05800084 	movi	r22,2
 6ab0cbc:	003bf706 	br	6aafc9c <_dtoa_r+0x484>
 6ab0cc0:	d9000f17 	ldw	r4,60(sp)
 6ab0cc4:	013c000e 	bge	zero,r4,6aafcc8 <_dtoa_r+0x4b0>
 6ab0cc8:	d9800e17 	ldw	r6,56(sp)
 6ab0ccc:	01bc300e 	bge	zero,r6,6aafd90 <_dtoa_r+0x578>
 6ab0cd0:	0005883a 	mov	r2,zero
 6ab0cd4:	00d00934 	movhi	r3,16420
 6ab0cd8:	a80b883a 	mov	r5,r21
 6ab0cdc:	180f883a 	mov	r7,r3
 6ab0ce0:	a009883a 	mov	r4,r20
 6ab0ce4:	100d883a 	mov	r6,r2
 6ab0ce8:	6ab405c0 	call	6ab405c <__muldf3>
 6ab0cec:	b1000044 	addi	r4,r22,1
 6ab0cf0:	1021883a 	mov	r16,r2
 6ab0cf4:	1823883a 	mov	r17,r3
 6ab0cf8:	6ab49200 	call	6ab4920 <__floatsidf>
 6ab0cfc:	880b883a 	mov	r5,r17
 6ab0d00:	8009883a 	mov	r4,r16
 6ab0d04:	180f883a 	mov	r7,r3
 6ab0d08:	100d883a 	mov	r6,r2
 6ab0d0c:	6ab405c0 	call	6ab405c <__muldf3>
 6ab0d10:	0011883a 	mov	r8,zero
 6ab0d14:	02500734 	movhi	r9,16412
 6ab0d18:	180b883a 	mov	r5,r3
 6ab0d1c:	480f883a 	mov	r7,r9
 6ab0d20:	1009883a 	mov	r4,r2
 6ab0d24:	400d883a 	mov	r6,r8
 6ab0d28:	6ab3fe80 	call	6ab3fe8 <__adddf3>
 6ab0d2c:	102d883a 	mov	r22,r2
 6ab0d30:	00bf3034 	movhi	r2,64704
 6ab0d34:	10ef883a 	add	r23,r2,r3
 6ab0d38:	d8800d17 	ldw	r2,52(sp)
 6ab0d3c:	d8c00e17 	ldw	r3,56(sp)
 6ab0d40:	8029883a 	mov	r20,r16
 6ab0d44:	10bfffc4 	addi	r2,r2,-1
 6ab0d48:	882b883a 	mov	r21,r17
 6ab0d4c:	d8800415 	stw	r2,16(sp)
 6ab0d50:	d8c00315 	stw	r3,12(sp)
 6ab0d54:	003e8306 	br	6ab0764 <_dtoa_r+0xf4c>
 6ab0d58:	d8800117 	ldw	r2,4(sp)
 6ab0d5c:	dc001117 	ldw	r16,68(sp)
 6ab0d60:	dc801017 	ldw	r18,64(sp)
 6ab0d64:	00c00d84 	movi	r3,54
 6ab0d68:	1887c83a 	sub	r3,r3,r2
 6ab0d6c:	003d6906 	br	6ab0314 <_dtoa_r+0xafc>
 6ab0d70:	01800044 	movi	r6,1
 6ab0d74:	3021883a 	mov	r16,r6
 6ab0d78:	d9800f15 	stw	r6,60(sp)
 6ab0d7c:	d9802615 	stw	r6,152(sp)
 6ab0d80:	d9800e15 	stw	r6,56(sp)
 6ab0d84:	003b9306 	br	6aafbd4 <_dtoa_r+0x3bc>
 6ab0d88:	b021883a 	mov	r16,r22
 6ab0d8c:	dd800f15 	stw	r22,60(sp)
 6ab0d90:	003b9006 	br	6aafbd4 <_dtoa_r+0x3bc>
 6ab0d94:	103e221e 	bne	r2,zero,6ab0620 <_dtoa_r+0xe08>
 6ab0d98:	b880004c 	andi	r2,r23,1
 6ab0d9c:	1005003a 	cmpeq	r2,r2,zero
 6ab0da0:	103e1f1e 	bne	r2,zero,6ab0620 <_dtoa_r+0xe08>
 6ab0da4:	003e1b06 	br	6ab0614 <_dtoa_r+0xdfc>
 6ab0da8:	d9001617 	ldw	r4,88(sp)
 6ab0dac:	980b883a 	mov	r5,r19
 6ab0db0:	01800284 	movi	r6,10
 6ab0db4:	000f883a 	mov	r7,zero
 6ab0db8:	6ab23cc0 	call	6ab23cc <__multadd>
 6ab0dbc:	d8c00e17 	ldw	r3,56(sp)
 6ab0dc0:	1027883a 	mov	r19,r2
 6ab0dc4:	d8c00f15 	stw	r3,60(sp)
 6ab0dc8:	003cd306 	br	6ab0118 <_dtoa_r+0x900>

06ab0dcc <__sflags>:
 6ab0dcc:	28c00007 	ldb	r3,0(r5)
 6ab0dd0:	00801c84 	movi	r2,114
 6ab0dd4:	18800926 	beq	r3,r2,6ab0dfc <__sflags+0x30>
 6ab0dd8:	00801dc4 	movi	r2,119
 6ab0ddc:	18801426 	beq	r3,r2,6ab0e30 <__sflags+0x64>
 6ab0de0:	00801844 	movi	r2,97
 6ab0de4:	18801626 	beq	r3,r2,6ab0e40 <__sflags+0x74>
 6ab0de8:	0007883a 	mov	r3,zero
 6ab0dec:	00800584 	movi	r2,22
 6ab0df0:	20800015 	stw	r2,0(r4)
 6ab0df4:	1805883a 	mov	r2,r3
 6ab0df8:	f800283a 	ret
 6ab0dfc:	000f883a 	mov	r7,zero
 6ab0e00:	0011883a 	mov	r8,zero
 6ab0e04:	00c00104 	movi	r3,4
 6ab0e08:	28800047 	ldb	r2,1(r5)
 6ab0e0c:	10000426 	beq	r2,zero,6ab0e20 <__sflags+0x54>
 6ab0e10:	01000ac4 	movi	r4,43
 6ab0e14:	11000e26 	beq	r2,r4,6ab0e50 <__sflags+0x84>
 6ab0e18:	28800087 	ldb	r2,2(r5)
 6ab0e1c:	11000c26 	beq	r2,r4,6ab0e50 <__sflags+0x84>
 6ab0e20:	3a04b03a 	or	r2,r7,r8
 6ab0e24:	30800015 	stw	r2,0(r6)
 6ab0e28:	1805883a 	mov	r2,r3
 6ab0e2c:	f800283a 	ret
 6ab0e30:	01c00044 	movi	r7,1
 6ab0e34:	02018004 	movi	r8,1536
 6ab0e38:	00c00204 	movi	r3,8
 6ab0e3c:	003ff206 	br	6ab0e08 <__sflags+0x3c>
 6ab0e40:	01c00044 	movi	r7,1
 6ab0e44:	02008204 	movi	r8,520
 6ab0e48:	00c04204 	movi	r3,264
 6ab0e4c:	003fee06 	br	6ab0e08 <__sflags+0x3c>
 6ab0e50:	00bffcc4 	movi	r2,-13
 6ab0e54:	1884703a 	and	r2,r3,r2
 6ab0e58:	01c00084 	movi	r7,2
 6ab0e5c:	10c00414 	ori	r3,r2,16
 6ab0e60:	3a04b03a 	or	r2,r7,r8
 6ab0e64:	30800015 	stw	r2,0(r6)
 6ab0e68:	003fef06 	br	6ab0e28 <__sflags+0x5c>

06ab0e6c <__sfvwrite_r>:
 6ab0e6c:	30800217 	ldw	r2,8(r6)
 6ab0e70:	defff504 	addi	sp,sp,-44
 6ab0e74:	df000915 	stw	fp,36(sp)
 6ab0e78:	dd800715 	stw	r22,28(sp)
 6ab0e7c:	dc800315 	stw	r18,12(sp)
 6ab0e80:	dfc00a15 	stw	ra,40(sp)
 6ab0e84:	ddc00815 	stw	r23,32(sp)
 6ab0e88:	dd400615 	stw	r21,24(sp)
 6ab0e8c:	dd000515 	stw	r20,20(sp)
 6ab0e90:	dcc00415 	stw	r19,16(sp)
 6ab0e94:	dc400215 	stw	r17,8(sp)
 6ab0e98:	dc000115 	stw	r16,4(sp)
 6ab0e9c:	302d883a 	mov	r22,r6
 6ab0ea0:	2039883a 	mov	fp,r4
 6ab0ea4:	2825883a 	mov	r18,r5
 6ab0ea8:	10001c26 	beq	r2,zero,6ab0f1c <__sfvwrite_r+0xb0>
 6ab0eac:	29c0030b 	ldhu	r7,12(r5)
 6ab0eb0:	3880020c 	andi	r2,r7,8
 6ab0eb4:	10002726 	beq	r2,zero,6ab0f54 <__sfvwrite_r+0xe8>
 6ab0eb8:	28800417 	ldw	r2,16(r5)
 6ab0ebc:	10002526 	beq	r2,zero,6ab0f54 <__sfvwrite_r+0xe8>
 6ab0ec0:	3880008c 	andi	r2,r7,2
 6ab0ec4:	b5400017 	ldw	r21,0(r22)
 6ab0ec8:	10002826 	beq	r2,zero,6ab0f6c <__sfvwrite_r+0x100>
 6ab0ecc:	0021883a 	mov	r16,zero
 6ab0ed0:	0023883a 	mov	r17,zero
 6ab0ed4:	880d883a 	mov	r6,r17
 6ab0ed8:	e009883a 	mov	r4,fp
 6ab0edc:	00810004 	movi	r2,1024
 6ab0ee0:	80006e26 	beq	r16,zero,6ab109c <__sfvwrite_r+0x230>
 6ab0ee4:	800f883a 	mov	r7,r16
 6ab0ee8:	91400717 	ldw	r5,28(r18)
 6ab0eec:	1400012e 	bgeu	r2,r16,6ab0ef4 <__sfvwrite_r+0x88>
 6ab0ef0:	100f883a 	mov	r7,r2
 6ab0ef4:	90c00917 	ldw	r3,36(r18)
 6ab0ef8:	183ee83a 	callr	r3
 6ab0efc:	1007883a 	mov	r3,r2
 6ab0f00:	80a1c83a 	sub	r16,r16,r2
 6ab0f04:	88a3883a 	add	r17,r17,r2
 6ab0f08:	00806d0e 	bge	zero,r2,6ab10c0 <__sfvwrite_r+0x254>
 6ab0f0c:	b0800217 	ldw	r2,8(r22)
 6ab0f10:	10c5c83a 	sub	r2,r2,r3
 6ab0f14:	b0800215 	stw	r2,8(r22)
 6ab0f18:	103fee1e 	bne	r2,zero,6ab0ed4 <__sfvwrite_r+0x68>
 6ab0f1c:	0009883a 	mov	r4,zero
 6ab0f20:	2005883a 	mov	r2,r4
 6ab0f24:	dfc00a17 	ldw	ra,40(sp)
 6ab0f28:	df000917 	ldw	fp,36(sp)
 6ab0f2c:	ddc00817 	ldw	r23,32(sp)
 6ab0f30:	dd800717 	ldw	r22,28(sp)
 6ab0f34:	dd400617 	ldw	r21,24(sp)
 6ab0f38:	dd000517 	ldw	r20,20(sp)
 6ab0f3c:	dcc00417 	ldw	r19,16(sp)
 6ab0f40:	dc800317 	ldw	r18,12(sp)
 6ab0f44:	dc400217 	ldw	r17,8(sp)
 6ab0f48:	dc000117 	ldw	r16,4(sp)
 6ab0f4c:	dec00b04 	addi	sp,sp,44
 6ab0f50:	f800283a 	ret
 6ab0f54:	6aaf2a00 	call	6aaf2a0 <__swsetup_r>
 6ab0f58:	1000e41e 	bne	r2,zero,6ab12ec <__sfvwrite_r+0x480>
 6ab0f5c:	91c0030b 	ldhu	r7,12(r18)
 6ab0f60:	b5400017 	ldw	r21,0(r22)
 6ab0f64:	3880008c 	andi	r2,r7,2
 6ab0f68:	103fd81e 	bne	r2,zero,6ab0ecc <__sfvwrite_r+0x60>
 6ab0f6c:	3880004c 	andi	r2,r7,1
 6ab0f70:	1005003a 	cmpeq	r2,r2,zero
 6ab0f74:	10005726 	beq	r2,zero,6ab10d4 <__sfvwrite_r+0x268>
 6ab0f78:	0029883a 	mov	r20,zero
 6ab0f7c:	002f883a 	mov	r23,zero
 6ab0f80:	a0004226 	beq	r20,zero,6ab108c <__sfvwrite_r+0x220>
 6ab0f84:	3880800c 	andi	r2,r7,512
 6ab0f88:	94000217 	ldw	r16,8(r18)
 6ab0f8c:	10008b26 	beq	r2,zero,6ab11bc <__sfvwrite_r+0x350>
 6ab0f90:	800d883a 	mov	r6,r16
 6ab0f94:	a400a536 	bltu	r20,r16,6ab122c <__sfvwrite_r+0x3c0>
 6ab0f98:	3881200c 	andi	r2,r7,1152
 6ab0f9c:	10002726 	beq	r2,zero,6ab103c <__sfvwrite_r+0x1d0>
 6ab0fa0:	90800517 	ldw	r2,20(r18)
 6ab0fa4:	92000417 	ldw	r8,16(r18)
 6ab0fa8:	91400017 	ldw	r5,0(r18)
 6ab0fac:	1087883a 	add	r3,r2,r2
 6ab0fb0:	1887883a 	add	r3,r3,r2
 6ab0fb4:	1808d7fa 	srli	r4,r3,31
 6ab0fb8:	2a21c83a 	sub	r16,r5,r8
 6ab0fbc:	80800044 	addi	r2,r16,1
 6ab0fc0:	20c9883a 	add	r4,r4,r3
 6ab0fc4:	2027d07a 	srai	r19,r4,1
 6ab0fc8:	a085883a 	add	r2,r20,r2
 6ab0fcc:	980d883a 	mov	r6,r19
 6ab0fd0:	9880022e 	bgeu	r19,r2,6ab0fdc <__sfvwrite_r+0x170>
 6ab0fd4:	1027883a 	mov	r19,r2
 6ab0fd8:	100d883a 	mov	r6,r2
 6ab0fdc:	3881000c 	andi	r2,r7,1024
 6ab0fe0:	1000b826 	beq	r2,zero,6ab12c4 <__sfvwrite_r+0x458>
 6ab0fe4:	300b883a 	mov	r5,r6
 6ab0fe8:	e009883a 	mov	r4,fp
 6ab0fec:	6aac35c0 	call	6aac35c <_malloc_r>
 6ab0ff0:	10003126 	beq	r2,zero,6ab10b8 <__sfvwrite_r+0x24c>
 6ab0ff4:	91400417 	ldw	r5,16(r18)
 6ab0ff8:	1009883a 	mov	r4,r2
 6ab0ffc:	800d883a 	mov	r6,r16
 6ab1000:	1023883a 	mov	r17,r2
 6ab1004:	6ab15980 	call	6ab1598 <memcpy>
 6ab1008:	90c0030b 	ldhu	r3,12(r18)
 6ab100c:	00beffc4 	movi	r2,-1025
 6ab1010:	1886703a 	and	r3,r3,r2
 6ab1014:	18c02014 	ori	r3,r3,128
 6ab1018:	90c0030d 	sth	r3,12(r18)
 6ab101c:	9c07c83a 	sub	r3,r19,r16
 6ab1020:	8c05883a 	add	r2,r17,r16
 6ab1024:	a00d883a 	mov	r6,r20
 6ab1028:	a021883a 	mov	r16,r20
 6ab102c:	90800015 	stw	r2,0(r18)
 6ab1030:	90c00215 	stw	r3,8(r18)
 6ab1034:	94400415 	stw	r17,16(r18)
 6ab1038:	94c00515 	stw	r19,20(r18)
 6ab103c:	91000017 	ldw	r4,0(r18)
 6ab1040:	b80b883a 	mov	r5,r23
 6ab1044:	a023883a 	mov	r17,r20
 6ab1048:	6ab16380 	call	6ab1638 <memmove>
 6ab104c:	90c00217 	ldw	r3,8(r18)
 6ab1050:	90800017 	ldw	r2,0(r18)
 6ab1054:	a027883a 	mov	r19,r20
 6ab1058:	1c07c83a 	sub	r3,r3,r16
 6ab105c:	1405883a 	add	r2,r2,r16
 6ab1060:	90c00215 	stw	r3,8(r18)
 6ab1064:	a021883a 	mov	r16,r20
 6ab1068:	90800015 	stw	r2,0(r18)
 6ab106c:	b0800217 	ldw	r2,8(r22)
 6ab1070:	1405c83a 	sub	r2,r2,r16
 6ab1074:	b0800215 	stw	r2,8(r22)
 6ab1078:	103fa826 	beq	r2,zero,6ab0f1c <__sfvwrite_r+0xb0>
 6ab107c:	a469c83a 	sub	r20,r20,r17
 6ab1080:	91c0030b 	ldhu	r7,12(r18)
 6ab1084:	bcef883a 	add	r23,r23,r19
 6ab1088:	a03fbe1e 	bne	r20,zero,6ab0f84 <__sfvwrite_r+0x118>
 6ab108c:	adc00017 	ldw	r23,0(r21)
 6ab1090:	ad000117 	ldw	r20,4(r21)
 6ab1094:	ad400204 	addi	r21,r21,8
 6ab1098:	003fb906 	br	6ab0f80 <__sfvwrite_r+0x114>
 6ab109c:	ac400017 	ldw	r17,0(r21)
 6ab10a0:	ac000117 	ldw	r16,4(r21)
 6ab10a4:	ad400204 	addi	r21,r21,8
 6ab10a8:	003f8a06 	br	6ab0ed4 <__sfvwrite_r+0x68>
 6ab10ac:	91400417 	ldw	r5,16(r18)
 6ab10b0:	e009883a 	mov	r4,fp
 6ab10b4:	6aab8600 	call	6aab860 <_free_r>
 6ab10b8:	00800304 	movi	r2,12
 6ab10bc:	e0800015 	stw	r2,0(fp)
 6ab10c0:	9080030b 	ldhu	r2,12(r18)
 6ab10c4:	013fffc4 	movi	r4,-1
 6ab10c8:	10801014 	ori	r2,r2,64
 6ab10cc:	9080030d 	sth	r2,12(r18)
 6ab10d0:	003f9306 	br	6ab0f20 <__sfvwrite_r+0xb4>
 6ab10d4:	0027883a 	mov	r19,zero
 6ab10d8:	002f883a 	mov	r23,zero
 6ab10dc:	d8000015 	stw	zero,0(sp)
 6ab10e0:	0029883a 	mov	r20,zero
 6ab10e4:	98001e26 	beq	r19,zero,6ab1160 <__sfvwrite_r+0x2f4>
 6ab10e8:	d8c00017 	ldw	r3,0(sp)
 6ab10ec:	1804c03a 	cmpne	r2,r3,zero
 6ab10f0:	10005e26 	beq	r2,zero,6ab126c <__sfvwrite_r+0x400>
 6ab10f4:	9821883a 	mov	r16,r19
 6ab10f8:	a4c0012e 	bgeu	r20,r19,6ab1100 <__sfvwrite_r+0x294>
 6ab10fc:	a021883a 	mov	r16,r20
 6ab1100:	91000017 	ldw	r4,0(r18)
 6ab1104:	90800417 	ldw	r2,16(r18)
 6ab1108:	91800217 	ldw	r6,8(r18)
 6ab110c:	91c00517 	ldw	r7,20(r18)
 6ab1110:	1100022e 	bgeu	r2,r4,6ab111c <__sfvwrite_r+0x2b0>
 6ab1114:	31e3883a 	add	r17,r6,r7
 6ab1118:	8c001616 	blt	r17,r16,6ab1174 <__sfvwrite_r+0x308>
 6ab111c:	81c03816 	blt	r16,r7,6ab1200 <__sfvwrite_r+0x394>
 6ab1120:	90c00917 	ldw	r3,36(r18)
 6ab1124:	91400717 	ldw	r5,28(r18)
 6ab1128:	e009883a 	mov	r4,fp
 6ab112c:	b80d883a 	mov	r6,r23
 6ab1130:	183ee83a 	callr	r3
 6ab1134:	1023883a 	mov	r17,r2
 6ab1138:	00bfe10e 	bge	zero,r2,6ab10c0 <__sfvwrite_r+0x254>
 6ab113c:	a469c83a 	sub	r20,r20,r17
 6ab1140:	a0001826 	beq	r20,zero,6ab11a4 <__sfvwrite_r+0x338>
 6ab1144:	b0800217 	ldw	r2,8(r22)
 6ab1148:	1445c83a 	sub	r2,r2,r17
 6ab114c:	b0800215 	stw	r2,8(r22)
 6ab1150:	103f7226 	beq	r2,zero,6ab0f1c <__sfvwrite_r+0xb0>
 6ab1154:	9c67c83a 	sub	r19,r19,r17
 6ab1158:	bc6f883a 	add	r23,r23,r17
 6ab115c:	983fe21e 	bne	r19,zero,6ab10e8 <__sfvwrite_r+0x27c>
 6ab1160:	adc00017 	ldw	r23,0(r21)
 6ab1164:	acc00117 	ldw	r19,4(r21)
 6ab1168:	ad400204 	addi	r21,r21,8
 6ab116c:	d8000015 	stw	zero,0(sp)
 6ab1170:	003fdc06 	br	6ab10e4 <__sfvwrite_r+0x278>
 6ab1174:	b80b883a 	mov	r5,r23
 6ab1178:	880d883a 	mov	r6,r17
 6ab117c:	6ab16380 	call	6ab1638 <memmove>
 6ab1180:	90c00017 	ldw	r3,0(r18)
 6ab1184:	e009883a 	mov	r4,fp
 6ab1188:	900b883a 	mov	r5,r18
 6ab118c:	1c47883a 	add	r3,r3,r17
 6ab1190:	90c00015 	stw	r3,0(r18)
 6ab1194:	6aab0180 	call	6aab018 <_fflush_r>
 6ab1198:	103fc91e 	bne	r2,zero,6ab10c0 <__sfvwrite_r+0x254>
 6ab119c:	a469c83a 	sub	r20,r20,r17
 6ab11a0:	a03fe81e 	bne	r20,zero,6ab1144 <__sfvwrite_r+0x2d8>
 6ab11a4:	e009883a 	mov	r4,fp
 6ab11a8:	900b883a 	mov	r5,r18
 6ab11ac:	6aab0180 	call	6aab018 <_fflush_r>
 6ab11b0:	103fc31e 	bne	r2,zero,6ab10c0 <__sfvwrite_r+0x254>
 6ab11b4:	d8000015 	stw	zero,0(sp)
 6ab11b8:	003fe206 	br	6ab1144 <__sfvwrite_r+0x2d8>
 6ab11bc:	91000017 	ldw	r4,0(r18)
 6ab11c0:	90800417 	ldw	r2,16(r18)
 6ab11c4:	1100022e 	bgeu	r2,r4,6ab11d0 <__sfvwrite_r+0x364>
 6ab11c8:	8023883a 	mov	r17,r16
 6ab11cc:	85003136 	bltu	r16,r20,6ab1294 <__sfvwrite_r+0x428>
 6ab11d0:	91c00517 	ldw	r7,20(r18)
 6ab11d4:	a1c01836 	bltu	r20,r7,6ab1238 <__sfvwrite_r+0x3cc>
 6ab11d8:	90c00917 	ldw	r3,36(r18)
 6ab11dc:	91400717 	ldw	r5,28(r18)
 6ab11e0:	e009883a 	mov	r4,fp
 6ab11e4:	b80d883a 	mov	r6,r23
 6ab11e8:	183ee83a 	callr	r3
 6ab11ec:	1021883a 	mov	r16,r2
 6ab11f0:	00bfb30e 	bge	zero,r2,6ab10c0 <__sfvwrite_r+0x254>
 6ab11f4:	1023883a 	mov	r17,r2
 6ab11f8:	1027883a 	mov	r19,r2
 6ab11fc:	003f9b06 	br	6ab106c <__sfvwrite_r+0x200>
 6ab1200:	b80b883a 	mov	r5,r23
 6ab1204:	800d883a 	mov	r6,r16
 6ab1208:	6ab16380 	call	6ab1638 <memmove>
 6ab120c:	90c00217 	ldw	r3,8(r18)
 6ab1210:	90800017 	ldw	r2,0(r18)
 6ab1214:	8023883a 	mov	r17,r16
 6ab1218:	1c07c83a 	sub	r3,r3,r16
 6ab121c:	1405883a 	add	r2,r2,r16
 6ab1220:	90c00215 	stw	r3,8(r18)
 6ab1224:	90800015 	stw	r2,0(r18)
 6ab1228:	003fc406 	br	6ab113c <__sfvwrite_r+0x2d0>
 6ab122c:	a00d883a 	mov	r6,r20
 6ab1230:	a021883a 	mov	r16,r20
 6ab1234:	003f8106 	br	6ab103c <__sfvwrite_r+0x1d0>
 6ab1238:	b80b883a 	mov	r5,r23
 6ab123c:	a00d883a 	mov	r6,r20
 6ab1240:	6ab16380 	call	6ab1638 <memmove>
 6ab1244:	90c00217 	ldw	r3,8(r18)
 6ab1248:	90800017 	ldw	r2,0(r18)
 6ab124c:	a021883a 	mov	r16,r20
 6ab1250:	1d07c83a 	sub	r3,r3,r20
 6ab1254:	1505883a 	add	r2,r2,r20
 6ab1258:	a023883a 	mov	r17,r20
 6ab125c:	a027883a 	mov	r19,r20
 6ab1260:	90c00215 	stw	r3,8(r18)
 6ab1264:	90800015 	stw	r2,0(r18)
 6ab1268:	003f8006 	br	6ab106c <__sfvwrite_r+0x200>
 6ab126c:	b809883a 	mov	r4,r23
 6ab1270:	01400284 	movi	r5,10
 6ab1274:	980d883a 	mov	r6,r19
 6ab1278:	6ab14b40 	call	6ab14b4 <memchr>
 6ab127c:	10001726 	beq	r2,zero,6ab12dc <__sfvwrite_r+0x470>
 6ab1280:	15c5c83a 	sub	r2,r2,r23
 6ab1284:	15000044 	addi	r20,r2,1
 6ab1288:	00800044 	movi	r2,1
 6ab128c:	d8800015 	stw	r2,0(sp)
 6ab1290:	003f9806 	br	6ab10f4 <__sfvwrite_r+0x288>
 6ab1294:	b80b883a 	mov	r5,r23
 6ab1298:	800d883a 	mov	r6,r16
 6ab129c:	6ab16380 	call	6ab1638 <memmove>
 6ab12a0:	90c00017 	ldw	r3,0(r18)
 6ab12a4:	e009883a 	mov	r4,fp
 6ab12a8:	900b883a 	mov	r5,r18
 6ab12ac:	1c07883a 	add	r3,r3,r16
 6ab12b0:	90c00015 	stw	r3,0(r18)
 6ab12b4:	8027883a 	mov	r19,r16
 6ab12b8:	6aab0180 	call	6aab018 <_fflush_r>
 6ab12bc:	103f6b26 	beq	r2,zero,6ab106c <__sfvwrite_r+0x200>
 6ab12c0:	003f7f06 	br	6ab10c0 <__sfvwrite_r+0x254>
 6ab12c4:	400b883a 	mov	r5,r8
 6ab12c8:	e009883a 	mov	r4,fp
 6ab12cc:	6ab27840 	call	6ab2784 <_realloc_r>
 6ab12d0:	103f7626 	beq	r2,zero,6ab10ac <__sfvwrite_r+0x240>
 6ab12d4:	1023883a 	mov	r17,r2
 6ab12d8:	003f5006 	br	6ab101c <__sfvwrite_r+0x1b0>
 6ab12dc:	00c00044 	movi	r3,1
 6ab12e0:	9d000044 	addi	r20,r19,1
 6ab12e4:	d8c00015 	stw	r3,0(sp)
 6ab12e8:	003f8206 	br	6ab10f4 <__sfvwrite_r+0x288>
 6ab12ec:	9080030b 	ldhu	r2,12(r18)
 6ab12f0:	00c00244 	movi	r3,9
 6ab12f4:	013fffc4 	movi	r4,-1
 6ab12f8:	10801014 	ori	r2,r2,64
 6ab12fc:	9080030d 	sth	r2,12(r18)
 6ab1300:	e0c00015 	stw	r3,0(fp)
 6ab1304:	003f0606 	br	6ab0f20 <__sfvwrite_r+0xb4>

06ab1308 <_isatty_r>:
 6ab1308:	defffd04 	addi	sp,sp,-12
 6ab130c:	dc000015 	stw	r16,0(sp)
 6ab1310:	0401ab34 	movhi	r16,1708
 6ab1314:	84308504 	addi	r16,r16,-15852
 6ab1318:	dc400115 	stw	r17,4(sp)
 6ab131c:	80000015 	stw	zero,0(r16)
 6ab1320:	2023883a 	mov	r17,r4
 6ab1324:	2809883a 	mov	r4,r5
 6ab1328:	dfc00215 	stw	ra,8(sp)
 6ab132c:	6ab57180 	call	6ab5718 <isatty>
 6ab1330:	1007883a 	mov	r3,r2
 6ab1334:	00bfffc4 	movi	r2,-1
 6ab1338:	18800626 	beq	r3,r2,6ab1354 <_isatty_r+0x4c>
 6ab133c:	1805883a 	mov	r2,r3
 6ab1340:	dfc00217 	ldw	ra,8(sp)
 6ab1344:	dc400117 	ldw	r17,4(sp)
 6ab1348:	dc000017 	ldw	r16,0(sp)
 6ab134c:	dec00304 	addi	sp,sp,12
 6ab1350:	f800283a 	ret
 6ab1354:	80800017 	ldw	r2,0(r16)
 6ab1358:	103ff826 	beq	r2,zero,6ab133c <_isatty_r+0x34>
 6ab135c:	88800015 	stw	r2,0(r17)
 6ab1360:	1805883a 	mov	r2,r3
 6ab1364:	dfc00217 	ldw	ra,8(sp)
 6ab1368:	dc400117 	ldw	r17,4(sp)
 6ab136c:	dc000017 	ldw	r16,0(sp)
 6ab1370:	dec00304 	addi	sp,sp,12
 6ab1374:	f800283a 	ret

06ab1378 <__locale_charset>:
 6ab1378:	d0a00517 	ldw	r2,-32748(gp)
 6ab137c:	f800283a 	ret

06ab1380 <_localeconv_r>:
 6ab1380:	0081ab34 	movhi	r2,1708
 6ab1384:	10a27504 	addi	r2,r2,-30252
 6ab1388:	f800283a 	ret

06ab138c <localeconv>:
 6ab138c:	0081ab34 	movhi	r2,1708
 6ab1390:	10a9b004 	addi	r2,r2,-22848
 6ab1394:	11000017 	ldw	r4,0(r2)
 6ab1398:	6ab13801 	jmpi	6ab1380 <_localeconv_r>

06ab139c <_setlocale_r>:
 6ab139c:	defffc04 	addi	sp,sp,-16
 6ab13a0:	00c1ab34 	movhi	r3,1708
 6ab13a4:	18e24c04 	addi	r3,r3,-30416
 6ab13a8:	dc800215 	stw	r18,8(sp)
 6ab13ac:	dc400115 	stw	r17,4(sp)
 6ab13b0:	dc000015 	stw	r16,0(sp)
 6ab13b4:	2023883a 	mov	r17,r4
 6ab13b8:	2825883a 	mov	r18,r5
 6ab13bc:	dfc00315 	stw	ra,12(sp)
 6ab13c0:	3021883a 	mov	r16,r6
 6ab13c4:	3009883a 	mov	r4,r6
 6ab13c8:	180b883a 	mov	r5,r3
 6ab13cc:	30000926 	beq	r6,zero,6ab13f4 <_setlocale_r+0x58>
 6ab13d0:	6ab2de80 	call	6ab2de8 <strcmp>
 6ab13d4:	8009883a 	mov	r4,r16
 6ab13d8:	0141ab34 	movhi	r5,1708
 6ab13dc:	29625c04 	addi	r5,r5,-30352
 6ab13e0:	10000b1e 	bne	r2,zero,6ab1410 <_setlocale_r+0x74>
 6ab13e4:	8c000d15 	stw	r16,52(r17)
 6ab13e8:	8c800c15 	stw	r18,48(r17)
 6ab13ec:	00c1ab34 	movhi	r3,1708
 6ab13f0:	18e24c04 	addi	r3,r3,-30416
 6ab13f4:	1805883a 	mov	r2,r3
 6ab13f8:	dfc00317 	ldw	ra,12(sp)
 6ab13fc:	dc800217 	ldw	r18,8(sp)
 6ab1400:	dc400117 	ldw	r17,4(sp)
 6ab1404:	dc000017 	ldw	r16,0(sp)
 6ab1408:	dec00404 	addi	sp,sp,16
 6ab140c:	f800283a 	ret
 6ab1410:	6ab2de80 	call	6ab2de8 <strcmp>
 6ab1414:	0007883a 	mov	r3,zero
 6ab1418:	103ff226 	beq	r2,zero,6ab13e4 <_setlocale_r+0x48>
 6ab141c:	003ff506 	br	6ab13f4 <_setlocale_r+0x58>

06ab1420 <setlocale>:
 6ab1420:	0181ab34 	movhi	r6,1708
 6ab1424:	31a9b004 	addi	r6,r6,-22848
 6ab1428:	2007883a 	mov	r3,r4
 6ab142c:	31000017 	ldw	r4,0(r6)
 6ab1430:	280d883a 	mov	r6,r5
 6ab1434:	180b883a 	mov	r5,r3
 6ab1438:	6ab139c1 	jmpi	6ab139c <_setlocale_r>

06ab143c <_lseek_r>:
 6ab143c:	defffd04 	addi	sp,sp,-12
 6ab1440:	dc000015 	stw	r16,0(sp)
 6ab1444:	0401ab34 	movhi	r16,1708
 6ab1448:	84308504 	addi	r16,r16,-15852
 6ab144c:	dc400115 	stw	r17,4(sp)
 6ab1450:	80000015 	stw	zero,0(r16)
 6ab1454:	2023883a 	mov	r17,r4
 6ab1458:	2809883a 	mov	r4,r5
 6ab145c:	300b883a 	mov	r5,r6
 6ab1460:	380d883a 	mov	r6,r7
 6ab1464:	dfc00215 	stw	ra,8(sp)
 6ab1468:	6ab59240 	call	6ab5924 <lseek>
 6ab146c:	1007883a 	mov	r3,r2
 6ab1470:	00bfffc4 	movi	r2,-1
 6ab1474:	18800626 	beq	r3,r2,6ab1490 <_lseek_r+0x54>
 6ab1478:	1805883a 	mov	r2,r3
 6ab147c:	dfc00217 	ldw	ra,8(sp)
 6ab1480:	dc400117 	ldw	r17,4(sp)
 6ab1484:	dc000017 	ldw	r16,0(sp)
 6ab1488:	dec00304 	addi	sp,sp,12
 6ab148c:	f800283a 	ret
 6ab1490:	80800017 	ldw	r2,0(r16)
 6ab1494:	103ff826 	beq	r2,zero,6ab1478 <_lseek_r+0x3c>
 6ab1498:	88800015 	stw	r2,0(r17)
 6ab149c:	1805883a 	mov	r2,r3
 6ab14a0:	dfc00217 	ldw	ra,8(sp)
 6ab14a4:	dc400117 	ldw	r17,4(sp)
 6ab14a8:	dc000017 	ldw	r16,0(sp)
 6ab14ac:	dec00304 	addi	sp,sp,12
 6ab14b0:	f800283a 	ret

06ab14b4 <memchr>:
 6ab14b4:	008000c4 	movi	r2,3
 6ab14b8:	29403fcc 	andi	r5,r5,255
 6ab14bc:	2007883a 	mov	r3,r4
 6ab14c0:	1180022e 	bgeu	r2,r6,6ab14cc <memchr+0x18>
 6ab14c4:	2084703a 	and	r2,r4,r2
 6ab14c8:	10000b26 	beq	r2,zero,6ab14f8 <memchr+0x44>
 6ab14cc:	313fffc4 	addi	r4,r6,-1
 6ab14d0:	3000051e 	bne	r6,zero,6ab14e8 <memchr+0x34>
 6ab14d4:	00002c06 	br	6ab1588 <memchr+0xd4>
 6ab14d8:	213fffc4 	addi	r4,r4,-1
 6ab14dc:	00bfffc4 	movi	r2,-1
 6ab14e0:	18c00044 	addi	r3,r3,1
 6ab14e4:	20802826 	beq	r4,r2,6ab1588 <memchr+0xd4>
 6ab14e8:	18800003 	ldbu	r2,0(r3)
 6ab14ec:	28bffa1e 	bne	r5,r2,6ab14d8 <memchr+0x24>
 6ab14f0:	1805883a 	mov	r2,r3
 6ab14f4:	f800283a 	ret
 6ab14f8:	0011883a 	mov	r8,zero
 6ab14fc:	0007883a 	mov	r3,zero
 6ab1500:	01c00104 	movi	r7,4
 6ab1504:	4004923a 	slli	r2,r8,8
 6ab1508:	18c00044 	addi	r3,r3,1
 6ab150c:	1151883a 	add	r8,r2,r5
 6ab1510:	19fffc1e 	bne	r3,r7,6ab1504 <memchr+0x50>
 6ab1514:	02bfbff4 	movhi	r10,65279
 6ab1518:	52bfbfc4 	addi	r10,r10,-257
 6ab151c:	02602074 	movhi	r9,32897
 6ab1520:	4a602004 	addi	r9,r9,-32640
 6ab1524:	02c000c4 	movi	r11,3
 6ab1528:	20800017 	ldw	r2,0(r4)
 6ab152c:	31bfff04 	addi	r6,r6,-4
 6ab1530:	200f883a 	mov	r7,r4
 6ab1534:	1204f03a 	xor	r2,r2,r8
 6ab1538:	1287883a 	add	r3,r2,r10
 6ab153c:	1a46703a 	and	r3,r3,r9
 6ab1540:	0084303a 	nor	r2,zero,r2
 6ab1544:	10c4703a 	and	r2,r2,r3
 6ab1548:	10000b26 	beq	r2,zero,6ab1578 <memchr+0xc4>
 6ab154c:	20800003 	ldbu	r2,0(r4)
 6ab1550:	28800f26 	beq	r5,r2,6ab1590 <memchr+0xdc>
 6ab1554:	20800043 	ldbu	r2,1(r4)
 6ab1558:	21c00044 	addi	r7,r4,1
 6ab155c:	28800c26 	beq	r5,r2,6ab1590 <memchr+0xdc>
 6ab1560:	20800083 	ldbu	r2,2(r4)
 6ab1564:	21c00084 	addi	r7,r4,2
 6ab1568:	28800926 	beq	r5,r2,6ab1590 <memchr+0xdc>
 6ab156c:	208000c3 	ldbu	r2,3(r4)
 6ab1570:	21c000c4 	addi	r7,r4,3
 6ab1574:	28800626 	beq	r5,r2,6ab1590 <memchr+0xdc>
 6ab1578:	21000104 	addi	r4,r4,4
 6ab157c:	59bfea36 	bltu	r11,r6,6ab1528 <memchr+0x74>
 6ab1580:	2007883a 	mov	r3,r4
 6ab1584:	003fd106 	br	6ab14cc <memchr+0x18>
 6ab1588:	0005883a 	mov	r2,zero
 6ab158c:	f800283a 	ret
 6ab1590:	3805883a 	mov	r2,r7
 6ab1594:	f800283a 	ret

06ab1598 <memcpy>:
 6ab1598:	01c003c4 	movi	r7,15
 6ab159c:	2007883a 	mov	r3,r4
 6ab15a0:	3980032e 	bgeu	r7,r6,6ab15b0 <memcpy+0x18>
 6ab15a4:	2904b03a 	or	r2,r5,r4
 6ab15a8:	108000cc 	andi	r2,r2,3
 6ab15ac:	10000926 	beq	r2,zero,6ab15d4 <memcpy+0x3c>
 6ab15b0:	30000626 	beq	r6,zero,6ab15cc <memcpy+0x34>
 6ab15b4:	30cd883a 	add	r6,r6,r3
 6ab15b8:	28800003 	ldbu	r2,0(r5)
 6ab15bc:	29400044 	addi	r5,r5,1
 6ab15c0:	18800005 	stb	r2,0(r3)
 6ab15c4:	18c00044 	addi	r3,r3,1
 6ab15c8:	30fffb1e 	bne	r6,r3,6ab15b8 <memcpy+0x20>
 6ab15cc:	2005883a 	mov	r2,r4
 6ab15d0:	f800283a 	ret
 6ab15d4:	3811883a 	mov	r8,r7
 6ab15d8:	200f883a 	mov	r7,r4
 6ab15dc:	28c00017 	ldw	r3,0(r5)
 6ab15e0:	31bffc04 	addi	r6,r6,-16
 6ab15e4:	38c00015 	stw	r3,0(r7)
 6ab15e8:	28800117 	ldw	r2,4(r5)
 6ab15ec:	38800115 	stw	r2,4(r7)
 6ab15f0:	28c00217 	ldw	r3,8(r5)
 6ab15f4:	38c00215 	stw	r3,8(r7)
 6ab15f8:	28800317 	ldw	r2,12(r5)
 6ab15fc:	29400404 	addi	r5,r5,16
 6ab1600:	38800315 	stw	r2,12(r7)
 6ab1604:	39c00404 	addi	r7,r7,16
 6ab1608:	41bff436 	bltu	r8,r6,6ab15dc <memcpy+0x44>
 6ab160c:	008000c4 	movi	r2,3
 6ab1610:	1180072e 	bgeu	r2,r6,6ab1630 <memcpy+0x98>
 6ab1614:	1007883a 	mov	r3,r2
 6ab1618:	28800017 	ldw	r2,0(r5)
 6ab161c:	31bfff04 	addi	r6,r6,-4
 6ab1620:	29400104 	addi	r5,r5,4
 6ab1624:	38800015 	stw	r2,0(r7)
 6ab1628:	39c00104 	addi	r7,r7,4
 6ab162c:	19bffa36 	bltu	r3,r6,6ab1618 <memcpy+0x80>
 6ab1630:	3807883a 	mov	r3,r7
 6ab1634:	003fde06 	br	6ab15b0 <memcpy+0x18>

06ab1638 <memmove>:
 6ab1638:	2807883a 	mov	r3,r5
 6ab163c:	2011883a 	mov	r8,r4
 6ab1640:	29000c2e 	bgeu	r5,r4,6ab1674 <memmove+0x3c>
 6ab1644:	298f883a 	add	r7,r5,r6
 6ab1648:	21c00a2e 	bgeu	r4,r7,6ab1674 <memmove+0x3c>
 6ab164c:	30000726 	beq	r6,zero,6ab166c <memmove+0x34>
 6ab1650:	2187883a 	add	r3,r4,r6
 6ab1654:	198dc83a 	sub	r6,r3,r6
 6ab1658:	39ffffc4 	addi	r7,r7,-1
 6ab165c:	38800003 	ldbu	r2,0(r7)
 6ab1660:	18ffffc4 	addi	r3,r3,-1
 6ab1664:	18800005 	stb	r2,0(r3)
 6ab1668:	19bffb1e 	bne	r3,r6,6ab1658 <memmove+0x20>
 6ab166c:	2005883a 	mov	r2,r4
 6ab1670:	f800283a 	ret
 6ab1674:	01c003c4 	movi	r7,15
 6ab1678:	39800a36 	bltu	r7,r6,6ab16a4 <memmove+0x6c>
 6ab167c:	303ffb26 	beq	r6,zero,6ab166c <memmove+0x34>
 6ab1680:	400f883a 	mov	r7,r8
 6ab1684:	320d883a 	add	r6,r6,r8
 6ab1688:	28800003 	ldbu	r2,0(r5)
 6ab168c:	29400044 	addi	r5,r5,1
 6ab1690:	38800005 	stb	r2,0(r7)
 6ab1694:	39c00044 	addi	r7,r7,1
 6ab1698:	39bffb1e 	bne	r7,r6,6ab1688 <memmove+0x50>
 6ab169c:	2005883a 	mov	r2,r4
 6ab16a0:	f800283a 	ret
 6ab16a4:	1904b03a 	or	r2,r3,r4
 6ab16a8:	108000cc 	andi	r2,r2,3
 6ab16ac:	103ff31e 	bne	r2,zero,6ab167c <memmove+0x44>
 6ab16b0:	3811883a 	mov	r8,r7
 6ab16b4:	180b883a 	mov	r5,r3
 6ab16b8:	200f883a 	mov	r7,r4
 6ab16bc:	28c00017 	ldw	r3,0(r5)
 6ab16c0:	31bffc04 	addi	r6,r6,-16
 6ab16c4:	38c00015 	stw	r3,0(r7)
 6ab16c8:	28800117 	ldw	r2,4(r5)
 6ab16cc:	38800115 	stw	r2,4(r7)
 6ab16d0:	28c00217 	ldw	r3,8(r5)
 6ab16d4:	38c00215 	stw	r3,8(r7)
 6ab16d8:	28800317 	ldw	r2,12(r5)
 6ab16dc:	29400404 	addi	r5,r5,16
 6ab16e0:	38800315 	stw	r2,12(r7)
 6ab16e4:	39c00404 	addi	r7,r7,16
 6ab16e8:	41bff436 	bltu	r8,r6,6ab16bc <memmove+0x84>
 6ab16ec:	008000c4 	movi	r2,3
 6ab16f0:	1180072e 	bgeu	r2,r6,6ab1710 <memmove+0xd8>
 6ab16f4:	1007883a 	mov	r3,r2
 6ab16f8:	28800017 	ldw	r2,0(r5)
 6ab16fc:	31bfff04 	addi	r6,r6,-4
 6ab1700:	29400104 	addi	r5,r5,4
 6ab1704:	38800015 	stw	r2,0(r7)
 6ab1708:	39c00104 	addi	r7,r7,4
 6ab170c:	19bffa36 	bltu	r3,r6,6ab16f8 <memmove+0xc0>
 6ab1710:	3811883a 	mov	r8,r7
 6ab1714:	003fd906 	br	6ab167c <memmove+0x44>

06ab1718 <_Bfree>:
 6ab1718:	28000826 	beq	r5,zero,6ab173c <_Bfree+0x24>
 6ab171c:	28800117 	ldw	r2,4(r5)
 6ab1720:	21001317 	ldw	r4,76(r4)
 6ab1724:	1085883a 	add	r2,r2,r2
 6ab1728:	1085883a 	add	r2,r2,r2
 6ab172c:	1105883a 	add	r2,r2,r4
 6ab1730:	10c00017 	ldw	r3,0(r2)
 6ab1734:	28c00015 	stw	r3,0(r5)
 6ab1738:	11400015 	stw	r5,0(r2)
 6ab173c:	f800283a 	ret

06ab1740 <__hi0bits>:
 6ab1740:	20bfffec 	andhi	r2,r4,65535
 6ab1744:	10001426 	beq	r2,zero,6ab1798 <__hi0bits+0x58>
 6ab1748:	0007883a 	mov	r3,zero
 6ab174c:	20bfc02c 	andhi	r2,r4,65280
 6ab1750:	1000021e 	bne	r2,zero,6ab175c <__hi0bits+0x1c>
 6ab1754:	2008923a 	slli	r4,r4,8
 6ab1758:	18c00204 	addi	r3,r3,8
 6ab175c:	20bc002c 	andhi	r2,r4,61440
 6ab1760:	1000021e 	bne	r2,zero,6ab176c <__hi0bits+0x2c>
 6ab1764:	2008913a 	slli	r4,r4,4
 6ab1768:	18c00104 	addi	r3,r3,4
 6ab176c:	20b0002c 	andhi	r2,r4,49152
 6ab1770:	1000031e 	bne	r2,zero,6ab1780 <__hi0bits+0x40>
 6ab1774:	2105883a 	add	r2,r4,r4
 6ab1778:	18c00084 	addi	r3,r3,2
 6ab177c:	1089883a 	add	r4,r2,r2
 6ab1780:	20000316 	blt	r4,zero,6ab1790 <__hi0bits+0x50>
 6ab1784:	2090002c 	andhi	r2,r4,16384
 6ab1788:	10000626 	beq	r2,zero,6ab17a4 <__hi0bits+0x64>
 6ab178c:	18c00044 	addi	r3,r3,1
 6ab1790:	1805883a 	mov	r2,r3
 6ab1794:	f800283a 	ret
 6ab1798:	2008943a 	slli	r4,r4,16
 6ab179c:	00c00404 	movi	r3,16
 6ab17a0:	003fea06 	br	6ab174c <__hi0bits+0xc>
 6ab17a4:	00c00804 	movi	r3,32
 6ab17a8:	1805883a 	mov	r2,r3
 6ab17ac:	f800283a 	ret

06ab17b0 <__lo0bits>:
 6ab17b0:	20c00017 	ldw	r3,0(r4)
 6ab17b4:	188001cc 	andi	r2,r3,7
 6ab17b8:	10000a26 	beq	r2,zero,6ab17e4 <__lo0bits+0x34>
 6ab17bc:	1880004c 	andi	r2,r3,1
 6ab17c0:	1005003a 	cmpeq	r2,r2,zero
 6ab17c4:	10002126 	beq	r2,zero,6ab184c <__lo0bits+0x9c>
 6ab17c8:	1880008c 	andi	r2,r3,2
 6ab17cc:	1000251e 	bne	r2,zero,6ab1864 <__lo0bits+0xb4>
 6ab17d0:	1804d0ba 	srli	r2,r3,2
 6ab17d4:	01400084 	movi	r5,2
 6ab17d8:	20800015 	stw	r2,0(r4)
 6ab17dc:	2805883a 	mov	r2,r5
 6ab17e0:	f800283a 	ret
 6ab17e4:	18bfffcc 	andi	r2,r3,65535
 6ab17e8:	10001526 	beq	r2,zero,6ab1840 <__lo0bits+0x90>
 6ab17ec:	000b883a 	mov	r5,zero
 6ab17f0:	18803fcc 	andi	r2,r3,255
 6ab17f4:	1000021e 	bne	r2,zero,6ab1800 <__lo0bits+0x50>
 6ab17f8:	1806d23a 	srli	r3,r3,8
 6ab17fc:	29400204 	addi	r5,r5,8
 6ab1800:	188003cc 	andi	r2,r3,15
 6ab1804:	1000021e 	bne	r2,zero,6ab1810 <__lo0bits+0x60>
 6ab1808:	1806d13a 	srli	r3,r3,4
 6ab180c:	29400104 	addi	r5,r5,4
 6ab1810:	188000cc 	andi	r2,r3,3
 6ab1814:	1000021e 	bne	r2,zero,6ab1820 <__lo0bits+0x70>
 6ab1818:	1806d0ba 	srli	r3,r3,2
 6ab181c:	29400084 	addi	r5,r5,2
 6ab1820:	1880004c 	andi	r2,r3,1
 6ab1824:	1000031e 	bne	r2,zero,6ab1834 <__lo0bits+0x84>
 6ab1828:	1806d07a 	srli	r3,r3,1
 6ab182c:	18000a26 	beq	r3,zero,6ab1858 <__lo0bits+0xa8>
 6ab1830:	29400044 	addi	r5,r5,1
 6ab1834:	2805883a 	mov	r2,r5
 6ab1838:	20c00015 	stw	r3,0(r4)
 6ab183c:	f800283a 	ret
 6ab1840:	1806d43a 	srli	r3,r3,16
 6ab1844:	01400404 	movi	r5,16
 6ab1848:	003fe906 	br	6ab17f0 <__lo0bits+0x40>
 6ab184c:	000b883a 	mov	r5,zero
 6ab1850:	2805883a 	mov	r2,r5
 6ab1854:	f800283a 	ret
 6ab1858:	01400804 	movi	r5,32
 6ab185c:	2805883a 	mov	r2,r5
 6ab1860:	f800283a 	ret
 6ab1864:	1804d07a 	srli	r2,r3,1
 6ab1868:	01400044 	movi	r5,1
 6ab186c:	20800015 	stw	r2,0(r4)
 6ab1870:	003fda06 	br	6ab17dc <__lo0bits+0x2c>

06ab1874 <__mcmp>:
 6ab1874:	20800417 	ldw	r2,16(r4)
 6ab1878:	28c00417 	ldw	r3,16(r5)
 6ab187c:	10cfc83a 	sub	r7,r2,r3
 6ab1880:	38000c1e 	bne	r7,zero,6ab18b4 <__mcmp+0x40>
 6ab1884:	18c5883a 	add	r2,r3,r3
 6ab1888:	1085883a 	add	r2,r2,r2
 6ab188c:	10c00504 	addi	r3,r2,20
 6ab1890:	21000504 	addi	r4,r4,20
 6ab1894:	28cb883a 	add	r5,r5,r3
 6ab1898:	2085883a 	add	r2,r4,r2
 6ab189c:	10bfff04 	addi	r2,r2,-4
 6ab18a0:	297fff04 	addi	r5,r5,-4
 6ab18a4:	11800017 	ldw	r6,0(r2)
 6ab18a8:	28c00017 	ldw	r3,0(r5)
 6ab18ac:	30c0031e 	bne	r6,r3,6ab18bc <__mcmp+0x48>
 6ab18b0:	20bffa36 	bltu	r4,r2,6ab189c <__mcmp+0x28>
 6ab18b4:	3805883a 	mov	r2,r7
 6ab18b8:	f800283a 	ret
 6ab18bc:	30c00336 	bltu	r6,r3,6ab18cc <__mcmp+0x58>
 6ab18c0:	01c00044 	movi	r7,1
 6ab18c4:	3805883a 	mov	r2,r7
 6ab18c8:	f800283a 	ret
 6ab18cc:	01ffffc4 	movi	r7,-1
 6ab18d0:	003ff806 	br	6ab18b4 <__mcmp+0x40>

06ab18d4 <__ulp>:
 6ab18d4:	295ffc2c 	andhi	r5,r5,32752
 6ab18d8:	013f3034 	movhi	r4,64704
 6ab18dc:	290b883a 	add	r5,r5,r4
 6ab18e0:	0145c83a 	sub	r2,zero,r5
 6ab18e4:	1007d53a 	srai	r3,r2,20
 6ab18e8:	000d883a 	mov	r6,zero
 6ab18ec:	0140040e 	bge	zero,r5,6ab1900 <__ulp+0x2c>
 6ab18f0:	280f883a 	mov	r7,r5
 6ab18f4:	3807883a 	mov	r3,r7
 6ab18f8:	3005883a 	mov	r2,r6
 6ab18fc:	f800283a 	ret
 6ab1900:	008004c4 	movi	r2,19
 6ab1904:	193ffb04 	addi	r4,r3,-20
 6ab1908:	10c00c0e 	bge	r2,r3,6ab193c <__ulp+0x68>
 6ab190c:	008007c4 	movi	r2,31
 6ab1910:	1107c83a 	sub	r3,r2,r4
 6ab1914:	00800784 	movi	r2,30
 6ab1918:	01400044 	movi	r5,1
 6ab191c:	11000216 	blt	r2,r4,6ab1928 <__ulp+0x54>
 6ab1920:	00800044 	movi	r2,1
 6ab1924:	10ca983a 	sll	r5,r2,r3
 6ab1928:	000f883a 	mov	r7,zero
 6ab192c:	280d883a 	mov	r6,r5
 6ab1930:	3807883a 	mov	r3,r7
 6ab1934:	3005883a 	mov	r2,r6
 6ab1938:	f800283a 	ret
 6ab193c:	00800234 	movhi	r2,8
 6ab1940:	10cfd83a 	sra	r7,r2,r3
 6ab1944:	000d883a 	mov	r6,zero
 6ab1948:	3005883a 	mov	r2,r6
 6ab194c:	3807883a 	mov	r3,r7
 6ab1950:	f800283a 	ret

06ab1954 <__b2d>:
 6ab1954:	20800417 	ldw	r2,16(r4)
 6ab1958:	defff904 	addi	sp,sp,-28
 6ab195c:	dd000415 	stw	r20,16(sp)
 6ab1960:	1085883a 	add	r2,r2,r2
 6ab1964:	25000504 	addi	r20,r4,20
 6ab1968:	1085883a 	add	r2,r2,r2
 6ab196c:	dc000015 	stw	r16,0(sp)
 6ab1970:	a0a1883a 	add	r16,r20,r2
 6ab1974:	dd400515 	stw	r21,20(sp)
 6ab1978:	857fff17 	ldw	r21,-4(r16)
 6ab197c:	dc400115 	stw	r17,4(sp)
 6ab1980:	dfc00615 	stw	ra,24(sp)
 6ab1984:	a809883a 	mov	r4,r21
 6ab1988:	2823883a 	mov	r17,r5
 6ab198c:	dcc00315 	stw	r19,12(sp)
 6ab1990:	dc800215 	stw	r18,8(sp)
 6ab1994:	6ab17400 	call	6ab1740 <__hi0bits>
 6ab1998:	100b883a 	mov	r5,r2
 6ab199c:	00800804 	movi	r2,32
 6ab19a0:	1145c83a 	sub	r2,r2,r5
 6ab19a4:	88800015 	stw	r2,0(r17)
 6ab19a8:	00800284 	movi	r2,10
 6ab19ac:	80ffff04 	addi	r3,r16,-4
 6ab19b0:	11401416 	blt	r2,r5,6ab1a04 <__b2d+0xb0>
 6ab19b4:	008002c4 	movi	r2,11
 6ab19b8:	1149c83a 	sub	r4,r2,r5
 6ab19bc:	a0c02736 	bltu	r20,r3,6ab1a5c <__b2d+0x108>
 6ab19c0:	000d883a 	mov	r6,zero
 6ab19c4:	28800544 	addi	r2,r5,21
 6ab19c8:	a906d83a 	srl	r3,r21,r4
 6ab19cc:	a884983a 	sll	r2,r21,r2
 6ab19d0:	1ccffc34 	orhi	r19,r3,16368
 6ab19d4:	11a4b03a 	or	r18,r2,r6
 6ab19d8:	9005883a 	mov	r2,r18
 6ab19dc:	9807883a 	mov	r3,r19
 6ab19e0:	dfc00617 	ldw	ra,24(sp)
 6ab19e4:	dd400517 	ldw	r21,20(sp)
 6ab19e8:	dd000417 	ldw	r20,16(sp)
 6ab19ec:	dcc00317 	ldw	r19,12(sp)
 6ab19f0:	dc800217 	ldw	r18,8(sp)
 6ab19f4:	dc400117 	ldw	r17,4(sp)
 6ab19f8:	dc000017 	ldw	r16,0(sp)
 6ab19fc:	dec00704 	addi	sp,sp,28
 6ab1a00:	f800283a 	ret
 6ab1a04:	a0c00e36 	bltu	r20,r3,6ab1a40 <__b2d+0xec>
 6ab1a08:	293ffd44 	addi	r4,r5,-11
 6ab1a0c:	000d883a 	mov	r6,zero
 6ab1a10:	20000f26 	beq	r4,zero,6ab1a50 <__b2d+0xfc>
 6ab1a14:	00800804 	movi	r2,32
 6ab1a18:	110bc83a 	sub	r5,r2,r4
 6ab1a1c:	a0c01236 	bltu	r20,r3,6ab1a68 <__b2d+0x114>
 6ab1a20:	000f883a 	mov	r7,zero
 6ab1a24:	a904983a 	sll	r2,r21,r4
 6ab1a28:	3146d83a 	srl	r3,r6,r5
 6ab1a2c:	3108983a 	sll	r4,r6,r4
 6ab1a30:	108ffc34 	orhi	r2,r2,16368
 6ab1a34:	18a6b03a 	or	r19,r3,r2
 6ab1a38:	3924b03a 	or	r18,r7,r4
 6ab1a3c:	003fe606 	br	6ab19d8 <__b2d+0x84>
 6ab1a40:	293ffd44 	addi	r4,r5,-11
 6ab1a44:	81bffe17 	ldw	r6,-8(r16)
 6ab1a48:	80fffe04 	addi	r3,r16,-8
 6ab1a4c:	203ff11e 	bne	r4,zero,6ab1a14 <__b2d+0xc0>
 6ab1a50:	accffc34 	orhi	r19,r21,16368
 6ab1a54:	3025883a 	mov	r18,r6
 6ab1a58:	003fdf06 	br	6ab19d8 <__b2d+0x84>
 6ab1a5c:	18bfff17 	ldw	r2,-4(r3)
 6ab1a60:	110cd83a 	srl	r6,r2,r4
 6ab1a64:	003fd706 	br	6ab19c4 <__b2d+0x70>
 6ab1a68:	18bfff17 	ldw	r2,-4(r3)
 6ab1a6c:	114ed83a 	srl	r7,r2,r5
 6ab1a70:	003fec06 	br	6ab1a24 <__b2d+0xd0>

06ab1a74 <__ratio>:
 6ab1a74:	defff904 	addi	sp,sp,-28
 6ab1a78:	dc400215 	stw	r17,8(sp)
 6ab1a7c:	2823883a 	mov	r17,r5
 6ab1a80:	d80b883a 	mov	r5,sp
 6ab1a84:	dfc00615 	stw	ra,24(sp)
 6ab1a88:	dd000515 	stw	r20,20(sp)
 6ab1a8c:	dcc00415 	stw	r19,16(sp)
 6ab1a90:	dc800315 	stw	r18,12(sp)
 6ab1a94:	2025883a 	mov	r18,r4
 6ab1a98:	6ab19540 	call	6ab1954 <__b2d>
 6ab1a9c:	8809883a 	mov	r4,r17
 6ab1aa0:	d9400104 	addi	r5,sp,4
 6ab1aa4:	1027883a 	mov	r19,r2
 6ab1aa8:	1829883a 	mov	r20,r3
 6ab1aac:	6ab19540 	call	6ab1954 <__b2d>
 6ab1ab0:	89000417 	ldw	r4,16(r17)
 6ab1ab4:	91c00417 	ldw	r7,16(r18)
 6ab1ab8:	d9800117 	ldw	r6,4(sp)
 6ab1abc:	180b883a 	mov	r5,r3
 6ab1ac0:	390fc83a 	sub	r7,r7,r4
 6ab1ac4:	1009883a 	mov	r4,r2
 6ab1ac8:	d8800017 	ldw	r2,0(sp)
 6ab1acc:	380e917a 	slli	r7,r7,5
 6ab1ad0:	2011883a 	mov	r8,r4
 6ab1ad4:	1185c83a 	sub	r2,r2,r6
 6ab1ad8:	11c5883a 	add	r2,r2,r7
 6ab1adc:	1006953a 	slli	r3,r2,20
 6ab1ae0:	2813883a 	mov	r9,r5
 6ab1ae4:	00800d0e 	bge	zero,r2,6ab1b1c <__ratio+0xa8>
 6ab1ae8:	1d29883a 	add	r20,r3,r20
 6ab1aec:	a00b883a 	mov	r5,r20
 6ab1af0:	480f883a 	mov	r7,r9
 6ab1af4:	9809883a 	mov	r4,r19
 6ab1af8:	400d883a 	mov	r6,r8
 6ab1afc:	6ab44200 	call	6ab4420 <__divdf3>
 6ab1b00:	dfc00617 	ldw	ra,24(sp)
 6ab1b04:	dd000517 	ldw	r20,20(sp)
 6ab1b08:	dcc00417 	ldw	r19,16(sp)
 6ab1b0c:	dc800317 	ldw	r18,12(sp)
 6ab1b10:	dc400217 	ldw	r17,8(sp)
 6ab1b14:	dec00704 	addi	sp,sp,28
 6ab1b18:	f800283a 	ret
 6ab1b1c:	28d3c83a 	sub	r9,r5,r3
 6ab1b20:	003ff206 	br	6ab1aec <__ratio+0x78>

06ab1b24 <_mprec_log10>:
 6ab1b24:	defffe04 	addi	sp,sp,-8
 6ab1b28:	008005c4 	movi	r2,23
 6ab1b2c:	dc000015 	stw	r16,0(sp)
 6ab1b30:	dfc00115 	stw	ra,4(sp)
 6ab1b34:	2021883a 	mov	r16,r4
 6ab1b38:	11000c16 	blt	r2,r4,6ab1b6c <_mprec_log10+0x48>
 6ab1b3c:	200490fa 	slli	r2,r4,3
 6ab1b40:	00c1ab34 	movhi	r3,1708
 6ab1b44:	18e28104 	addi	r3,r3,-30204
 6ab1b48:	10c5883a 	add	r2,r2,r3
 6ab1b4c:	12400117 	ldw	r9,4(r2)
 6ab1b50:	12000017 	ldw	r8,0(r2)
 6ab1b54:	4807883a 	mov	r3,r9
 6ab1b58:	4005883a 	mov	r2,r8
 6ab1b5c:	dfc00117 	ldw	ra,4(sp)
 6ab1b60:	dc000017 	ldw	r16,0(sp)
 6ab1b64:	dec00204 	addi	sp,sp,8
 6ab1b68:	f800283a 	ret
 6ab1b6c:	0011883a 	mov	r8,zero
 6ab1b70:	024ffc34 	movhi	r9,16368
 6ab1b74:	0005883a 	mov	r2,zero
 6ab1b78:	00d00934 	movhi	r3,16420
 6ab1b7c:	480b883a 	mov	r5,r9
 6ab1b80:	4009883a 	mov	r4,r8
 6ab1b84:	180f883a 	mov	r7,r3
 6ab1b88:	100d883a 	mov	r6,r2
 6ab1b8c:	6ab405c0 	call	6ab405c <__muldf3>
 6ab1b90:	843fffc4 	addi	r16,r16,-1
 6ab1b94:	1011883a 	mov	r8,r2
 6ab1b98:	1813883a 	mov	r9,r3
 6ab1b9c:	803ff51e 	bne	r16,zero,6ab1b74 <_mprec_log10+0x50>
 6ab1ba0:	4005883a 	mov	r2,r8
 6ab1ba4:	4807883a 	mov	r3,r9
 6ab1ba8:	dfc00117 	ldw	ra,4(sp)
 6ab1bac:	dc000017 	ldw	r16,0(sp)
 6ab1bb0:	dec00204 	addi	sp,sp,8
 6ab1bb4:	f800283a 	ret

06ab1bb8 <__copybits>:
 6ab1bb8:	297fffc4 	addi	r5,r5,-1
 6ab1bbc:	30800417 	ldw	r2,16(r6)
 6ab1bc0:	280bd17a 	srai	r5,r5,5
 6ab1bc4:	31800504 	addi	r6,r6,20
 6ab1bc8:	1085883a 	add	r2,r2,r2
 6ab1bcc:	294b883a 	add	r5,r5,r5
 6ab1bd0:	294b883a 	add	r5,r5,r5
 6ab1bd4:	1085883a 	add	r2,r2,r2
 6ab1bd8:	290b883a 	add	r5,r5,r4
 6ab1bdc:	3087883a 	add	r3,r6,r2
 6ab1be0:	29400104 	addi	r5,r5,4
 6ab1be4:	30c0052e 	bgeu	r6,r3,6ab1bfc <__copybits+0x44>
 6ab1be8:	30800017 	ldw	r2,0(r6)
 6ab1bec:	31800104 	addi	r6,r6,4
 6ab1bf0:	20800015 	stw	r2,0(r4)
 6ab1bf4:	21000104 	addi	r4,r4,4
 6ab1bf8:	30fffb36 	bltu	r6,r3,6ab1be8 <__copybits+0x30>
 6ab1bfc:	2140032e 	bgeu	r4,r5,6ab1c0c <__copybits+0x54>
 6ab1c00:	20000015 	stw	zero,0(r4)
 6ab1c04:	21000104 	addi	r4,r4,4
 6ab1c08:	217ffd36 	bltu	r4,r5,6ab1c00 <__copybits+0x48>
 6ab1c0c:	f800283a 	ret

06ab1c10 <__any_on>:
 6ab1c10:	20800417 	ldw	r2,16(r4)
 6ab1c14:	2807d17a 	srai	r3,r5,5
 6ab1c18:	21000504 	addi	r4,r4,20
 6ab1c1c:	10c00d0e 	bge	r2,r3,6ab1c54 <__any_on+0x44>
 6ab1c20:	1085883a 	add	r2,r2,r2
 6ab1c24:	1085883a 	add	r2,r2,r2
 6ab1c28:	208d883a 	add	r6,r4,r2
 6ab1c2c:	2180182e 	bgeu	r4,r6,6ab1c90 <__any_on+0x80>
 6ab1c30:	30bfff17 	ldw	r2,-4(r6)
 6ab1c34:	30ffff04 	addi	r3,r6,-4
 6ab1c38:	1000041e 	bne	r2,zero,6ab1c4c <__any_on+0x3c>
 6ab1c3c:	20c0142e 	bgeu	r4,r3,6ab1c90 <__any_on+0x80>
 6ab1c40:	18ffff04 	addi	r3,r3,-4
 6ab1c44:	18800017 	ldw	r2,0(r3)
 6ab1c48:	103ffc26 	beq	r2,zero,6ab1c3c <__any_on+0x2c>
 6ab1c4c:	00800044 	movi	r2,1
 6ab1c50:	f800283a 	ret
 6ab1c54:	18800a0e 	bge	r3,r2,6ab1c80 <__any_on+0x70>
 6ab1c58:	294007cc 	andi	r5,r5,31
 6ab1c5c:	28000826 	beq	r5,zero,6ab1c80 <__any_on+0x70>
 6ab1c60:	18c5883a 	add	r2,r3,r3
 6ab1c64:	1085883a 	add	r2,r2,r2
 6ab1c68:	208d883a 	add	r6,r4,r2
 6ab1c6c:	30c00017 	ldw	r3,0(r6)
 6ab1c70:	1944d83a 	srl	r2,r3,r5
 6ab1c74:	1144983a 	sll	r2,r2,r5
 6ab1c78:	18bff41e 	bne	r3,r2,6ab1c4c <__any_on+0x3c>
 6ab1c7c:	003feb06 	br	6ab1c2c <__any_on+0x1c>
 6ab1c80:	18c5883a 	add	r2,r3,r3
 6ab1c84:	1085883a 	add	r2,r2,r2
 6ab1c88:	208d883a 	add	r6,r4,r2
 6ab1c8c:	003fe706 	br	6ab1c2c <__any_on+0x1c>
 6ab1c90:	0005883a 	mov	r2,zero
 6ab1c94:	f800283a 	ret

06ab1c98 <_Balloc>:
 6ab1c98:	20c01317 	ldw	r3,76(r4)
 6ab1c9c:	defffb04 	addi	sp,sp,-20
 6ab1ca0:	dcc00315 	stw	r19,12(sp)
 6ab1ca4:	dc800215 	stw	r18,8(sp)
 6ab1ca8:	dfc00415 	stw	ra,16(sp)
 6ab1cac:	2825883a 	mov	r18,r5
 6ab1cb0:	dc400115 	stw	r17,4(sp)
 6ab1cb4:	dc000015 	stw	r16,0(sp)
 6ab1cb8:	2027883a 	mov	r19,r4
 6ab1cbc:	01800404 	movi	r6,16
 6ab1cc0:	01400104 	movi	r5,4
 6ab1cc4:	18001726 	beq	r3,zero,6ab1d24 <_Balloc+0x8c>
 6ab1cc8:	01400044 	movi	r5,1
 6ab1ccc:	9485883a 	add	r2,r18,r18
 6ab1cd0:	2ca2983a 	sll	r17,r5,r18
 6ab1cd4:	1085883a 	add	r2,r2,r2
 6ab1cd8:	10c7883a 	add	r3,r2,r3
 6ab1cdc:	1c000017 	ldw	r16,0(r3)
 6ab1ce0:	8c4d883a 	add	r6,r17,r17
 6ab1ce4:	318d883a 	add	r6,r6,r6
 6ab1ce8:	9809883a 	mov	r4,r19
 6ab1cec:	31800504 	addi	r6,r6,20
 6ab1cf0:	80001226 	beq	r16,zero,6ab1d3c <_Balloc+0xa4>
 6ab1cf4:	80800017 	ldw	r2,0(r16)
 6ab1cf8:	18800015 	stw	r2,0(r3)
 6ab1cfc:	80000415 	stw	zero,16(r16)
 6ab1d00:	80000315 	stw	zero,12(r16)
 6ab1d04:	8005883a 	mov	r2,r16
 6ab1d08:	dfc00417 	ldw	ra,16(sp)
 6ab1d0c:	dcc00317 	ldw	r19,12(sp)
 6ab1d10:	dc800217 	ldw	r18,8(sp)
 6ab1d14:	dc400117 	ldw	r17,4(sp)
 6ab1d18:	dc000017 	ldw	r16,0(sp)
 6ab1d1c:	dec00504 	addi	sp,sp,20
 6ab1d20:	f800283a 	ret
 6ab1d24:	6ab2f180 	call	6ab2f18 <_calloc_r>
 6ab1d28:	1007883a 	mov	r3,r2
 6ab1d2c:	0021883a 	mov	r16,zero
 6ab1d30:	98801315 	stw	r2,76(r19)
 6ab1d34:	103fe41e 	bne	r2,zero,6ab1cc8 <_Balloc+0x30>
 6ab1d38:	003ff206 	br	6ab1d04 <_Balloc+0x6c>
 6ab1d3c:	6ab2f180 	call	6ab2f18 <_calloc_r>
 6ab1d40:	103ff026 	beq	r2,zero,6ab1d04 <_Balloc+0x6c>
 6ab1d44:	1021883a 	mov	r16,r2
 6ab1d48:	14800115 	stw	r18,4(r2)
 6ab1d4c:	14400215 	stw	r17,8(r2)
 6ab1d50:	003fea06 	br	6ab1cfc <_Balloc+0x64>

06ab1d54 <__d2b>:
 6ab1d54:	defff504 	addi	sp,sp,-44
 6ab1d58:	dcc00515 	stw	r19,20(sp)
 6ab1d5c:	04c00044 	movi	r19,1
 6ab1d60:	dc000215 	stw	r16,8(sp)
 6ab1d64:	2821883a 	mov	r16,r5
 6ab1d68:	980b883a 	mov	r5,r19
 6ab1d6c:	ddc00915 	stw	r23,36(sp)
 6ab1d70:	dd800815 	stw	r22,32(sp)
 6ab1d74:	dd400715 	stw	r21,28(sp)
 6ab1d78:	dd000615 	stw	r20,24(sp)
 6ab1d7c:	dc800415 	stw	r18,16(sp)
 6ab1d80:	dc400315 	stw	r17,12(sp)
 6ab1d84:	dfc00a15 	stw	ra,40(sp)
 6ab1d88:	3023883a 	mov	r17,r6
 6ab1d8c:	382d883a 	mov	r22,r7
 6ab1d90:	ddc00b17 	ldw	r23,44(sp)
 6ab1d94:	6ab1c980 	call	6ab1c98 <_Balloc>
 6ab1d98:	1025883a 	mov	r18,r2
 6ab1d9c:	00a00034 	movhi	r2,32768
 6ab1da0:	10bfffc4 	addi	r2,r2,-1
 6ab1da4:	8888703a 	and	r4,r17,r2
 6ab1da8:	202ad53a 	srli	r21,r4,20
 6ab1dac:	00800434 	movhi	r2,16
 6ab1db0:	10bfffc4 	addi	r2,r2,-1
 6ab1db4:	8886703a 	and	r3,r17,r2
 6ab1db8:	a829003a 	cmpeq	r20,r21,zero
 6ab1dbc:	800b883a 	mov	r5,r16
 6ab1dc0:	d8c00115 	stw	r3,4(sp)
 6ab1dc4:	94000504 	addi	r16,r18,20
 6ab1dc8:	a000021e 	bne	r20,zero,6ab1dd4 <__d2b+0x80>
 6ab1dcc:	18c00434 	orhi	r3,r3,16
 6ab1dd0:	d8c00115 	stw	r3,4(sp)
 6ab1dd4:	28002726 	beq	r5,zero,6ab1e74 <__d2b+0x120>
 6ab1dd8:	d809883a 	mov	r4,sp
 6ab1ddc:	d9400015 	stw	r5,0(sp)
 6ab1de0:	6ab17b00 	call	6ab17b0 <__lo0bits>
 6ab1de4:	100d883a 	mov	r6,r2
 6ab1de8:	10003526 	beq	r2,zero,6ab1ec0 <__d2b+0x16c>
 6ab1dec:	d8c00117 	ldw	r3,4(sp)
 6ab1df0:	00800804 	movi	r2,32
 6ab1df4:	1185c83a 	sub	r2,r2,r6
 6ab1df8:	d9000017 	ldw	r4,0(sp)
 6ab1dfc:	1886983a 	sll	r3,r3,r2
 6ab1e00:	1906b03a 	or	r3,r3,r4
 6ab1e04:	90c00515 	stw	r3,20(r18)
 6ab1e08:	d8c00117 	ldw	r3,4(sp)
 6ab1e0c:	1986d83a 	srl	r3,r3,r6
 6ab1e10:	d8c00115 	stw	r3,4(sp)
 6ab1e14:	180b003a 	cmpeq	r5,r3,zero
 6ab1e18:	00800084 	movi	r2,2
 6ab1e1c:	114bc83a 	sub	r5,r2,r5
 6ab1e20:	80c00115 	stw	r3,4(r16)
 6ab1e24:	91400415 	stw	r5,16(r18)
 6ab1e28:	a0001a1e 	bne	r20,zero,6ab1e94 <__d2b+0x140>
 6ab1e2c:	3545883a 	add	r2,r6,r21
 6ab1e30:	10bef344 	addi	r2,r2,-1075
 6ab1e34:	00c00d44 	movi	r3,53
 6ab1e38:	b0800015 	stw	r2,0(r22)
 6ab1e3c:	1987c83a 	sub	r3,r3,r6
 6ab1e40:	b8c00015 	stw	r3,0(r23)
 6ab1e44:	9005883a 	mov	r2,r18
 6ab1e48:	dfc00a17 	ldw	ra,40(sp)
 6ab1e4c:	ddc00917 	ldw	r23,36(sp)
 6ab1e50:	dd800817 	ldw	r22,32(sp)
 6ab1e54:	dd400717 	ldw	r21,28(sp)
 6ab1e58:	dd000617 	ldw	r20,24(sp)
 6ab1e5c:	dcc00517 	ldw	r19,20(sp)
 6ab1e60:	dc800417 	ldw	r18,16(sp)
 6ab1e64:	dc400317 	ldw	r17,12(sp)
 6ab1e68:	dc000217 	ldw	r16,8(sp)
 6ab1e6c:	dec00b04 	addi	sp,sp,44
 6ab1e70:	f800283a 	ret
 6ab1e74:	d9000104 	addi	r4,sp,4
 6ab1e78:	6ab17b00 	call	6ab17b0 <__lo0bits>
 6ab1e7c:	11800804 	addi	r6,r2,32
 6ab1e80:	d8800117 	ldw	r2,4(sp)
 6ab1e84:	94c00415 	stw	r19,16(r18)
 6ab1e88:	980b883a 	mov	r5,r19
 6ab1e8c:	90800515 	stw	r2,20(r18)
 6ab1e90:	a03fe626 	beq	r20,zero,6ab1e2c <__d2b+0xd8>
 6ab1e94:	2945883a 	add	r2,r5,r5
 6ab1e98:	1085883a 	add	r2,r2,r2
 6ab1e9c:	1405883a 	add	r2,r2,r16
 6ab1ea0:	113fff17 	ldw	r4,-4(r2)
 6ab1ea4:	30fef384 	addi	r3,r6,-1074
 6ab1ea8:	2820917a 	slli	r16,r5,5
 6ab1eac:	b0c00015 	stw	r3,0(r22)
 6ab1eb0:	6ab17400 	call	6ab1740 <__hi0bits>
 6ab1eb4:	80a1c83a 	sub	r16,r16,r2
 6ab1eb8:	bc000015 	stw	r16,0(r23)
 6ab1ebc:	003fe106 	br	6ab1e44 <__d2b+0xf0>
 6ab1ec0:	d8800017 	ldw	r2,0(sp)
 6ab1ec4:	90800515 	stw	r2,20(r18)
 6ab1ec8:	d8c00117 	ldw	r3,4(sp)
 6ab1ecc:	003fd106 	br	6ab1e14 <__d2b+0xc0>

06ab1ed0 <__mdiff>:
 6ab1ed0:	defffb04 	addi	sp,sp,-20
 6ab1ed4:	dc000015 	stw	r16,0(sp)
 6ab1ed8:	2821883a 	mov	r16,r5
 6ab1edc:	dc800215 	stw	r18,8(sp)
 6ab1ee0:	300b883a 	mov	r5,r6
 6ab1ee4:	2025883a 	mov	r18,r4
 6ab1ee8:	8009883a 	mov	r4,r16
 6ab1eec:	dc400115 	stw	r17,4(sp)
 6ab1ef0:	dfc00415 	stw	ra,16(sp)
 6ab1ef4:	dcc00315 	stw	r19,12(sp)
 6ab1ef8:	3023883a 	mov	r17,r6
 6ab1efc:	6ab18740 	call	6ab1874 <__mcmp>
 6ab1f00:	10004226 	beq	r2,zero,6ab200c <__mdiff+0x13c>
 6ab1f04:	10005016 	blt	r2,zero,6ab2048 <__mdiff+0x178>
 6ab1f08:	0027883a 	mov	r19,zero
 6ab1f0c:	81400117 	ldw	r5,4(r16)
 6ab1f10:	9009883a 	mov	r4,r18
 6ab1f14:	6ab1c980 	call	6ab1c98 <_Balloc>
 6ab1f18:	1019883a 	mov	r12,r2
 6ab1f1c:	82800417 	ldw	r10,16(r16)
 6ab1f20:	88800417 	ldw	r2,16(r17)
 6ab1f24:	81800504 	addi	r6,r16,20
 6ab1f28:	5287883a 	add	r3,r10,r10
 6ab1f2c:	1085883a 	add	r2,r2,r2
 6ab1f30:	18c7883a 	add	r3,r3,r3
 6ab1f34:	1085883a 	add	r2,r2,r2
 6ab1f38:	8a000504 	addi	r8,r17,20
 6ab1f3c:	64c00315 	stw	r19,12(r12)
 6ab1f40:	30db883a 	add	r13,r6,r3
 6ab1f44:	4097883a 	add	r11,r8,r2
 6ab1f48:	61c00504 	addi	r7,r12,20
 6ab1f4c:	0013883a 	mov	r9,zero
 6ab1f50:	31000017 	ldw	r4,0(r6)
 6ab1f54:	41400017 	ldw	r5,0(r8)
 6ab1f58:	42000104 	addi	r8,r8,4
 6ab1f5c:	20bfffcc 	andi	r2,r4,65535
 6ab1f60:	28ffffcc 	andi	r3,r5,65535
 6ab1f64:	10c5c83a 	sub	r2,r2,r3
 6ab1f68:	1245883a 	add	r2,r2,r9
 6ab1f6c:	2008d43a 	srli	r4,r4,16
 6ab1f70:	280ad43a 	srli	r5,r5,16
 6ab1f74:	1007d43a 	srai	r3,r2,16
 6ab1f78:	3880000d 	sth	r2,0(r7)
 6ab1f7c:	2149c83a 	sub	r4,r4,r5
 6ab1f80:	20c9883a 	add	r4,r4,r3
 6ab1f84:	3900008d 	sth	r4,2(r7)
 6ab1f88:	31800104 	addi	r6,r6,4
 6ab1f8c:	39c00104 	addi	r7,r7,4
 6ab1f90:	2013d43a 	srai	r9,r4,16
 6ab1f94:	42ffee36 	bltu	r8,r11,6ab1f50 <__mdiff+0x80>
 6ab1f98:	33400c2e 	bgeu	r6,r13,6ab1fcc <__mdiff+0xfc>
 6ab1f9c:	30800017 	ldw	r2,0(r6)
 6ab1fa0:	31800104 	addi	r6,r6,4
 6ab1fa4:	10ffffcc 	andi	r3,r2,65535
 6ab1fa8:	1a47883a 	add	r3,r3,r9
 6ab1fac:	1004d43a 	srli	r2,r2,16
 6ab1fb0:	1809d43a 	srai	r4,r3,16
 6ab1fb4:	38c0000d 	sth	r3,0(r7)
 6ab1fb8:	1105883a 	add	r2,r2,r4
 6ab1fbc:	3880008d 	sth	r2,2(r7)
 6ab1fc0:	1013d43a 	srai	r9,r2,16
 6ab1fc4:	39c00104 	addi	r7,r7,4
 6ab1fc8:	337ff436 	bltu	r6,r13,6ab1f9c <__mdiff+0xcc>
 6ab1fcc:	38bfff17 	ldw	r2,-4(r7)
 6ab1fd0:	38ffff04 	addi	r3,r7,-4
 6ab1fd4:	1000041e 	bne	r2,zero,6ab1fe8 <__mdiff+0x118>
 6ab1fd8:	18ffff04 	addi	r3,r3,-4
 6ab1fdc:	18800017 	ldw	r2,0(r3)
 6ab1fe0:	52bfffc4 	addi	r10,r10,-1
 6ab1fe4:	103ffc26 	beq	r2,zero,6ab1fd8 <__mdiff+0x108>
 6ab1fe8:	6005883a 	mov	r2,r12
 6ab1fec:	62800415 	stw	r10,16(r12)
 6ab1ff0:	dfc00417 	ldw	ra,16(sp)
 6ab1ff4:	dcc00317 	ldw	r19,12(sp)
 6ab1ff8:	dc800217 	ldw	r18,8(sp)
 6ab1ffc:	dc400117 	ldw	r17,4(sp)
 6ab2000:	dc000017 	ldw	r16,0(sp)
 6ab2004:	dec00504 	addi	sp,sp,20
 6ab2008:	f800283a 	ret
 6ab200c:	9009883a 	mov	r4,r18
 6ab2010:	000b883a 	mov	r5,zero
 6ab2014:	6ab1c980 	call	6ab1c98 <_Balloc>
 6ab2018:	1019883a 	mov	r12,r2
 6ab201c:	00800044 	movi	r2,1
 6ab2020:	60800415 	stw	r2,16(r12)
 6ab2024:	6005883a 	mov	r2,r12
 6ab2028:	60000515 	stw	zero,20(r12)
 6ab202c:	dfc00417 	ldw	ra,16(sp)
 6ab2030:	dcc00317 	ldw	r19,12(sp)
 6ab2034:	dc800217 	ldw	r18,8(sp)
 6ab2038:	dc400117 	ldw	r17,4(sp)
 6ab203c:	dc000017 	ldw	r16,0(sp)
 6ab2040:	dec00504 	addi	sp,sp,20
 6ab2044:	f800283a 	ret
 6ab2048:	880d883a 	mov	r6,r17
 6ab204c:	04c00044 	movi	r19,1
 6ab2050:	8023883a 	mov	r17,r16
 6ab2054:	3021883a 	mov	r16,r6
 6ab2058:	003fac06 	br	6ab1f0c <__mdiff+0x3c>

06ab205c <__lshift>:
 6ab205c:	defff904 	addi	sp,sp,-28
 6ab2060:	28800417 	ldw	r2,16(r5)
 6ab2064:	dc000015 	stw	r16,0(sp)
 6ab2068:	3021d17a 	srai	r16,r6,5
 6ab206c:	28c00217 	ldw	r3,8(r5)
 6ab2070:	10800044 	addi	r2,r2,1
 6ab2074:	dc400115 	stw	r17,4(sp)
 6ab2078:	80a3883a 	add	r17,r16,r2
 6ab207c:	dd400515 	stw	r21,20(sp)
 6ab2080:	dd000415 	stw	r20,16(sp)
 6ab2084:	dc800215 	stw	r18,8(sp)
 6ab2088:	dfc00615 	stw	ra,24(sp)
 6ab208c:	2825883a 	mov	r18,r5
 6ab2090:	dcc00315 	stw	r19,12(sp)
 6ab2094:	3029883a 	mov	r20,r6
 6ab2098:	202b883a 	mov	r21,r4
 6ab209c:	29400117 	ldw	r5,4(r5)
 6ab20a0:	1c40030e 	bge	r3,r17,6ab20b0 <__lshift+0x54>
 6ab20a4:	18c7883a 	add	r3,r3,r3
 6ab20a8:	29400044 	addi	r5,r5,1
 6ab20ac:	1c7ffd16 	blt	r3,r17,6ab20a4 <__lshift+0x48>
 6ab20b0:	a809883a 	mov	r4,r21
 6ab20b4:	6ab1c980 	call	6ab1c98 <_Balloc>
 6ab20b8:	1027883a 	mov	r19,r2
 6ab20bc:	11400504 	addi	r5,r2,20
 6ab20c0:	0400090e 	bge	zero,r16,6ab20e8 <__lshift+0x8c>
 6ab20c4:	2805883a 	mov	r2,r5
 6ab20c8:	0007883a 	mov	r3,zero
 6ab20cc:	18c00044 	addi	r3,r3,1
 6ab20d0:	10000015 	stw	zero,0(r2)
 6ab20d4:	10800104 	addi	r2,r2,4
 6ab20d8:	80fffc1e 	bne	r16,r3,6ab20cc <__lshift+0x70>
 6ab20dc:	8405883a 	add	r2,r16,r16
 6ab20e0:	1085883a 	add	r2,r2,r2
 6ab20e4:	288b883a 	add	r5,r5,r2
 6ab20e8:	90800417 	ldw	r2,16(r18)
 6ab20ec:	91000504 	addi	r4,r18,20
 6ab20f0:	a18007cc 	andi	r6,r20,31
 6ab20f4:	1085883a 	add	r2,r2,r2
 6ab20f8:	1085883a 	add	r2,r2,r2
 6ab20fc:	208f883a 	add	r7,r4,r2
 6ab2100:	30001e26 	beq	r6,zero,6ab217c <__lshift+0x120>
 6ab2104:	00800804 	movi	r2,32
 6ab2108:	1191c83a 	sub	r8,r2,r6
 6ab210c:	0007883a 	mov	r3,zero
 6ab2110:	20800017 	ldw	r2,0(r4)
 6ab2114:	1184983a 	sll	r2,r2,r6
 6ab2118:	1884b03a 	or	r2,r3,r2
 6ab211c:	28800015 	stw	r2,0(r5)
 6ab2120:	20c00017 	ldw	r3,0(r4)
 6ab2124:	21000104 	addi	r4,r4,4
 6ab2128:	29400104 	addi	r5,r5,4
 6ab212c:	1a06d83a 	srl	r3,r3,r8
 6ab2130:	21fff736 	bltu	r4,r7,6ab2110 <__lshift+0xb4>
 6ab2134:	28c00015 	stw	r3,0(r5)
 6ab2138:	18000126 	beq	r3,zero,6ab2140 <__lshift+0xe4>
 6ab213c:	8c400044 	addi	r17,r17,1
 6ab2140:	88bfffc4 	addi	r2,r17,-1
 6ab2144:	98800415 	stw	r2,16(r19)
 6ab2148:	a809883a 	mov	r4,r21
 6ab214c:	900b883a 	mov	r5,r18
 6ab2150:	6ab17180 	call	6ab1718 <_Bfree>
 6ab2154:	9805883a 	mov	r2,r19
 6ab2158:	dfc00617 	ldw	ra,24(sp)
 6ab215c:	dd400517 	ldw	r21,20(sp)
 6ab2160:	dd000417 	ldw	r20,16(sp)
 6ab2164:	dcc00317 	ldw	r19,12(sp)
 6ab2168:	dc800217 	ldw	r18,8(sp)
 6ab216c:	dc400117 	ldw	r17,4(sp)
 6ab2170:	dc000017 	ldw	r16,0(sp)
 6ab2174:	dec00704 	addi	sp,sp,28
 6ab2178:	f800283a 	ret
 6ab217c:	20800017 	ldw	r2,0(r4)
 6ab2180:	21000104 	addi	r4,r4,4
 6ab2184:	28800015 	stw	r2,0(r5)
 6ab2188:	29400104 	addi	r5,r5,4
 6ab218c:	21ffec2e 	bgeu	r4,r7,6ab2140 <__lshift+0xe4>
 6ab2190:	20800017 	ldw	r2,0(r4)
 6ab2194:	21000104 	addi	r4,r4,4
 6ab2198:	28800015 	stw	r2,0(r5)
 6ab219c:	29400104 	addi	r5,r5,4
 6ab21a0:	21fff636 	bltu	r4,r7,6ab217c <__lshift+0x120>
 6ab21a4:	003fe606 	br	6ab2140 <__lshift+0xe4>

06ab21a8 <__multiply>:
 6ab21a8:	defff904 	addi	sp,sp,-28
 6ab21ac:	dcc00315 	stw	r19,12(sp)
 6ab21b0:	dc800215 	stw	r18,8(sp)
 6ab21b4:	2cc00417 	ldw	r19,16(r5)
 6ab21b8:	34800417 	ldw	r18,16(r6)
 6ab21bc:	dd000415 	stw	r20,16(sp)
 6ab21c0:	dc400115 	stw	r17,4(sp)
 6ab21c4:	dfc00615 	stw	ra,24(sp)
 6ab21c8:	dd400515 	stw	r21,20(sp)
 6ab21cc:	dc000015 	stw	r16,0(sp)
 6ab21d0:	2823883a 	mov	r17,r5
 6ab21d4:	3029883a 	mov	r20,r6
 6ab21d8:	9c80040e 	bge	r19,r18,6ab21ec <__multiply+0x44>
 6ab21dc:	9027883a 	mov	r19,r18
 6ab21e0:	2c800417 	ldw	r18,16(r5)
 6ab21e4:	2829883a 	mov	r20,r5
 6ab21e8:	3023883a 	mov	r17,r6
 6ab21ec:	88800217 	ldw	r2,8(r17)
 6ab21f0:	9ca1883a 	add	r16,r19,r18
 6ab21f4:	89400117 	ldw	r5,4(r17)
 6ab21f8:	1400010e 	bge	r2,r16,6ab2200 <__multiply+0x58>
 6ab21fc:	29400044 	addi	r5,r5,1
 6ab2200:	6ab1c980 	call	6ab1c98 <_Balloc>
 6ab2204:	102b883a 	mov	r21,r2
 6ab2208:	8405883a 	add	r2,r16,r16
 6ab220c:	1085883a 	add	r2,r2,r2
 6ab2210:	a9000504 	addi	r4,r21,20
 6ab2214:	209d883a 	add	r14,r4,r2
 6ab2218:	2380042e 	bgeu	r4,r14,6ab222c <__multiply+0x84>
 6ab221c:	2005883a 	mov	r2,r4
 6ab2220:	10000015 	stw	zero,0(r2)
 6ab2224:	10800104 	addi	r2,r2,4
 6ab2228:	13bffd36 	bltu	r2,r14,6ab2220 <__multiply+0x78>
 6ab222c:	9485883a 	add	r2,r18,r18
 6ab2230:	9cc7883a 	add	r3,r19,r19
 6ab2234:	a1800504 	addi	r6,r20,20
 6ab2238:	1085883a 	add	r2,r2,r2
 6ab223c:	8b400504 	addi	r13,r17,20
 6ab2240:	18c7883a 	add	r3,r3,r3
 6ab2244:	309f883a 	add	r15,r6,r2
 6ab2248:	68d7883a 	add	r11,r13,r3
 6ab224c:	33c03b2e 	bgeu	r6,r15,6ab233c <__multiply+0x194>
 6ab2250:	2019883a 	mov	r12,r4
 6ab2254:	30800017 	ldw	r2,0(r6)
 6ab2258:	127fffcc 	andi	r9,r2,65535
 6ab225c:	48001826 	beq	r9,zero,6ab22c0 <__multiply+0x118>
 6ab2260:	6811883a 	mov	r8,r13
 6ab2264:	600f883a 	mov	r7,r12
 6ab2268:	0015883a 	mov	r10,zero
 6ab226c:	40c00017 	ldw	r3,0(r8)
 6ab2270:	39400017 	ldw	r5,0(r7)
 6ab2274:	42000104 	addi	r8,r8,4
 6ab2278:	193fffcc 	andi	r4,r3,65535
 6ab227c:	4909383a 	mul	r4,r9,r4
 6ab2280:	1806d43a 	srli	r3,r3,16
 6ab2284:	28bfffcc 	andi	r2,r5,65535
 6ab2288:	5085883a 	add	r2,r10,r2
 6ab228c:	2089883a 	add	r4,r4,r2
 6ab2290:	48c7383a 	mul	r3,r9,r3
 6ab2294:	280ad43a 	srli	r5,r5,16
 6ab2298:	2004d43a 	srli	r2,r4,16
 6ab229c:	3900000d 	sth	r4,0(r7)
 6ab22a0:	1947883a 	add	r3,r3,r5
 6ab22a4:	10c5883a 	add	r2,r2,r3
 6ab22a8:	3880008d 	sth	r2,2(r7)
 6ab22ac:	1014d43a 	srli	r10,r2,16
 6ab22b0:	39c00104 	addi	r7,r7,4
 6ab22b4:	42ffed36 	bltu	r8,r11,6ab226c <__multiply+0xc4>
 6ab22b8:	3a800015 	stw	r10,0(r7)
 6ab22bc:	30800017 	ldw	r2,0(r6)
 6ab22c0:	1012d43a 	srli	r9,r2,16
 6ab22c4:	48001926 	beq	r9,zero,6ab232c <__multiply+0x184>
 6ab22c8:	60800017 	ldw	r2,0(r12)
 6ab22cc:	6811883a 	mov	r8,r13
 6ab22d0:	600f883a 	mov	r7,r12
 6ab22d4:	0015883a 	mov	r10,zero
 6ab22d8:	100b883a 	mov	r5,r2
 6ab22dc:	41000017 	ldw	r4,0(r8)
 6ab22e0:	2806d43a 	srli	r3,r5,16
 6ab22e4:	3880000d 	sth	r2,0(r7)
 6ab22e8:	20bfffcc 	andi	r2,r4,65535
 6ab22ec:	4885383a 	mul	r2,r9,r2
 6ab22f0:	50c7883a 	add	r3,r10,r3
 6ab22f4:	2008d43a 	srli	r4,r4,16
 6ab22f8:	10c5883a 	add	r2,r2,r3
 6ab22fc:	3880008d 	sth	r2,2(r7)
 6ab2300:	39c00104 	addi	r7,r7,4
 6ab2304:	39400017 	ldw	r5,0(r7)
 6ab2308:	4909383a 	mul	r4,r9,r4
 6ab230c:	1004d43a 	srli	r2,r2,16
 6ab2310:	28ffffcc 	andi	r3,r5,65535
 6ab2314:	20c9883a 	add	r4,r4,r3
 6ab2318:	1105883a 	add	r2,r2,r4
 6ab231c:	42000104 	addi	r8,r8,4
 6ab2320:	1014d43a 	srli	r10,r2,16
 6ab2324:	42ffed36 	bltu	r8,r11,6ab22dc <__multiply+0x134>
 6ab2328:	38800015 	stw	r2,0(r7)
 6ab232c:	31800104 	addi	r6,r6,4
 6ab2330:	33c0022e 	bgeu	r6,r15,6ab233c <__multiply+0x194>
 6ab2334:	63000104 	addi	r12,r12,4
 6ab2338:	003fc606 	br	6ab2254 <__multiply+0xac>
 6ab233c:	0400090e 	bge	zero,r16,6ab2364 <__multiply+0x1bc>
 6ab2340:	70bfff17 	ldw	r2,-4(r14)
 6ab2344:	70ffff04 	addi	r3,r14,-4
 6ab2348:	10000326 	beq	r2,zero,6ab2358 <__multiply+0x1b0>
 6ab234c:	00000506 	br	6ab2364 <__multiply+0x1bc>
 6ab2350:	18800017 	ldw	r2,0(r3)
 6ab2354:	1000031e 	bne	r2,zero,6ab2364 <__multiply+0x1bc>
 6ab2358:	843fffc4 	addi	r16,r16,-1
 6ab235c:	18ffff04 	addi	r3,r3,-4
 6ab2360:	803ffb1e 	bne	r16,zero,6ab2350 <__multiply+0x1a8>
 6ab2364:	a805883a 	mov	r2,r21
 6ab2368:	ac000415 	stw	r16,16(r21)
 6ab236c:	dfc00617 	ldw	ra,24(sp)
 6ab2370:	dd400517 	ldw	r21,20(sp)
 6ab2374:	dd000417 	ldw	r20,16(sp)
 6ab2378:	dcc00317 	ldw	r19,12(sp)
 6ab237c:	dc800217 	ldw	r18,8(sp)
 6ab2380:	dc400117 	ldw	r17,4(sp)
 6ab2384:	dc000017 	ldw	r16,0(sp)
 6ab2388:	dec00704 	addi	sp,sp,28
 6ab238c:	f800283a 	ret

06ab2390 <__i2b>:
 6ab2390:	defffd04 	addi	sp,sp,-12
 6ab2394:	dc000015 	stw	r16,0(sp)
 6ab2398:	04000044 	movi	r16,1
 6ab239c:	dc800115 	stw	r18,4(sp)
 6ab23a0:	2825883a 	mov	r18,r5
 6ab23a4:	800b883a 	mov	r5,r16
 6ab23a8:	dfc00215 	stw	ra,8(sp)
 6ab23ac:	6ab1c980 	call	6ab1c98 <_Balloc>
 6ab23b0:	14000415 	stw	r16,16(r2)
 6ab23b4:	14800515 	stw	r18,20(r2)
 6ab23b8:	dfc00217 	ldw	ra,8(sp)
 6ab23bc:	dc800117 	ldw	r18,4(sp)
 6ab23c0:	dc000017 	ldw	r16,0(sp)
 6ab23c4:	dec00304 	addi	sp,sp,12
 6ab23c8:	f800283a 	ret

06ab23cc <__multadd>:
 6ab23cc:	defffa04 	addi	sp,sp,-24
 6ab23d0:	dc800215 	stw	r18,8(sp)
 6ab23d4:	2c800417 	ldw	r18,16(r5)
 6ab23d8:	dd000415 	stw	r20,16(sp)
 6ab23dc:	dcc00315 	stw	r19,12(sp)
 6ab23e0:	dc000015 	stw	r16,0(sp)
 6ab23e4:	dfc00515 	stw	ra,20(sp)
 6ab23e8:	3821883a 	mov	r16,r7
 6ab23ec:	dc400115 	stw	r17,4(sp)
 6ab23f0:	2827883a 	mov	r19,r5
 6ab23f4:	2029883a 	mov	r20,r4
 6ab23f8:	2a000504 	addi	r8,r5,20
 6ab23fc:	000f883a 	mov	r7,zero
 6ab2400:	40800017 	ldw	r2,0(r8)
 6ab2404:	39c00044 	addi	r7,r7,1
 6ab2408:	10ffffcc 	andi	r3,r2,65535
 6ab240c:	1987383a 	mul	r3,r3,r6
 6ab2410:	1004d43a 	srli	r2,r2,16
 6ab2414:	1c07883a 	add	r3,r3,r16
 6ab2418:	180ad43a 	srli	r5,r3,16
 6ab241c:	1185383a 	mul	r2,r2,r6
 6ab2420:	18ffffcc 	andi	r3,r3,65535
 6ab2424:	1145883a 	add	r2,r2,r5
 6ab2428:	1008943a 	slli	r4,r2,16
 6ab242c:	1020d43a 	srli	r16,r2,16
 6ab2430:	20c9883a 	add	r4,r4,r3
 6ab2434:	41000015 	stw	r4,0(r8)
 6ab2438:	42000104 	addi	r8,r8,4
 6ab243c:	3cbff016 	blt	r7,r18,6ab2400 <__multadd+0x34>
 6ab2440:	80000826 	beq	r16,zero,6ab2464 <__multadd+0x98>
 6ab2444:	98800217 	ldw	r2,8(r19)
 6ab2448:	90800f0e 	bge	r18,r2,6ab2488 <__multadd+0xbc>
 6ab244c:	9485883a 	add	r2,r18,r18
 6ab2450:	1085883a 	add	r2,r2,r2
 6ab2454:	14c5883a 	add	r2,r2,r19
 6ab2458:	90c00044 	addi	r3,r18,1
 6ab245c:	14000515 	stw	r16,20(r2)
 6ab2460:	98c00415 	stw	r3,16(r19)
 6ab2464:	9805883a 	mov	r2,r19
 6ab2468:	dfc00517 	ldw	ra,20(sp)
 6ab246c:	dd000417 	ldw	r20,16(sp)
 6ab2470:	dcc00317 	ldw	r19,12(sp)
 6ab2474:	dc800217 	ldw	r18,8(sp)
 6ab2478:	dc400117 	ldw	r17,4(sp)
 6ab247c:	dc000017 	ldw	r16,0(sp)
 6ab2480:	dec00604 	addi	sp,sp,24
 6ab2484:	f800283a 	ret
 6ab2488:	99400117 	ldw	r5,4(r19)
 6ab248c:	a009883a 	mov	r4,r20
 6ab2490:	29400044 	addi	r5,r5,1
 6ab2494:	6ab1c980 	call	6ab1c98 <_Balloc>
 6ab2498:	99800417 	ldw	r6,16(r19)
 6ab249c:	99400304 	addi	r5,r19,12
 6ab24a0:	11000304 	addi	r4,r2,12
 6ab24a4:	318d883a 	add	r6,r6,r6
 6ab24a8:	318d883a 	add	r6,r6,r6
 6ab24ac:	31800204 	addi	r6,r6,8
 6ab24b0:	1023883a 	mov	r17,r2
 6ab24b4:	6ab15980 	call	6ab1598 <memcpy>
 6ab24b8:	980b883a 	mov	r5,r19
 6ab24bc:	a009883a 	mov	r4,r20
 6ab24c0:	6ab17180 	call	6ab1718 <_Bfree>
 6ab24c4:	8827883a 	mov	r19,r17
 6ab24c8:	003fe006 	br	6ab244c <__multadd+0x80>

06ab24cc <__pow5mult>:
 6ab24cc:	defffa04 	addi	sp,sp,-24
 6ab24d0:	308000cc 	andi	r2,r6,3
 6ab24d4:	dd000415 	stw	r20,16(sp)
 6ab24d8:	dcc00315 	stw	r19,12(sp)
 6ab24dc:	dc000015 	stw	r16,0(sp)
 6ab24e0:	dfc00515 	stw	ra,20(sp)
 6ab24e4:	dc800215 	stw	r18,8(sp)
 6ab24e8:	dc400115 	stw	r17,4(sp)
 6ab24ec:	3021883a 	mov	r16,r6
 6ab24f0:	2027883a 	mov	r19,r4
 6ab24f4:	2829883a 	mov	r20,r5
 6ab24f8:	10002b1e 	bne	r2,zero,6ab25a8 <__pow5mult+0xdc>
 6ab24fc:	8025d0ba 	srai	r18,r16,2
 6ab2500:	90001b26 	beq	r18,zero,6ab2570 <__pow5mult+0xa4>
 6ab2504:	9c001217 	ldw	r16,72(r19)
 6ab2508:	8000081e 	bne	r16,zero,6ab252c <__pow5mult+0x60>
 6ab250c:	00003006 	br	6ab25d0 <__pow5mult+0x104>
 6ab2510:	800b883a 	mov	r5,r16
 6ab2514:	800d883a 	mov	r6,r16
 6ab2518:	9809883a 	mov	r4,r19
 6ab251c:	90001426 	beq	r18,zero,6ab2570 <__pow5mult+0xa4>
 6ab2520:	80800017 	ldw	r2,0(r16)
 6ab2524:	10001b26 	beq	r2,zero,6ab2594 <__pow5mult+0xc8>
 6ab2528:	1021883a 	mov	r16,r2
 6ab252c:	9080004c 	andi	r2,r18,1
 6ab2530:	1005003a 	cmpeq	r2,r2,zero
 6ab2534:	9025d07a 	srai	r18,r18,1
 6ab2538:	800d883a 	mov	r6,r16
 6ab253c:	9809883a 	mov	r4,r19
 6ab2540:	a00b883a 	mov	r5,r20
 6ab2544:	103ff21e 	bne	r2,zero,6ab2510 <__pow5mult+0x44>
 6ab2548:	6ab21a80 	call	6ab21a8 <__multiply>
 6ab254c:	a00b883a 	mov	r5,r20
 6ab2550:	9809883a 	mov	r4,r19
 6ab2554:	1023883a 	mov	r17,r2
 6ab2558:	6ab17180 	call	6ab1718 <_Bfree>
 6ab255c:	8829883a 	mov	r20,r17
 6ab2560:	800b883a 	mov	r5,r16
 6ab2564:	800d883a 	mov	r6,r16
 6ab2568:	9809883a 	mov	r4,r19
 6ab256c:	903fec1e 	bne	r18,zero,6ab2520 <__pow5mult+0x54>
 6ab2570:	a005883a 	mov	r2,r20
 6ab2574:	dfc00517 	ldw	ra,20(sp)
 6ab2578:	dd000417 	ldw	r20,16(sp)
 6ab257c:	dcc00317 	ldw	r19,12(sp)
 6ab2580:	dc800217 	ldw	r18,8(sp)
 6ab2584:	dc400117 	ldw	r17,4(sp)
 6ab2588:	dc000017 	ldw	r16,0(sp)
 6ab258c:	dec00604 	addi	sp,sp,24
 6ab2590:	f800283a 	ret
 6ab2594:	6ab21a80 	call	6ab21a8 <__multiply>
 6ab2598:	80800015 	stw	r2,0(r16)
 6ab259c:	1021883a 	mov	r16,r2
 6ab25a0:	10000015 	stw	zero,0(r2)
 6ab25a4:	003fe106 	br	6ab252c <__pow5mult+0x60>
 6ab25a8:	1085883a 	add	r2,r2,r2
 6ab25ac:	00c1ab34 	movhi	r3,1708
 6ab25b0:	18e2c704 	addi	r3,r3,-29924
 6ab25b4:	1085883a 	add	r2,r2,r2
 6ab25b8:	10c5883a 	add	r2,r2,r3
 6ab25bc:	11bfff17 	ldw	r6,-4(r2)
 6ab25c0:	000f883a 	mov	r7,zero
 6ab25c4:	6ab23cc0 	call	6ab23cc <__multadd>
 6ab25c8:	1029883a 	mov	r20,r2
 6ab25cc:	003fcb06 	br	6ab24fc <__pow5mult+0x30>
 6ab25d0:	9809883a 	mov	r4,r19
 6ab25d4:	01409c44 	movi	r5,625
 6ab25d8:	6ab23900 	call	6ab2390 <__i2b>
 6ab25dc:	98801215 	stw	r2,72(r19)
 6ab25e0:	1021883a 	mov	r16,r2
 6ab25e4:	10000015 	stw	zero,0(r2)
 6ab25e8:	003fd006 	br	6ab252c <__pow5mult+0x60>

06ab25ec <__s2b>:
 6ab25ec:	defff904 	addi	sp,sp,-28
 6ab25f0:	dcc00315 	stw	r19,12(sp)
 6ab25f4:	dc800215 	stw	r18,8(sp)
 6ab25f8:	2827883a 	mov	r19,r5
 6ab25fc:	2025883a 	mov	r18,r4
 6ab2600:	01400244 	movi	r5,9
 6ab2604:	39000204 	addi	r4,r7,8
 6ab2608:	dd000415 	stw	r20,16(sp)
 6ab260c:	dc400115 	stw	r17,4(sp)
 6ab2610:	dfc00615 	stw	ra,24(sp)
 6ab2614:	dd400515 	stw	r21,20(sp)
 6ab2618:	dc000015 	stw	r16,0(sp)
 6ab261c:	3829883a 	mov	r20,r7
 6ab2620:	3023883a 	mov	r17,r6
 6ab2624:	6ab4d000 	call	6ab4d00 <__divsi3>
 6ab2628:	00c00044 	movi	r3,1
 6ab262c:	1880350e 	bge	r3,r2,6ab2704 <__s2b+0x118>
 6ab2630:	000b883a 	mov	r5,zero
 6ab2634:	18c7883a 	add	r3,r3,r3
 6ab2638:	29400044 	addi	r5,r5,1
 6ab263c:	18bffd16 	blt	r3,r2,6ab2634 <__s2b+0x48>
 6ab2640:	9009883a 	mov	r4,r18
 6ab2644:	6ab1c980 	call	6ab1c98 <_Balloc>
 6ab2648:	1011883a 	mov	r8,r2
 6ab264c:	d8800717 	ldw	r2,28(sp)
 6ab2650:	00c00044 	movi	r3,1
 6ab2654:	01800244 	movi	r6,9
 6ab2658:	40800515 	stw	r2,20(r8)
 6ab265c:	40c00415 	stw	r3,16(r8)
 6ab2660:	3440260e 	bge	r6,r17,6ab26fc <__s2b+0x110>
 6ab2664:	3021883a 	mov	r16,r6
 6ab2668:	99ab883a 	add	r21,r19,r6
 6ab266c:	9c05883a 	add	r2,r19,r16
 6ab2670:	11c00007 	ldb	r7,0(r2)
 6ab2674:	400b883a 	mov	r5,r8
 6ab2678:	9009883a 	mov	r4,r18
 6ab267c:	39fff404 	addi	r7,r7,-48
 6ab2680:	01800284 	movi	r6,10
 6ab2684:	6ab23cc0 	call	6ab23cc <__multadd>
 6ab2688:	84000044 	addi	r16,r16,1
 6ab268c:	1011883a 	mov	r8,r2
 6ab2690:	8c3ff61e 	bne	r17,r16,6ab266c <__s2b+0x80>
 6ab2694:	ac45883a 	add	r2,r21,r17
 6ab2698:	117ffe04 	addi	r5,r2,-8
 6ab269c:	880d883a 	mov	r6,r17
 6ab26a0:	35000c0e 	bge	r6,r20,6ab26d4 <__s2b+0xe8>
 6ab26a4:	a185c83a 	sub	r2,r20,r6
 6ab26a8:	2821883a 	mov	r16,r5
 6ab26ac:	28a3883a 	add	r17,r5,r2
 6ab26b0:	81c00007 	ldb	r7,0(r16)
 6ab26b4:	400b883a 	mov	r5,r8
 6ab26b8:	9009883a 	mov	r4,r18
 6ab26bc:	39fff404 	addi	r7,r7,-48
 6ab26c0:	01800284 	movi	r6,10
 6ab26c4:	6ab23cc0 	call	6ab23cc <__multadd>
 6ab26c8:	84000044 	addi	r16,r16,1
 6ab26cc:	1011883a 	mov	r8,r2
 6ab26d0:	847ff71e 	bne	r16,r17,6ab26b0 <__s2b+0xc4>
 6ab26d4:	4005883a 	mov	r2,r8
 6ab26d8:	dfc00617 	ldw	ra,24(sp)
 6ab26dc:	dd400517 	ldw	r21,20(sp)
 6ab26e0:	dd000417 	ldw	r20,16(sp)
 6ab26e4:	dcc00317 	ldw	r19,12(sp)
 6ab26e8:	dc800217 	ldw	r18,8(sp)
 6ab26ec:	dc400117 	ldw	r17,4(sp)
 6ab26f0:	dc000017 	ldw	r16,0(sp)
 6ab26f4:	dec00704 	addi	sp,sp,28
 6ab26f8:	f800283a 	ret
 6ab26fc:	99400284 	addi	r5,r19,10
 6ab2700:	003fe706 	br	6ab26a0 <__s2b+0xb4>
 6ab2704:	000b883a 	mov	r5,zero
 6ab2708:	003fcd06 	br	6ab2640 <__s2b+0x54>

06ab270c <_read_r>:
 6ab270c:	defffd04 	addi	sp,sp,-12
 6ab2710:	dc000015 	stw	r16,0(sp)
 6ab2714:	0401ab34 	movhi	r16,1708
 6ab2718:	84308504 	addi	r16,r16,-15852
 6ab271c:	dc400115 	stw	r17,4(sp)
 6ab2720:	80000015 	stw	zero,0(r16)
 6ab2724:	2023883a 	mov	r17,r4
 6ab2728:	2809883a 	mov	r4,r5
 6ab272c:	300b883a 	mov	r5,r6
 6ab2730:	380d883a 	mov	r6,r7
 6ab2734:	dfc00215 	stw	ra,8(sp)
 6ab2738:	6ab5de40 	call	6ab5de4 <read>
 6ab273c:	1007883a 	mov	r3,r2
 6ab2740:	00bfffc4 	movi	r2,-1
 6ab2744:	18800626 	beq	r3,r2,6ab2760 <_read_r+0x54>
 6ab2748:	1805883a 	mov	r2,r3
 6ab274c:	dfc00217 	ldw	ra,8(sp)
 6ab2750:	dc400117 	ldw	r17,4(sp)
 6ab2754:	dc000017 	ldw	r16,0(sp)
 6ab2758:	dec00304 	addi	sp,sp,12
 6ab275c:	f800283a 	ret
 6ab2760:	80800017 	ldw	r2,0(r16)
 6ab2764:	103ff826 	beq	r2,zero,6ab2748 <_read_r+0x3c>
 6ab2768:	88800015 	stw	r2,0(r17)
 6ab276c:	1805883a 	mov	r2,r3
 6ab2770:	dfc00217 	ldw	ra,8(sp)
 6ab2774:	dc400117 	ldw	r17,4(sp)
 6ab2778:	dc000017 	ldw	r16,0(sp)
 6ab277c:	dec00304 	addi	sp,sp,12
 6ab2780:	f800283a 	ret

06ab2784 <_realloc_r>:
 6ab2784:	defff404 	addi	sp,sp,-48
 6ab2788:	dd800815 	stw	r22,32(sp)
 6ab278c:	dc800415 	stw	r18,16(sp)
 6ab2790:	dc400315 	stw	r17,12(sp)
 6ab2794:	dfc00b15 	stw	ra,44(sp)
 6ab2798:	df000a15 	stw	fp,40(sp)
 6ab279c:	ddc00915 	stw	r23,36(sp)
 6ab27a0:	dd400715 	stw	r21,28(sp)
 6ab27a4:	dd000615 	stw	r20,24(sp)
 6ab27a8:	dcc00515 	stw	r19,20(sp)
 6ab27ac:	dc000215 	stw	r16,8(sp)
 6ab27b0:	2825883a 	mov	r18,r5
 6ab27b4:	3023883a 	mov	r17,r6
 6ab27b8:	202d883a 	mov	r22,r4
 6ab27bc:	2800c926 	beq	r5,zero,6ab2ae4 <_realloc_r+0x360>
 6ab27c0:	6ab5ae00 	call	6ab5ae0 <__malloc_lock>
 6ab27c4:	943ffe04 	addi	r16,r18,-8
 6ab27c8:	88c002c4 	addi	r3,r17,11
 6ab27cc:	00800584 	movi	r2,22
 6ab27d0:	82000117 	ldw	r8,4(r16)
 6ab27d4:	10c01b2e 	bgeu	r2,r3,6ab2844 <_realloc_r+0xc0>
 6ab27d8:	00bffe04 	movi	r2,-8
 6ab27dc:	188e703a 	and	r7,r3,r2
 6ab27e0:	3839883a 	mov	fp,r7
 6ab27e4:	38001a16 	blt	r7,zero,6ab2850 <_realloc_r+0xcc>
 6ab27e8:	e4401936 	bltu	fp,r17,6ab2850 <_realloc_r+0xcc>
 6ab27ec:	013fff04 	movi	r4,-4
 6ab27f0:	4126703a 	and	r19,r8,r4
 6ab27f4:	99c02616 	blt	r19,r7,6ab2890 <_realloc_r+0x10c>
 6ab27f8:	802b883a 	mov	r21,r16
 6ab27fc:	9829883a 	mov	r20,r19
 6ab2800:	84000204 	addi	r16,r16,8
 6ab2804:	a80f883a 	mov	r7,r21
 6ab2808:	a70dc83a 	sub	r6,r20,fp
 6ab280c:	008003c4 	movi	r2,15
 6ab2810:	1180c136 	bltu	r2,r6,6ab2b18 <_realloc_r+0x394>
 6ab2814:	38800117 	ldw	r2,4(r7)
 6ab2818:	a549883a 	add	r4,r20,r21
 6ab281c:	1080004c 	andi	r2,r2,1
 6ab2820:	a084b03a 	or	r2,r20,r2
 6ab2824:	38800115 	stw	r2,4(r7)
 6ab2828:	20c00117 	ldw	r3,4(r4)
 6ab282c:	18c00054 	ori	r3,r3,1
 6ab2830:	20c00115 	stw	r3,4(r4)
 6ab2834:	b009883a 	mov	r4,r22
 6ab2838:	6ab5b000 	call	6ab5b00 <__malloc_unlock>
 6ab283c:	8023883a 	mov	r17,r16
 6ab2840:	00000606 	br	6ab285c <_realloc_r+0xd8>
 6ab2844:	01c00404 	movi	r7,16
 6ab2848:	3839883a 	mov	fp,r7
 6ab284c:	e47fe72e 	bgeu	fp,r17,6ab27ec <_realloc_r+0x68>
 6ab2850:	00800304 	movi	r2,12
 6ab2854:	0023883a 	mov	r17,zero
 6ab2858:	b0800015 	stw	r2,0(r22)
 6ab285c:	8805883a 	mov	r2,r17
 6ab2860:	dfc00b17 	ldw	ra,44(sp)
 6ab2864:	df000a17 	ldw	fp,40(sp)
 6ab2868:	ddc00917 	ldw	r23,36(sp)
 6ab286c:	dd800817 	ldw	r22,32(sp)
 6ab2870:	dd400717 	ldw	r21,28(sp)
 6ab2874:	dd000617 	ldw	r20,24(sp)
 6ab2878:	dcc00517 	ldw	r19,20(sp)
 6ab287c:	dc800417 	ldw	r18,16(sp)
 6ab2880:	dc400317 	ldw	r17,12(sp)
 6ab2884:	dc000217 	ldw	r16,8(sp)
 6ab2888:	dec00c04 	addi	sp,sp,48
 6ab288c:	f800283a 	ret
 6ab2890:	0081ab34 	movhi	r2,1708
 6ab2894:	10a41f04 	addi	r2,r2,-28548
 6ab2898:	12400217 	ldw	r9,8(r2)
 6ab289c:	84cd883a 	add	r6,r16,r19
 6ab28a0:	802b883a 	mov	r21,r16
 6ab28a4:	3240b926 	beq	r6,r9,6ab2b8c <_realloc_r+0x408>
 6ab28a8:	31400117 	ldw	r5,4(r6)
 6ab28ac:	00bfff84 	movi	r2,-2
 6ab28b0:	2884703a 	and	r2,r5,r2
 6ab28b4:	1185883a 	add	r2,r2,r6
 6ab28b8:	10c00117 	ldw	r3,4(r2)
 6ab28bc:	18c0004c 	andi	r3,r3,1
 6ab28c0:	1807003a 	cmpeq	r3,r3,zero
 6ab28c4:	1800a326 	beq	r3,zero,6ab2b54 <_realloc_r+0x3d0>
 6ab28c8:	2908703a 	and	r4,r5,r4
 6ab28cc:	9929883a 	add	r20,r19,r4
 6ab28d0:	a1c0a30e 	bge	r20,r7,6ab2b60 <_realloc_r+0x3dc>
 6ab28d4:	4080004c 	andi	r2,r8,1
 6ab28d8:	1000551e 	bne	r2,zero,6ab2a30 <_realloc_r+0x2ac>
 6ab28dc:	80800017 	ldw	r2,0(r16)
 6ab28e0:	80afc83a 	sub	r23,r16,r2
 6ab28e4:	b8c00117 	ldw	r3,4(r23)
 6ab28e8:	00bfff04 	movi	r2,-4
 6ab28ec:	1884703a 	and	r2,r3,r2
 6ab28f0:	30002e26 	beq	r6,zero,6ab29ac <_realloc_r+0x228>
 6ab28f4:	3240b926 	beq	r6,r9,6ab2bdc <_realloc_r+0x458>
 6ab28f8:	98a9883a 	add	r20,r19,r2
 6ab28fc:	2509883a 	add	r4,r4,r20
 6ab2900:	d9000015 	stw	r4,0(sp)
 6ab2904:	21c02a16 	blt	r4,r7,6ab29b0 <_realloc_r+0x22c>
 6ab2908:	30800317 	ldw	r2,12(r6)
 6ab290c:	30c00217 	ldw	r3,8(r6)
 6ab2910:	01400904 	movi	r5,36
 6ab2914:	99bfff04 	addi	r6,r19,-4
 6ab2918:	18800315 	stw	r2,12(r3)
 6ab291c:	10c00215 	stw	r3,8(r2)
 6ab2920:	b9000317 	ldw	r4,12(r23)
 6ab2924:	b8800217 	ldw	r2,8(r23)
 6ab2928:	b82b883a 	mov	r21,r23
 6ab292c:	bc000204 	addi	r16,r23,8
 6ab2930:	20800215 	stw	r2,8(r4)
 6ab2934:	11000315 	stw	r4,12(r2)
 6ab2938:	2980e436 	bltu	r5,r6,6ab2ccc <_realloc_r+0x548>
 6ab293c:	008004c4 	movi	r2,19
 6ab2940:	9009883a 	mov	r4,r18
 6ab2944:	8011883a 	mov	r8,r16
 6ab2948:	11800f2e 	bgeu	r2,r6,6ab2988 <_realloc_r+0x204>
 6ab294c:	90800017 	ldw	r2,0(r18)
 6ab2950:	ba000404 	addi	r8,r23,16
 6ab2954:	91000204 	addi	r4,r18,8
 6ab2958:	b8800215 	stw	r2,8(r23)
 6ab295c:	90c00117 	ldw	r3,4(r18)
 6ab2960:	008006c4 	movi	r2,27
 6ab2964:	b8c00315 	stw	r3,12(r23)
 6ab2968:	1180072e 	bgeu	r2,r6,6ab2988 <_realloc_r+0x204>
 6ab296c:	90c00217 	ldw	r3,8(r18)
 6ab2970:	ba000604 	addi	r8,r23,24
 6ab2974:	91000404 	addi	r4,r18,16
 6ab2978:	b8c00415 	stw	r3,16(r23)
 6ab297c:	90800317 	ldw	r2,12(r18)
 6ab2980:	b8800515 	stw	r2,20(r23)
 6ab2984:	3140e726 	beq	r6,r5,6ab2d24 <_realloc_r+0x5a0>
 6ab2988:	20800017 	ldw	r2,0(r4)
 6ab298c:	dd000017 	ldw	r20,0(sp)
 6ab2990:	b80f883a 	mov	r7,r23
 6ab2994:	40800015 	stw	r2,0(r8)
 6ab2998:	20c00117 	ldw	r3,4(r4)
 6ab299c:	40c00115 	stw	r3,4(r8)
 6ab29a0:	20800217 	ldw	r2,8(r4)
 6ab29a4:	40800215 	stw	r2,8(r8)
 6ab29a8:	003f9706 	br	6ab2808 <_realloc_r+0x84>
 6ab29ac:	98a9883a 	add	r20,r19,r2
 6ab29b0:	a1c01f16 	blt	r20,r7,6ab2a30 <_realloc_r+0x2ac>
 6ab29b4:	b8c00317 	ldw	r3,12(r23)
 6ab29b8:	b8800217 	ldw	r2,8(r23)
 6ab29bc:	99bfff04 	addi	r6,r19,-4
 6ab29c0:	01400904 	movi	r5,36
 6ab29c4:	b82b883a 	mov	r21,r23
 6ab29c8:	18800215 	stw	r2,8(r3)
 6ab29cc:	10c00315 	stw	r3,12(r2)
 6ab29d0:	bc000204 	addi	r16,r23,8
 6ab29d4:	2980c336 	bltu	r5,r6,6ab2ce4 <_realloc_r+0x560>
 6ab29d8:	008004c4 	movi	r2,19
 6ab29dc:	9009883a 	mov	r4,r18
 6ab29e0:	8011883a 	mov	r8,r16
 6ab29e4:	11800f2e 	bgeu	r2,r6,6ab2a24 <_realloc_r+0x2a0>
 6ab29e8:	90800017 	ldw	r2,0(r18)
 6ab29ec:	ba000404 	addi	r8,r23,16
 6ab29f0:	91000204 	addi	r4,r18,8
 6ab29f4:	b8800215 	stw	r2,8(r23)
 6ab29f8:	90c00117 	ldw	r3,4(r18)
 6ab29fc:	008006c4 	movi	r2,27
 6ab2a00:	b8c00315 	stw	r3,12(r23)
 6ab2a04:	1180072e 	bgeu	r2,r6,6ab2a24 <_realloc_r+0x2a0>
 6ab2a08:	90c00217 	ldw	r3,8(r18)
 6ab2a0c:	ba000604 	addi	r8,r23,24
 6ab2a10:	91000404 	addi	r4,r18,16
 6ab2a14:	b8c00415 	stw	r3,16(r23)
 6ab2a18:	90800317 	ldw	r2,12(r18)
 6ab2a1c:	b8800515 	stw	r2,20(r23)
 6ab2a20:	3140c726 	beq	r6,r5,6ab2d40 <_realloc_r+0x5bc>
 6ab2a24:	20800017 	ldw	r2,0(r4)
 6ab2a28:	b80f883a 	mov	r7,r23
 6ab2a2c:	003fd906 	br	6ab2994 <_realloc_r+0x210>
 6ab2a30:	880b883a 	mov	r5,r17
 6ab2a34:	b009883a 	mov	r4,r22
 6ab2a38:	6aac35c0 	call	6aac35c <_malloc_r>
 6ab2a3c:	1023883a 	mov	r17,r2
 6ab2a40:	10002526 	beq	r2,zero,6ab2ad8 <_realloc_r+0x354>
 6ab2a44:	80800117 	ldw	r2,4(r16)
 6ab2a48:	00ffff84 	movi	r3,-2
 6ab2a4c:	893ffe04 	addi	r4,r17,-8
 6ab2a50:	10c4703a 	and	r2,r2,r3
 6ab2a54:	8085883a 	add	r2,r16,r2
 6ab2a58:	20809526 	beq	r4,r2,6ab2cb0 <_realloc_r+0x52c>
 6ab2a5c:	99bfff04 	addi	r6,r19,-4
 6ab2a60:	01c00904 	movi	r7,36
 6ab2a64:	39804536 	bltu	r7,r6,6ab2b7c <_realloc_r+0x3f8>
 6ab2a68:	008004c4 	movi	r2,19
 6ab2a6c:	9009883a 	mov	r4,r18
 6ab2a70:	880b883a 	mov	r5,r17
 6ab2a74:	11800f2e 	bgeu	r2,r6,6ab2ab4 <_realloc_r+0x330>
 6ab2a78:	90800017 	ldw	r2,0(r18)
 6ab2a7c:	89400204 	addi	r5,r17,8
 6ab2a80:	91000204 	addi	r4,r18,8
 6ab2a84:	88800015 	stw	r2,0(r17)
 6ab2a88:	90c00117 	ldw	r3,4(r18)
 6ab2a8c:	008006c4 	movi	r2,27
 6ab2a90:	88c00115 	stw	r3,4(r17)
 6ab2a94:	1180072e 	bgeu	r2,r6,6ab2ab4 <_realloc_r+0x330>
 6ab2a98:	90c00217 	ldw	r3,8(r18)
 6ab2a9c:	89400404 	addi	r5,r17,16
 6ab2aa0:	91000404 	addi	r4,r18,16
 6ab2aa4:	88c00215 	stw	r3,8(r17)
 6ab2aa8:	90800317 	ldw	r2,12(r18)
 6ab2aac:	88800315 	stw	r2,12(r17)
 6ab2ab0:	31c09126 	beq	r6,r7,6ab2cf8 <_realloc_r+0x574>
 6ab2ab4:	20800017 	ldw	r2,0(r4)
 6ab2ab8:	28800015 	stw	r2,0(r5)
 6ab2abc:	20c00117 	ldw	r3,4(r4)
 6ab2ac0:	28c00115 	stw	r3,4(r5)
 6ab2ac4:	20800217 	ldw	r2,8(r4)
 6ab2ac8:	28800215 	stw	r2,8(r5)
 6ab2acc:	900b883a 	mov	r5,r18
 6ab2ad0:	b009883a 	mov	r4,r22
 6ab2ad4:	6aab8600 	call	6aab860 <_free_r>
 6ab2ad8:	b009883a 	mov	r4,r22
 6ab2adc:	6ab5b000 	call	6ab5b00 <__malloc_unlock>
 6ab2ae0:	003f5e06 	br	6ab285c <_realloc_r+0xd8>
 6ab2ae4:	300b883a 	mov	r5,r6
 6ab2ae8:	dfc00b17 	ldw	ra,44(sp)
 6ab2aec:	df000a17 	ldw	fp,40(sp)
 6ab2af0:	ddc00917 	ldw	r23,36(sp)
 6ab2af4:	dd800817 	ldw	r22,32(sp)
 6ab2af8:	dd400717 	ldw	r21,28(sp)
 6ab2afc:	dd000617 	ldw	r20,24(sp)
 6ab2b00:	dcc00517 	ldw	r19,20(sp)
 6ab2b04:	dc800417 	ldw	r18,16(sp)
 6ab2b08:	dc400317 	ldw	r17,12(sp)
 6ab2b0c:	dc000217 	ldw	r16,8(sp)
 6ab2b10:	dec00c04 	addi	sp,sp,48
 6ab2b14:	6aac35c1 	jmpi	6aac35c <_malloc_r>
 6ab2b18:	38800117 	ldw	r2,4(r7)
 6ab2b1c:	e54b883a 	add	r5,fp,r21
 6ab2b20:	31000054 	ori	r4,r6,1
 6ab2b24:	1080004c 	andi	r2,r2,1
 6ab2b28:	1704b03a 	or	r2,r2,fp
 6ab2b2c:	38800115 	stw	r2,4(r7)
 6ab2b30:	29000115 	stw	r4,4(r5)
 6ab2b34:	2987883a 	add	r3,r5,r6
 6ab2b38:	18800117 	ldw	r2,4(r3)
 6ab2b3c:	29400204 	addi	r5,r5,8
 6ab2b40:	b009883a 	mov	r4,r22
 6ab2b44:	10800054 	ori	r2,r2,1
 6ab2b48:	18800115 	stw	r2,4(r3)
 6ab2b4c:	6aab8600 	call	6aab860 <_free_r>
 6ab2b50:	003f3806 	br	6ab2834 <_realloc_r+0xb0>
 6ab2b54:	000d883a 	mov	r6,zero
 6ab2b58:	0009883a 	mov	r4,zero
 6ab2b5c:	003f5d06 	br	6ab28d4 <_realloc_r+0x150>
 6ab2b60:	30c00217 	ldw	r3,8(r6)
 6ab2b64:	30800317 	ldw	r2,12(r6)
 6ab2b68:	800f883a 	mov	r7,r16
 6ab2b6c:	84000204 	addi	r16,r16,8
 6ab2b70:	10c00215 	stw	r3,8(r2)
 6ab2b74:	18800315 	stw	r2,12(r3)
 6ab2b78:	003f2306 	br	6ab2808 <_realloc_r+0x84>
 6ab2b7c:	8809883a 	mov	r4,r17
 6ab2b80:	900b883a 	mov	r5,r18
 6ab2b84:	6ab16380 	call	6ab1638 <memmove>
 6ab2b88:	003fd006 	br	6ab2acc <_realloc_r+0x348>
 6ab2b8c:	30800117 	ldw	r2,4(r6)
 6ab2b90:	e0c00404 	addi	r3,fp,16
 6ab2b94:	1108703a 	and	r4,r2,r4
 6ab2b98:	9905883a 	add	r2,r19,r4
 6ab2b9c:	10ff4d16 	blt	r2,r3,6ab28d4 <_realloc_r+0x150>
 6ab2ba0:	1705c83a 	sub	r2,r2,fp
 6ab2ba4:	870b883a 	add	r5,r16,fp
 6ab2ba8:	10800054 	ori	r2,r2,1
 6ab2bac:	28800115 	stw	r2,4(r5)
 6ab2bb0:	80c00117 	ldw	r3,4(r16)
 6ab2bb4:	0081ab34 	movhi	r2,1708
 6ab2bb8:	10a41f04 	addi	r2,r2,-28548
 6ab2bbc:	b009883a 	mov	r4,r22
 6ab2bc0:	18c0004c 	andi	r3,r3,1
 6ab2bc4:	e0c6b03a 	or	r3,fp,r3
 6ab2bc8:	11400215 	stw	r5,8(r2)
 6ab2bcc:	80c00115 	stw	r3,4(r16)
 6ab2bd0:	6ab5b000 	call	6ab5b00 <__malloc_unlock>
 6ab2bd4:	84400204 	addi	r17,r16,8
 6ab2bd8:	003f2006 	br	6ab285c <_realloc_r+0xd8>
 6ab2bdc:	98a9883a 	add	r20,r19,r2
 6ab2be0:	2509883a 	add	r4,r4,r20
 6ab2be4:	e0800404 	addi	r2,fp,16
 6ab2be8:	d9000115 	stw	r4,4(sp)
 6ab2bec:	20bf7016 	blt	r4,r2,6ab29b0 <_realloc_r+0x22c>
 6ab2bf0:	b8c00317 	ldw	r3,12(r23)
 6ab2bf4:	b8800217 	ldw	r2,8(r23)
 6ab2bf8:	99bfff04 	addi	r6,r19,-4
 6ab2bfc:	01400904 	movi	r5,36
 6ab2c00:	18800215 	stw	r2,8(r3)
 6ab2c04:	10c00315 	stw	r3,12(r2)
 6ab2c08:	bc400204 	addi	r17,r23,8
 6ab2c0c:	29804136 	bltu	r5,r6,6ab2d14 <_realloc_r+0x590>
 6ab2c10:	008004c4 	movi	r2,19
 6ab2c14:	9009883a 	mov	r4,r18
 6ab2c18:	880f883a 	mov	r7,r17
 6ab2c1c:	11800f2e 	bgeu	r2,r6,6ab2c5c <_realloc_r+0x4d8>
 6ab2c20:	90800017 	ldw	r2,0(r18)
 6ab2c24:	b9c00404 	addi	r7,r23,16
 6ab2c28:	91000204 	addi	r4,r18,8
 6ab2c2c:	b8800215 	stw	r2,8(r23)
 6ab2c30:	90c00117 	ldw	r3,4(r18)
 6ab2c34:	008006c4 	movi	r2,27
 6ab2c38:	b8c00315 	stw	r3,12(r23)
 6ab2c3c:	1180072e 	bgeu	r2,r6,6ab2c5c <_realloc_r+0x4d8>
 6ab2c40:	90c00217 	ldw	r3,8(r18)
 6ab2c44:	b9c00604 	addi	r7,r23,24
 6ab2c48:	91000404 	addi	r4,r18,16
 6ab2c4c:	b8c00415 	stw	r3,16(r23)
 6ab2c50:	90800317 	ldw	r2,12(r18)
 6ab2c54:	b8800515 	stw	r2,20(r23)
 6ab2c58:	31404026 	beq	r6,r5,6ab2d5c <_realloc_r+0x5d8>
 6ab2c5c:	20800017 	ldw	r2,0(r4)
 6ab2c60:	38800015 	stw	r2,0(r7)
 6ab2c64:	20c00117 	ldw	r3,4(r4)
 6ab2c68:	38c00115 	stw	r3,4(r7)
 6ab2c6c:	20800217 	ldw	r2,8(r4)
 6ab2c70:	38800215 	stw	r2,8(r7)
 6ab2c74:	d8c00117 	ldw	r3,4(sp)
 6ab2c78:	bf0b883a 	add	r5,r23,fp
 6ab2c7c:	b009883a 	mov	r4,r22
 6ab2c80:	1f05c83a 	sub	r2,r3,fp
 6ab2c84:	10800054 	ori	r2,r2,1
 6ab2c88:	28800115 	stw	r2,4(r5)
 6ab2c8c:	b8c00117 	ldw	r3,4(r23)
 6ab2c90:	0081ab34 	movhi	r2,1708
 6ab2c94:	10a41f04 	addi	r2,r2,-28548
 6ab2c98:	11400215 	stw	r5,8(r2)
 6ab2c9c:	18c0004c 	andi	r3,r3,1
 6ab2ca0:	e0c6b03a 	or	r3,fp,r3
 6ab2ca4:	b8c00115 	stw	r3,4(r23)
 6ab2ca8:	6ab5b000 	call	6ab5b00 <__malloc_unlock>
 6ab2cac:	003eeb06 	br	6ab285c <_realloc_r+0xd8>
 6ab2cb0:	20800117 	ldw	r2,4(r4)
 6ab2cb4:	00ffff04 	movi	r3,-4
 6ab2cb8:	800f883a 	mov	r7,r16
 6ab2cbc:	10c4703a 	and	r2,r2,r3
 6ab2cc0:	98a9883a 	add	r20,r19,r2
 6ab2cc4:	84000204 	addi	r16,r16,8
 6ab2cc8:	003ecf06 	br	6ab2808 <_realloc_r+0x84>
 6ab2ccc:	900b883a 	mov	r5,r18
 6ab2cd0:	8009883a 	mov	r4,r16
 6ab2cd4:	6ab16380 	call	6ab1638 <memmove>
 6ab2cd8:	dd000017 	ldw	r20,0(sp)
 6ab2cdc:	b80f883a 	mov	r7,r23
 6ab2ce0:	003ec906 	br	6ab2808 <_realloc_r+0x84>
 6ab2ce4:	900b883a 	mov	r5,r18
 6ab2ce8:	8009883a 	mov	r4,r16
 6ab2cec:	6ab16380 	call	6ab1638 <memmove>
 6ab2cf0:	b80f883a 	mov	r7,r23
 6ab2cf4:	003ec406 	br	6ab2808 <_realloc_r+0x84>
 6ab2cf8:	90c00417 	ldw	r3,16(r18)
 6ab2cfc:	89400604 	addi	r5,r17,24
 6ab2d00:	91000604 	addi	r4,r18,24
 6ab2d04:	88c00415 	stw	r3,16(r17)
 6ab2d08:	90800517 	ldw	r2,20(r18)
 6ab2d0c:	88800515 	stw	r2,20(r17)
 6ab2d10:	003f6806 	br	6ab2ab4 <_realloc_r+0x330>
 6ab2d14:	900b883a 	mov	r5,r18
 6ab2d18:	8809883a 	mov	r4,r17
 6ab2d1c:	6ab16380 	call	6ab1638 <memmove>
 6ab2d20:	003fd406 	br	6ab2c74 <_realloc_r+0x4f0>
 6ab2d24:	90c00417 	ldw	r3,16(r18)
 6ab2d28:	91000604 	addi	r4,r18,24
 6ab2d2c:	ba000804 	addi	r8,r23,32
 6ab2d30:	b8c00615 	stw	r3,24(r23)
 6ab2d34:	90800517 	ldw	r2,20(r18)
 6ab2d38:	b8800715 	stw	r2,28(r23)
 6ab2d3c:	003f1206 	br	6ab2988 <_realloc_r+0x204>
 6ab2d40:	90c00417 	ldw	r3,16(r18)
 6ab2d44:	91000604 	addi	r4,r18,24
 6ab2d48:	ba000804 	addi	r8,r23,32
 6ab2d4c:	b8c00615 	stw	r3,24(r23)
 6ab2d50:	90800517 	ldw	r2,20(r18)
 6ab2d54:	b8800715 	stw	r2,28(r23)
 6ab2d58:	003f3206 	br	6ab2a24 <_realloc_r+0x2a0>
 6ab2d5c:	90c00417 	ldw	r3,16(r18)
 6ab2d60:	91000604 	addi	r4,r18,24
 6ab2d64:	b9c00804 	addi	r7,r23,32
 6ab2d68:	b8c00615 	stw	r3,24(r23)
 6ab2d6c:	90800517 	ldw	r2,20(r18)
 6ab2d70:	b8800715 	stw	r2,28(r23)
 6ab2d74:	003fb906 	br	6ab2c5c <_realloc_r+0x4d8>

06ab2d78 <__isinfd>:
 6ab2d78:	200d883a 	mov	r6,r4
 6ab2d7c:	0109c83a 	sub	r4,zero,r4
 6ab2d80:	2188b03a 	or	r4,r4,r6
 6ab2d84:	2008d7fa 	srli	r4,r4,31
 6ab2d88:	00a00034 	movhi	r2,32768
 6ab2d8c:	10bfffc4 	addi	r2,r2,-1
 6ab2d90:	1144703a 	and	r2,r2,r5
 6ab2d94:	2088b03a 	or	r4,r4,r2
 6ab2d98:	009ffc34 	movhi	r2,32752
 6ab2d9c:	1105c83a 	sub	r2,r2,r4
 6ab2da0:	0087c83a 	sub	r3,zero,r2
 6ab2da4:	10c4b03a 	or	r2,r2,r3
 6ab2da8:	1004d7fa 	srli	r2,r2,31
 6ab2dac:	00c00044 	movi	r3,1
 6ab2db0:	1885c83a 	sub	r2,r3,r2
 6ab2db4:	f800283a 	ret

06ab2db8 <__isnand>:
 6ab2db8:	200d883a 	mov	r6,r4
 6ab2dbc:	0109c83a 	sub	r4,zero,r4
 6ab2dc0:	2188b03a 	or	r4,r4,r6
 6ab2dc4:	2008d7fa 	srli	r4,r4,31
 6ab2dc8:	00a00034 	movhi	r2,32768
 6ab2dcc:	10bfffc4 	addi	r2,r2,-1
 6ab2dd0:	1144703a 	and	r2,r2,r5
 6ab2dd4:	2088b03a 	or	r4,r4,r2
 6ab2dd8:	009ffc34 	movhi	r2,32752
 6ab2ddc:	1105c83a 	sub	r2,r2,r4
 6ab2de0:	1004d7fa 	srli	r2,r2,31
 6ab2de4:	f800283a 	ret

06ab2de8 <strcmp>:
 6ab2de8:	2144b03a 	or	r2,r4,r5
 6ab2dec:	108000cc 	andi	r2,r2,3
 6ab2df0:	10001d1e 	bne	r2,zero,6ab2e68 <strcmp+0x80>
 6ab2df4:	200f883a 	mov	r7,r4
 6ab2df8:	28800017 	ldw	r2,0(r5)
 6ab2dfc:	21000017 	ldw	r4,0(r4)
 6ab2e00:	280d883a 	mov	r6,r5
 6ab2e04:	2080161e 	bne	r4,r2,6ab2e60 <strcmp+0x78>
 6ab2e08:	023fbff4 	movhi	r8,65279
 6ab2e0c:	423fbfc4 	addi	r8,r8,-257
 6ab2e10:	2207883a 	add	r3,r4,r8
 6ab2e14:	01602074 	movhi	r5,32897
 6ab2e18:	29602004 	addi	r5,r5,-32640
 6ab2e1c:	1946703a 	and	r3,r3,r5
 6ab2e20:	0104303a 	nor	r2,zero,r4
 6ab2e24:	10c4703a 	and	r2,r2,r3
 6ab2e28:	10001c1e 	bne	r2,zero,6ab2e9c <strcmp+0xb4>
 6ab2e2c:	4013883a 	mov	r9,r8
 6ab2e30:	2811883a 	mov	r8,r5
 6ab2e34:	00000106 	br	6ab2e3c <strcmp+0x54>
 6ab2e38:	1800181e 	bne	r3,zero,6ab2e9c <strcmp+0xb4>
 6ab2e3c:	39c00104 	addi	r7,r7,4
 6ab2e40:	39000017 	ldw	r4,0(r7)
 6ab2e44:	31800104 	addi	r6,r6,4
 6ab2e48:	31400017 	ldw	r5,0(r6)
 6ab2e4c:	2245883a 	add	r2,r4,r9
 6ab2e50:	1204703a 	and	r2,r2,r8
 6ab2e54:	0106303a 	nor	r3,zero,r4
 6ab2e58:	1886703a 	and	r3,r3,r2
 6ab2e5c:	217ff626 	beq	r4,r5,6ab2e38 <strcmp+0x50>
 6ab2e60:	3809883a 	mov	r4,r7
 6ab2e64:	300b883a 	mov	r5,r6
 6ab2e68:	20c00007 	ldb	r3,0(r4)
 6ab2e6c:	1800051e 	bne	r3,zero,6ab2e84 <strcmp+0x9c>
 6ab2e70:	00000606 	br	6ab2e8c <strcmp+0xa4>
 6ab2e74:	21000044 	addi	r4,r4,1
 6ab2e78:	20c00007 	ldb	r3,0(r4)
 6ab2e7c:	29400044 	addi	r5,r5,1
 6ab2e80:	18000226 	beq	r3,zero,6ab2e8c <strcmp+0xa4>
 6ab2e84:	28800007 	ldb	r2,0(r5)
 6ab2e88:	18bffa26 	beq	r3,r2,6ab2e74 <strcmp+0x8c>
 6ab2e8c:	20c00003 	ldbu	r3,0(r4)
 6ab2e90:	28800003 	ldbu	r2,0(r5)
 6ab2e94:	1885c83a 	sub	r2,r3,r2
 6ab2e98:	f800283a 	ret
 6ab2e9c:	0005883a 	mov	r2,zero
 6ab2ea0:	f800283a 	ret

06ab2ea4 <strlen>:
 6ab2ea4:	208000cc 	andi	r2,r4,3
 6ab2ea8:	2011883a 	mov	r8,r4
 6ab2eac:	1000161e 	bne	r2,zero,6ab2f08 <strlen+0x64>
 6ab2eb0:	20c00017 	ldw	r3,0(r4)
 6ab2eb4:	017fbff4 	movhi	r5,65279
 6ab2eb8:	297fbfc4 	addi	r5,r5,-257
 6ab2ebc:	01e02074 	movhi	r7,32897
 6ab2ec0:	39e02004 	addi	r7,r7,-32640
 6ab2ec4:	1945883a 	add	r2,r3,r5
 6ab2ec8:	11c4703a 	and	r2,r2,r7
 6ab2ecc:	00c6303a 	nor	r3,zero,r3
 6ab2ed0:	1886703a 	and	r3,r3,r2
 6ab2ed4:	18000c1e 	bne	r3,zero,6ab2f08 <strlen+0x64>
 6ab2ed8:	280d883a 	mov	r6,r5
 6ab2edc:	380b883a 	mov	r5,r7
 6ab2ee0:	21000104 	addi	r4,r4,4
 6ab2ee4:	20800017 	ldw	r2,0(r4)
 6ab2ee8:	1187883a 	add	r3,r2,r6
 6ab2eec:	1946703a 	and	r3,r3,r5
 6ab2ef0:	0084303a 	nor	r2,zero,r2
 6ab2ef4:	10c4703a 	and	r2,r2,r3
 6ab2ef8:	103ff926 	beq	r2,zero,6ab2ee0 <strlen+0x3c>
 6ab2efc:	20800007 	ldb	r2,0(r4)
 6ab2f00:	10000326 	beq	r2,zero,6ab2f10 <strlen+0x6c>
 6ab2f04:	21000044 	addi	r4,r4,1
 6ab2f08:	20800007 	ldb	r2,0(r4)
 6ab2f0c:	103ffd1e 	bne	r2,zero,6ab2f04 <strlen+0x60>
 6ab2f10:	2205c83a 	sub	r2,r4,r8
 6ab2f14:	f800283a 	ret

06ab2f18 <_calloc_r>:
 6ab2f18:	298b383a 	mul	r5,r5,r6
 6ab2f1c:	defffe04 	addi	sp,sp,-8
 6ab2f20:	dc000015 	stw	r16,0(sp)
 6ab2f24:	dfc00115 	stw	ra,4(sp)
 6ab2f28:	6aac35c0 	call	6aac35c <_malloc_r>
 6ab2f2c:	1021883a 	mov	r16,r2
 6ab2f30:	01c00904 	movi	r7,36
 6ab2f34:	10000d26 	beq	r2,zero,6ab2f6c <_calloc_r+0x54>
 6ab2f38:	10ffff17 	ldw	r3,-4(r2)
 6ab2f3c:	1009883a 	mov	r4,r2
 6ab2f40:	00bfff04 	movi	r2,-4
 6ab2f44:	1886703a 	and	r3,r3,r2
 6ab2f48:	1887883a 	add	r3,r3,r2
 6ab2f4c:	180d883a 	mov	r6,r3
 6ab2f50:	000b883a 	mov	r5,zero
 6ab2f54:	38c01736 	bltu	r7,r3,6ab2fb4 <_calloc_r+0x9c>
 6ab2f58:	008004c4 	movi	r2,19
 6ab2f5c:	10c00836 	bltu	r2,r3,6ab2f80 <_calloc_r+0x68>
 6ab2f60:	20000215 	stw	zero,8(r4)
 6ab2f64:	20000015 	stw	zero,0(r4)
 6ab2f68:	20000115 	stw	zero,4(r4)
 6ab2f6c:	8005883a 	mov	r2,r16
 6ab2f70:	dfc00117 	ldw	ra,4(sp)
 6ab2f74:	dc000017 	ldw	r16,0(sp)
 6ab2f78:	dec00204 	addi	sp,sp,8
 6ab2f7c:	f800283a 	ret
 6ab2f80:	008006c4 	movi	r2,27
 6ab2f84:	80000015 	stw	zero,0(r16)
 6ab2f88:	80000115 	stw	zero,4(r16)
 6ab2f8c:	81000204 	addi	r4,r16,8
 6ab2f90:	10fff32e 	bgeu	r2,r3,6ab2f60 <_calloc_r+0x48>
 6ab2f94:	80000215 	stw	zero,8(r16)
 6ab2f98:	80000315 	stw	zero,12(r16)
 6ab2f9c:	81000404 	addi	r4,r16,16
 6ab2fa0:	19ffef1e 	bne	r3,r7,6ab2f60 <_calloc_r+0x48>
 6ab2fa4:	81000604 	addi	r4,r16,24
 6ab2fa8:	80000415 	stw	zero,16(r16)
 6ab2fac:	80000515 	stw	zero,20(r16)
 6ab2fb0:	003feb06 	br	6ab2f60 <_calloc_r+0x48>
 6ab2fb4:	6aaca9c0 	call	6aaca9c <memset>
 6ab2fb8:	8005883a 	mov	r2,r16
 6ab2fbc:	dfc00117 	ldw	ra,4(sp)
 6ab2fc0:	dc000017 	ldw	r16,0(sp)
 6ab2fc4:	dec00204 	addi	sp,sp,8
 6ab2fc8:	f800283a 	ret

06ab2fcc <__udivdi3>:
 6ab2fcc:	defff004 	addi	sp,sp,-64
 6ab2fd0:	2005883a 	mov	r2,r4
 6ab2fd4:	3011883a 	mov	r8,r6
 6ab2fd8:	df000e15 	stw	fp,56(sp)
 6ab2fdc:	dd000a15 	stw	r20,40(sp)
 6ab2fe0:	dc000615 	stw	r16,24(sp)
 6ab2fe4:	dfc00f15 	stw	ra,60(sp)
 6ab2fe8:	ddc00d15 	stw	r23,52(sp)
 6ab2fec:	dd800c15 	stw	r22,48(sp)
 6ab2ff0:	dd400b15 	stw	r21,44(sp)
 6ab2ff4:	dcc00915 	stw	r19,36(sp)
 6ab2ff8:	dc800815 	stw	r18,32(sp)
 6ab2ffc:	dc400715 	stw	r17,28(sp)
 6ab3000:	4021883a 	mov	r16,r8
 6ab3004:	1039883a 	mov	fp,r2
 6ab3008:	2829883a 	mov	r20,r5
 6ab300c:	38003b1e 	bne	r7,zero,6ab30fc <__udivdi3+0x130>
 6ab3010:	2a005c36 	bltu	r5,r8,6ab3184 <__udivdi3+0x1b8>
 6ab3014:	4000a626 	beq	r8,zero,6ab32b0 <__udivdi3+0x2e4>
 6ab3018:	00bfffd4 	movui	r2,65535
 6ab301c:	14009e36 	bltu	r2,r16,6ab3298 <__udivdi3+0x2cc>
 6ab3020:	00803fc4 	movi	r2,255
 6ab3024:	14013d36 	bltu	r2,r16,6ab351c <__udivdi3+0x550>
 6ab3028:	000b883a 	mov	r5,zero
 6ab302c:	0005883a 	mov	r2,zero
 6ab3030:	8084d83a 	srl	r2,r16,r2
 6ab3034:	0101ab34 	movhi	r4,1708
 6ab3038:	2122cf04 	addi	r4,r4,-29892
 6ab303c:	01800804 	movi	r6,32
 6ab3040:	1105883a 	add	r2,r2,r4
 6ab3044:	10c00003 	ldbu	r3,0(r2)
 6ab3048:	28c7883a 	add	r3,r5,r3
 6ab304c:	30edc83a 	sub	r22,r6,r3
 6ab3050:	b000ee1e 	bne	r22,zero,6ab340c <__udivdi3+0x440>
 6ab3054:	802ad43a 	srli	r21,r16,16
 6ab3058:	00800044 	movi	r2,1
 6ab305c:	a423c83a 	sub	r17,r20,r16
 6ab3060:	85ffffcc 	andi	r23,r16,65535
 6ab3064:	d8800315 	stw	r2,12(sp)
 6ab3068:	8809883a 	mov	r4,r17
 6ab306c:	a80b883a 	mov	r5,r21
 6ab3070:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab3074:	8809883a 	mov	r4,r17
 6ab3078:	a80b883a 	mov	r5,r21
 6ab307c:	102d883a 	mov	r22,r2
 6ab3080:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab3084:	1004943a 	slli	r2,r2,16
 6ab3088:	e006d43a 	srli	r3,fp,16
 6ab308c:	bda3383a 	mul	r17,r23,r22
 6ab3090:	10c4b03a 	or	r2,r2,r3
 6ab3094:	1440042e 	bgeu	r2,r17,6ab30a8 <__udivdi3+0xdc>
 6ab3098:	1405883a 	add	r2,r2,r16
 6ab309c:	b5bfffc4 	addi	r22,r22,-1
 6ab30a0:	14000136 	bltu	r2,r16,6ab30a8 <__udivdi3+0xdc>
 6ab30a4:	14413d36 	bltu	r2,r17,6ab359c <__udivdi3+0x5d0>
 6ab30a8:	1463c83a 	sub	r17,r2,r17
 6ab30ac:	8809883a 	mov	r4,r17
 6ab30b0:	a80b883a 	mov	r5,r21
 6ab30b4:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab30b8:	8809883a 	mov	r4,r17
 6ab30bc:	a80b883a 	mov	r5,r21
 6ab30c0:	1029883a 	mov	r20,r2
 6ab30c4:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab30c8:	1004943a 	slli	r2,r2,16
 6ab30cc:	bd09383a 	mul	r4,r23,r20
 6ab30d0:	e0ffffcc 	andi	r3,fp,65535
 6ab30d4:	10c4b03a 	or	r2,r2,r3
 6ab30d8:	1100042e 	bgeu	r2,r4,6ab30ec <__udivdi3+0x120>
 6ab30dc:	8085883a 	add	r2,r16,r2
 6ab30e0:	a53fffc4 	addi	r20,r20,-1
 6ab30e4:	14000136 	bltu	r2,r16,6ab30ec <__udivdi3+0x120>
 6ab30e8:	11012036 	bltu	r2,r4,6ab356c <__udivdi3+0x5a0>
 6ab30ec:	b004943a 	slli	r2,r22,16
 6ab30f0:	d9000317 	ldw	r4,12(sp)
 6ab30f4:	a084b03a 	or	r2,r20,r2
 6ab30f8:	00001506 	br	6ab3150 <__udivdi3+0x184>
 6ab30fc:	380d883a 	mov	r6,r7
 6ab3100:	29c06236 	bltu	r5,r7,6ab328c <__udivdi3+0x2c0>
 6ab3104:	00bfffd4 	movui	r2,65535
 6ab3108:	11c05a36 	bltu	r2,r7,6ab3274 <__udivdi3+0x2a8>
 6ab310c:	00803fc4 	movi	r2,255
 6ab3110:	11c0fc36 	bltu	r2,r7,6ab3504 <__udivdi3+0x538>
 6ab3114:	000b883a 	mov	r5,zero
 6ab3118:	0005883a 	mov	r2,zero
 6ab311c:	3084d83a 	srl	r2,r6,r2
 6ab3120:	0101ab34 	movhi	r4,1708
 6ab3124:	2122cf04 	addi	r4,r4,-29892
 6ab3128:	01c00804 	movi	r7,32
 6ab312c:	1105883a 	add	r2,r2,r4
 6ab3130:	10c00003 	ldbu	r3,0(r2)
 6ab3134:	28c7883a 	add	r3,r5,r3
 6ab3138:	38efc83a 	sub	r23,r7,r3
 6ab313c:	b800691e 	bne	r23,zero,6ab32e4 <__udivdi3+0x318>
 6ab3140:	35000136 	bltu	r6,r20,6ab3148 <__udivdi3+0x17c>
 6ab3144:	e4005136 	bltu	fp,r16,6ab328c <__udivdi3+0x2c0>
 6ab3148:	00800044 	movi	r2,1
 6ab314c:	0009883a 	mov	r4,zero
 6ab3150:	2007883a 	mov	r3,r4
 6ab3154:	dfc00f17 	ldw	ra,60(sp)
 6ab3158:	df000e17 	ldw	fp,56(sp)
 6ab315c:	ddc00d17 	ldw	r23,52(sp)
 6ab3160:	dd800c17 	ldw	r22,48(sp)
 6ab3164:	dd400b17 	ldw	r21,44(sp)
 6ab3168:	dd000a17 	ldw	r20,40(sp)
 6ab316c:	dcc00917 	ldw	r19,36(sp)
 6ab3170:	dc800817 	ldw	r18,32(sp)
 6ab3174:	dc400717 	ldw	r17,28(sp)
 6ab3178:	dc000617 	ldw	r16,24(sp)
 6ab317c:	dec01004 	addi	sp,sp,64
 6ab3180:	f800283a 	ret
 6ab3184:	00bfffd4 	movui	r2,65535
 6ab3188:	12005036 	bltu	r2,r8,6ab32cc <__udivdi3+0x300>
 6ab318c:	00803fc4 	movi	r2,255
 6ab3190:	1200e836 	bltu	r2,r8,6ab3534 <__udivdi3+0x568>
 6ab3194:	000b883a 	mov	r5,zero
 6ab3198:	0005883a 	mov	r2,zero
 6ab319c:	8084d83a 	srl	r2,r16,r2
 6ab31a0:	0101ab34 	movhi	r4,1708
 6ab31a4:	2122cf04 	addi	r4,r4,-29892
 6ab31a8:	01800804 	movi	r6,32
 6ab31ac:	1105883a 	add	r2,r2,r4
 6ab31b0:	10c00003 	ldbu	r3,0(r2)
 6ab31b4:	28c7883a 	add	r3,r5,r3
 6ab31b8:	30cbc83a 	sub	r5,r6,r3
 6ab31bc:	28000626 	beq	r5,zero,6ab31d8 <__udivdi3+0x20c>
 6ab31c0:	3145c83a 	sub	r2,r6,r5
 6ab31c4:	e084d83a 	srl	r2,fp,r2
 6ab31c8:	a146983a 	sll	r3,r20,r5
 6ab31cc:	e178983a 	sll	fp,fp,r5
 6ab31d0:	8160983a 	sll	r16,r16,r5
 6ab31d4:	18a8b03a 	or	r20,r3,r2
 6ab31d8:	802ad43a 	srli	r21,r16,16
 6ab31dc:	a009883a 	mov	r4,r20
 6ab31e0:	85ffffcc 	andi	r23,r16,65535
 6ab31e4:	a80b883a 	mov	r5,r21
 6ab31e8:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab31ec:	a009883a 	mov	r4,r20
 6ab31f0:	a80b883a 	mov	r5,r21
 6ab31f4:	102d883a 	mov	r22,r2
 6ab31f8:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab31fc:	1004943a 	slli	r2,r2,16
 6ab3200:	e006d43a 	srli	r3,fp,16
 6ab3204:	bda3383a 	mul	r17,r23,r22
 6ab3208:	10c4b03a 	or	r2,r2,r3
 6ab320c:	1440042e 	bgeu	r2,r17,6ab3220 <__udivdi3+0x254>
 6ab3210:	1405883a 	add	r2,r2,r16
 6ab3214:	b5bfffc4 	addi	r22,r22,-1
 6ab3218:	14000136 	bltu	r2,r16,6ab3220 <__udivdi3+0x254>
 6ab321c:	1440d536 	bltu	r2,r17,6ab3574 <__udivdi3+0x5a8>
 6ab3220:	1463c83a 	sub	r17,r2,r17
 6ab3224:	8809883a 	mov	r4,r17
 6ab3228:	a80b883a 	mov	r5,r21
 6ab322c:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab3230:	8809883a 	mov	r4,r17
 6ab3234:	a80b883a 	mov	r5,r21
 6ab3238:	1029883a 	mov	r20,r2
 6ab323c:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab3240:	1004943a 	slli	r2,r2,16
 6ab3244:	bd09383a 	mul	r4,r23,r20
 6ab3248:	e0ffffcc 	andi	r3,fp,65535
 6ab324c:	10c4b03a 	or	r2,r2,r3
 6ab3250:	1100042e 	bgeu	r2,r4,6ab3264 <__udivdi3+0x298>
 6ab3254:	8085883a 	add	r2,r16,r2
 6ab3258:	a53fffc4 	addi	r20,r20,-1
 6ab325c:	14000136 	bltu	r2,r16,6ab3264 <__udivdi3+0x298>
 6ab3260:	1100c736 	bltu	r2,r4,6ab3580 <__udivdi3+0x5b4>
 6ab3264:	b004943a 	slli	r2,r22,16
 6ab3268:	0009883a 	mov	r4,zero
 6ab326c:	a084b03a 	or	r2,r20,r2
 6ab3270:	003fb706 	br	6ab3150 <__udivdi3+0x184>
 6ab3274:	00804034 	movhi	r2,256
 6ab3278:	10bfffc4 	addi	r2,r2,-1
 6ab327c:	11c0a436 	bltu	r2,r7,6ab3510 <__udivdi3+0x544>
 6ab3280:	01400404 	movi	r5,16
 6ab3284:	2805883a 	mov	r2,r5
 6ab3288:	003fa406 	br	6ab311c <__udivdi3+0x150>
 6ab328c:	0005883a 	mov	r2,zero
 6ab3290:	0009883a 	mov	r4,zero
 6ab3294:	003fae06 	br	6ab3150 <__udivdi3+0x184>
 6ab3298:	00804034 	movhi	r2,256
 6ab329c:	10bfffc4 	addi	r2,r2,-1
 6ab32a0:	1400a136 	bltu	r2,r16,6ab3528 <__udivdi3+0x55c>
 6ab32a4:	01400404 	movi	r5,16
 6ab32a8:	2805883a 	mov	r2,r5
 6ab32ac:	003f6006 	br	6ab3030 <__udivdi3+0x64>
 6ab32b0:	01000044 	movi	r4,1
 6ab32b4:	000b883a 	mov	r5,zero
 6ab32b8:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab32bc:	1021883a 	mov	r16,r2
 6ab32c0:	00bfffd4 	movui	r2,65535
 6ab32c4:	143ff436 	bltu	r2,r16,6ab3298 <__udivdi3+0x2cc>
 6ab32c8:	003f5506 	br	6ab3020 <__udivdi3+0x54>
 6ab32cc:	00804034 	movhi	r2,256
 6ab32d0:	10bfffc4 	addi	r2,r2,-1
 6ab32d4:	12009a36 	bltu	r2,r8,6ab3540 <__udivdi3+0x574>
 6ab32d8:	01400404 	movi	r5,16
 6ab32dc:	2805883a 	mov	r2,r5
 6ab32e0:	003fae06 	br	6ab319c <__udivdi3+0x1d0>
 6ab32e4:	3dc5c83a 	sub	r2,r7,r23
 6ab32e8:	35c8983a 	sll	r4,r6,r23
 6ab32ec:	8086d83a 	srl	r3,r16,r2
 6ab32f0:	a0a2d83a 	srl	r17,r20,r2
 6ab32f4:	e084d83a 	srl	r2,fp,r2
 6ab32f8:	20eab03a 	or	r21,r4,r3
 6ab32fc:	a82cd43a 	srli	r22,r21,16
 6ab3300:	a5c6983a 	sll	r3,r20,r23
 6ab3304:	8809883a 	mov	r4,r17
 6ab3308:	b00b883a 	mov	r5,r22
 6ab330c:	1886b03a 	or	r3,r3,r2
 6ab3310:	d8c00215 	stw	r3,8(sp)
 6ab3314:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab3318:	8809883a 	mov	r4,r17
 6ab331c:	b00b883a 	mov	r5,r22
 6ab3320:	1029883a 	mov	r20,r2
 6ab3324:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab3328:	a8ffffcc 	andi	r3,r21,65535
 6ab332c:	d8c00515 	stw	r3,20(sp)
 6ab3330:	d9000217 	ldw	r4,8(sp)
 6ab3334:	d9400517 	ldw	r5,20(sp)
 6ab3338:	1004943a 	slli	r2,r2,16
 6ab333c:	2006d43a 	srli	r3,r4,16
 6ab3340:	85e0983a 	sll	r16,r16,r23
 6ab3344:	2d23383a 	mul	r17,r5,r20
 6ab3348:	10c4b03a 	or	r2,r2,r3
 6ab334c:	dc000015 	stw	r16,0(sp)
 6ab3350:	1440032e 	bgeu	r2,r17,6ab3360 <__udivdi3+0x394>
 6ab3354:	1545883a 	add	r2,r2,r21
 6ab3358:	a53fffc4 	addi	r20,r20,-1
 6ab335c:	15407f2e 	bgeu	r2,r21,6ab355c <__udivdi3+0x590>
 6ab3360:	1463c83a 	sub	r17,r2,r17
 6ab3364:	8809883a 	mov	r4,r17
 6ab3368:	b00b883a 	mov	r5,r22
 6ab336c:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab3370:	8809883a 	mov	r4,r17
 6ab3374:	b00b883a 	mov	r5,r22
 6ab3378:	1021883a 	mov	r16,r2
 6ab337c:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab3380:	d8c00517 	ldw	r3,20(sp)
 6ab3384:	d9000217 	ldw	r4,8(sp)
 6ab3388:	1004943a 	slli	r2,r2,16
 6ab338c:	1c0f383a 	mul	r7,r3,r16
 6ab3390:	20ffffcc 	andi	r3,r4,65535
 6ab3394:	10e2b03a 	or	r17,r2,r3
 6ab3398:	89c0032e 	bgeu	r17,r7,6ab33a8 <__udivdi3+0x3dc>
 6ab339c:	8d63883a 	add	r17,r17,r21
 6ab33a0:	843fffc4 	addi	r16,r16,-1
 6ab33a4:	8d40692e 	bgeu	r17,r21,6ab354c <__udivdi3+0x580>
 6ab33a8:	a008943a 	slli	r4,r20,16
 6ab33ac:	d9400017 	ldw	r5,0(sp)
 6ab33b0:	89e3c83a 	sub	r17,r17,r7
 6ab33b4:	8110b03a 	or	r8,r16,r4
 6ab33b8:	280cd43a 	srli	r6,r5,16
 6ab33bc:	28ffffcc 	andi	r3,r5,65535
 6ab33c0:	40bfffcc 	andi	r2,r8,65535
 6ab33c4:	400ad43a 	srli	r5,r8,16
 6ab33c8:	10d3383a 	mul	r9,r2,r3
 6ab33cc:	1185383a 	mul	r2,r2,r6
 6ab33d0:	28c7383a 	mul	r3,r5,r3
 6ab33d4:	4808d43a 	srli	r4,r9,16
 6ab33d8:	298b383a 	mul	r5,r5,r6
 6ab33dc:	10c5883a 	add	r2,r2,r3
 6ab33e0:	2089883a 	add	r4,r4,r2
 6ab33e4:	20c0022e 	bgeu	r4,r3,6ab33f0 <__udivdi3+0x424>
 6ab33e8:	00800074 	movhi	r2,1
 6ab33ec:	288b883a 	add	r5,r5,r2
 6ab33f0:	2004d43a 	srli	r2,r4,16
 6ab33f4:	288b883a 	add	r5,r5,r2
 6ab33f8:	89403f36 	bltu	r17,r5,6ab34f8 <__udivdi3+0x52c>
 6ab33fc:	89403926 	beq	r17,r5,6ab34e4 <__udivdi3+0x518>
 6ab3400:	4005883a 	mov	r2,r8
 6ab3404:	0009883a 	mov	r4,zero
 6ab3408:	003f5106 	br	6ab3150 <__udivdi3+0x184>
 6ab340c:	85a0983a 	sll	r16,r16,r22
 6ab3410:	3585c83a 	sub	r2,r6,r22
 6ab3414:	a0a2d83a 	srl	r17,r20,r2
 6ab3418:	802ad43a 	srli	r21,r16,16
 6ab341c:	e084d83a 	srl	r2,fp,r2
 6ab3420:	a586983a 	sll	r3,r20,r22
 6ab3424:	8809883a 	mov	r4,r17
 6ab3428:	a80b883a 	mov	r5,r21
 6ab342c:	1886b03a 	or	r3,r3,r2
 6ab3430:	d8c00115 	stw	r3,4(sp)
 6ab3434:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab3438:	8809883a 	mov	r4,r17
 6ab343c:	a80b883a 	mov	r5,r21
 6ab3440:	d8800415 	stw	r2,16(sp)
 6ab3444:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab3448:	d9000117 	ldw	r4,4(sp)
 6ab344c:	d9400417 	ldw	r5,16(sp)
 6ab3450:	1004943a 	slli	r2,r2,16
 6ab3454:	85ffffcc 	andi	r23,r16,65535
 6ab3458:	2006d43a 	srli	r3,r4,16
 6ab345c:	b963383a 	mul	r17,r23,r5
 6ab3460:	10c4b03a 	or	r2,r2,r3
 6ab3464:	1440042e 	bgeu	r2,r17,6ab3478 <__udivdi3+0x4ac>
 6ab3468:	297fffc4 	addi	r5,r5,-1
 6ab346c:	1405883a 	add	r2,r2,r16
 6ab3470:	d9400415 	stw	r5,16(sp)
 6ab3474:	1400442e 	bgeu	r2,r16,6ab3588 <__udivdi3+0x5bc>
 6ab3478:	1463c83a 	sub	r17,r2,r17
 6ab347c:	8809883a 	mov	r4,r17
 6ab3480:	a80b883a 	mov	r5,r21
 6ab3484:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab3488:	8809883a 	mov	r4,r17
 6ab348c:	a80b883a 	mov	r5,r21
 6ab3490:	1029883a 	mov	r20,r2
 6ab3494:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab3498:	d9400117 	ldw	r5,4(sp)
 6ab349c:	1004943a 	slli	r2,r2,16
 6ab34a0:	bd09383a 	mul	r4,r23,r20
 6ab34a4:	28ffffcc 	andi	r3,r5,65535
 6ab34a8:	10c6b03a 	or	r3,r2,r3
 6ab34ac:	1900062e 	bgeu	r3,r4,6ab34c8 <__udivdi3+0x4fc>
 6ab34b0:	1c07883a 	add	r3,r3,r16
 6ab34b4:	a53fffc4 	addi	r20,r20,-1
 6ab34b8:	1c000336 	bltu	r3,r16,6ab34c8 <__udivdi3+0x4fc>
 6ab34bc:	1900022e 	bgeu	r3,r4,6ab34c8 <__udivdi3+0x4fc>
 6ab34c0:	a53fffc4 	addi	r20,r20,-1
 6ab34c4:	1c07883a 	add	r3,r3,r16
 6ab34c8:	d9400417 	ldw	r5,16(sp)
 6ab34cc:	e5b8983a 	sll	fp,fp,r22
 6ab34d0:	1923c83a 	sub	r17,r3,r4
 6ab34d4:	2804943a 	slli	r2,r5,16
 6ab34d8:	a0a8b03a 	or	r20,r20,r2
 6ab34dc:	dd000315 	stw	r20,12(sp)
 6ab34e0:	003ee106 	br	6ab3068 <__udivdi3+0x9c>
 6ab34e4:	2004943a 	slli	r2,r4,16
 6ab34e8:	e5c8983a 	sll	r4,fp,r23
 6ab34ec:	48ffffcc 	andi	r3,r9,65535
 6ab34f0:	10c5883a 	add	r2,r2,r3
 6ab34f4:	20bfc22e 	bgeu	r4,r2,6ab3400 <__udivdi3+0x434>
 6ab34f8:	40bfffc4 	addi	r2,r8,-1
 6ab34fc:	0009883a 	mov	r4,zero
 6ab3500:	003f1306 	br	6ab3150 <__udivdi3+0x184>
 6ab3504:	01400204 	movi	r5,8
 6ab3508:	2805883a 	mov	r2,r5
 6ab350c:	003f0306 	br	6ab311c <__udivdi3+0x150>
 6ab3510:	01400604 	movi	r5,24
 6ab3514:	2805883a 	mov	r2,r5
 6ab3518:	003f0006 	br	6ab311c <__udivdi3+0x150>
 6ab351c:	01400204 	movi	r5,8
 6ab3520:	2805883a 	mov	r2,r5
 6ab3524:	003ec206 	br	6ab3030 <__udivdi3+0x64>
 6ab3528:	01400604 	movi	r5,24
 6ab352c:	2805883a 	mov	r2,r5
 6ab3530:	003ebf06 	br	6ab3030 <__udivdi3+0x64>
 6ab3534:	01400204 	movi	r5,8
 6ab3538:	2805883a 	mov	r2,r5
 6ab353c:	003f1706 	br	6ab319c <__udivdi3+0x1d0>
 6ab3540:	01400604 	movi	r5,24
 6ab3544:	2805883a 	mov	r2,r5
 6ab3548:	003f1406 	br	6ab319c <__udivdi3+0x1d0>
 6ab354c:	89ff962e 	bgeu	r17,r7,6ab33a8 <__udivdi3+0x3dc>
 6ab3550:	8d63883a 	add	r17,r17,r21
 6ab3554:	843fffc4 	addi	r16,r16,-1
 6ab3558:	003f9306 	br	6ab33a8 <__udivdi3+0x3dc>
 6ab355c:	147f802e 	bgeu	r2,r17,6ab3360 <__udivdi3+0x394>
 6ab3560:	a53fffc4 	addi	r20,r20,-1
 6ab3564:	1545883a 	add	r2,r2,r21
 6ab3568:	003f7d06 	br	6ab3360 <__udivdi3+0x394>
 6ab356c:	a53fffc4 	addi	r20,r20,-1
 6ab3570:	003ede06 	br	6ab30ec <__udivdi3+0x120>
 6ab3574:	b5bfffc4 	addi	r22,r22,-1
 6ab3578:	1405883a 	add	r2,r2,r16
 6ab357c:	003f2806 	br	6ab3220 <__udivdi3+0x254>
 6ab3580:	a53fffc4 	addi	r20,r20,-1
 6ab3584:	003f3706 	br	6ab3264 <__udivdi3+0x298>
 6ab3588:	147fbb2e 	bgeu	r2,r17,6ab3478 <__udivdi3+0x4ac>
 6ab358c:	297fffc4 	addi	r5,r5,-1
 6ab3590:	1405883a 	add	r2,r2,r16
 6ab3594:	d9400415 	stw	r5,16(sp)
 6ab3598:	003fb706 	br	6ab3478 <__udivdi3+0x4ac>
 6ab359c:	b5bfffc4 	addi	r22,r22,-1
 6ab35a0:	1405883a 	add	r2,r2,r16
 6ab35a4:	003ec006 	br	6ab30a8 <__udivdi3+0xdc>

06ab35a8 <__umoddi3>:
 6ab35a8:	defff104 	addi	sp,sp,-60
 6ab35ac:	dd800b15 	stw	r22,44(sp)
 6ab35b0:	dd000915 	stw	r20,36(sp)
 6ab35b4:	dc000515 	stw	r16,20(sp)
 6ab35b8:	dfc00e15 	stw	ra,56(sp)
 6ab35bc:	df000d15 	stw	fp,52(sp)
 6ab35c0:	ddc00c15 	stw	r23,48(sp)
 6ab35c4:	dd400a15 	stw	r21,40(sp)
 6ab35c8:	dcc00815 	stw	r19,32(sp)
 6ab35cc:	dc800715 	stw	r18,28(sp)
 6ab35d0:	dc400615 	stw	r17,24(sp)
 6ab35d4:	3021883a 	mov	r16,r6
 6ab35d8:	202d883a 	mov	r22,r4
 6ab35dc:	2829883a 	mov	r20,r5
 6ab35e0:	38002b1e 	bne	r7,zero,6ab3690 <__umoddi3+0xe8>
 6ab35e4:	29805036 	bltu	r5,r6,6ab3728 <__umoddi3+0x180>
 6ab35e8:	30008a26 	beq	r6,zero,6ab3814 <__umoddi3+0x26c>
 6ab35ec:	00bfffd4 	movui	r2,65535
 6ab35f0:	14008236 	bltu	r2,r16,6ab37fc <__umoddi3+0x254>
 6ab35f4:	00803fc4 	movi	r2,255
 6ab35f8:	14013636 	bltu	r2,r16,6ab3ad4 <__umoddi3+0x52c>
 6ab35fc:	000b883a 	mov	r5,zero
 6ab3600:	0005883a 	mov	r2,zero
 6ab3604:	8084d83a 	srl	r2,r16,r2
 6ab3608:	0101ab34 	movhi	r4,1708
 6ab360c:	2122cf04 	addi	r4,r4,-29892
 6ab3610:	01800804 	movi	r6,32
 6ab3614:	1105883a 	add	r2,r2,r4
 6ab3618:	10c00003 	ldbu	r3,0(r2)
 6ab361c:	28c7883a 	add	r3,r5,r3
 6ab3620:	30efc83a 	sub	r23,r6,r3
 6ab3624:	b800941e 	bne	r23,zero,6ab3878 <__umoddi3+0x2d0>
 6ab3628:	802ad43a 	srli	r21,r16,16
 6ab362c:	a423c83a 	sub	r17,r20,r16
 6ab3630:	0039883a 	mov	fp,zero
 6ab3634:	853fffcc 	andi	r20,r16,65535
 6ab3638:	8809883a 	mov	r4,r17
 6ab363c:	a80b883a 	mov	r5,r21
 6ab3640:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab3644:	8809883a 	mov	r4,r17
 6ab3648:	a80b883a 	mov	r5,r21
 6ab364c:	a0a3383a 	mul	r17,r20,r2
 6ab3650:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab3654:	1004943a 	slli	r2,r2,16
 6ab3658:	b006d43a 	srli	r3,r22,16
 6ab365c:	10c4b03a 	or	r2,r2,r3
 6ab3660:	1440032e 	bgeu	r2,r17,6ab3670 <__umoddi3+0xc8>
 6ab3664:	1405883a 	add	r2,r2,r16
 6ab3668:	14000136 	bltu	r2,r16,6ab3670 <__umoddi3+0xc8>
 6ab366c:	14413536 	bltu	r2,r17,6ab3b44 <__umoddi3+0x59c>
 6ab3670:	1463c83a 	sub	r17,r2,r17
 6ab3674:	8809883a 	mov	r4,r17
 6ab3678:	a80b883a 	mov	r5,r21
 6ab367c:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab3680:	8809883a 	mov	r4,r17
 6ab3684:	a0a3383a 	mul	r17,r20,r2
 6ab3688:	a80b883a 	mov	r5,r21
 6ab368c:	00004d06 	br	6ab37c4 <__umoddi3+0x21c>
 6ab3690:	380d883a 	mov	r6,r7
 6ab3694:	29c0102e 	bgeu	r5,r7,6ab36d8 <__umoddi3+0x130>
 6ab3698:	2011883a 	mov	r8,r4
 6ab369c:	2813883a 	mov	r9,r5
 6ab36a0:	4005883a 	mov	r2,r8
 6ab36a4:	4807883a 	mov	r3,r9
 6ab36a8:	dfc00e17 	ldw	ra,56(sp)
 6ab36ac:	df000d17 	ldw	fp,52(sp)
 6ab36b0:	ddc00c17 	ldw	r23,48(sp)
 6ab36b4:	dd800b17 	ldw	r22,44(sp)
 6ab36b8:	dd400a17 	ldw	r21,40(sp)
 6ab36bc:	dd000917 	ldw	r20,36(sp)
 6ab36c0:	dcc00817 	ldw	r19,32(sp)
 6ab36c4:	dc800717 	ldw	r18,28(sp)
 6ab36c8:	dc400617 	ldw	r17,24(sp)
 6ab36cc:	dc000517 	ldw	r16,20(sp)
 6ab36d0:	dec00f04 	addi	sp,sp,60
 6ab36d4:	f800283a 	ret
 6ab36d8:	00bfffd4 	movui	r2,65535
 6ab36dc:	11c05a36 	bltu	r2,r7,6ab3848 <__umoddi3+0x2a0>
 6ab36e0:	00803fc4 	movi	r2,255
 6ab36e4:	11c0fe36 	bltu	r2,r7,6ab3ae0 <__umoddi3+0x538>
 6ab36e8:	000b883a 	mov	r5,zero
 6ab36ec:	0005883a 	mov	r2,zero
 6ab36f0:	3084d83a 	srl	r2,r6,r2
 6ab36f4:	0101ab34 	movhi	r4,1708
 6ab36f8:	2122cf04 	addi	r4,r4,-29892
 6ab36fc:	01c00804 	movi	r7,32
 6ab3700:	1105883a 	add	r2,r2,r4
 6ab3704:	10c00003 	ldbu	r3,0(r2)
 6ab3708:	28c7883a 	add	r3,r5,r3
 6ab370c:	38ebc83a 	sub	r21,r7,r3
 6ab3710:	a800851e 	bne	r21,zero,6ab3928 <__umoddi3+0x380>
 6ab3714:	35005236 	bltu	r6,r20,6ab3860 <__umoddi3+0x2b8>
 6ab3718:	b400512e 	bgeu	r22,r16,6ab3860 <__umoddi3+0x2b8>
 6ab371c:	b011883a 	mov	r8,r22
 6ab3720:	a013883a 	mov	r9,r20
 6ab3724:	003fde06 	br	6ab36a0 <__umoddi3+0xf8>
 6ab3728:	00bfffd4 	movui	r2,65535
 6ab372c:	11804036 	bltu	r2,r6,6ab3830 <__umoddi3+0x288>
 6ab3730:	00803fc4 	movi	r2,255
 6ab3734:	1180ed36 	bltu	r2,r6,6ab3aec <__umoddi3+0x544>
 6ab3738:	000b883a 	mov	r5,zero
 6ab373c:	0005883a 	mov	r2,zero
 6ab3740:	8084d83a 	srl	r2,r16,r2
 6ab3744:	0101ab34 	movhi	r4,1708
 6ab3748:	2122cf04 	addi	r4,r4,-29892
 6ab374c:	01800804 	movi	r6,32
 6ab3750:	1105883a 	add	r2,r2,r4
 6ab3754:	10c00003 	ldbu	r3,0(r2)
 6ab3758:	28c7883a 	add	r3,r5,r3
 6ab375c:	30c7c83a 	sub	r3,r6,r3
 6ab3760:	1800bf1e 	bne	r3,zero,6ab3a60 <__umoddi3+0x4b8>
 6ab3764:	0039883a 	mov	fp,zero
 6ab3768:	802ad43a 	srli	r21,r16,16
 6ab376c:	a009883a 	mov	r4,r20
 6ab3770:	85ffffcc 	andi	r23,r16,65535
 6ab3774:	a80b883a 	mov	r5,r21
 6ab3778:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab377c:	a009883a 	mov	r4,r20
 6ab3780:	a80b883a 	mov	r5,r21
 6ab3784:	b8a3383a 	mul	r17,r23,r2
 6ab3788:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab378c:	1004943a 	slli	r2,r2,16
 6ab3790:	b006d43a 	srli	r3,r22,16
 6ab3794:	10c4b03a 	or	r2,r2,r3
 6ab3798:	1440032e 	bgeu	r2,r17,6ab37a8 <__umoddi3+0x200>
 6ab379c:	1405883a 	add	r2,r2,r16
 6ab37a0:	14000136 	bltu	r2,r16,6ab37a8 <__umoddi3+0x200>
 6ab37a4:	1440e536 	bltu	r2,r17,6ab3b3c <__umoddi3+0x594>
 6ab37a8:	1463c83a 	sub	r17,r2,r17
 6ab37ac:	8809883a 	mov	r4,r17
 6ab37b0:	a80b883a 	mov	r5,r21
 6ab37b4:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab37b8:	8809883a 	mov	r4,r17
 6ab37bc:	b8a3383a 	mul	r17,r23,r2
 6ab37c0:	a80b883a 	mov	r5,r21
 6ab37c4:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab37c8:	1004943a 	slli	r2,r2,16
 6ab37cc:	b0ffffcc 	andi	r3,r22,65535
 6ab37d0:	10c4b03a 	or	r2,r2,r3
 6ab37d4:	1440042e 	bgeu	r2,r17,6ab37e8 <__umoddi3+0x240>
 6ab37d8:	1405883a 	add	r2,r2,r16
 6ab37dc:	14000236 	bltu	r2,r16,6ab37e8 <__umoddi3+0x240>
 6ab37e0:	1440012e 	bgeu	r2,r17,6ab37e8 <__umoddi3+0x240>
 6ab37e4:	1405883a 	add	r2,r2,r16
 6ab37e8:	1445c83a 	sub	r2,r2,r17
 6ab37ec:	1724d83a 	srl	r18,r2,fp
 6ab37f0:	0013883a 	mov	r9,zero
 6ab37f4:	9011883a 	mov	r8,r18
 6ab37f8:	003fa906 	br	6ab36a0 <__umoddi3+0xf8>
 6ab37fc:	00804034 	movhi	r2,256
 6ab3800:	10bfffc4 	addi	r2,r2,-1
 6ab3804:	1400b036 	bltu	r2,r16,6ab3ac8 <__umoddi3+0x520>
 6ab3808:	01400404 	movi	r5,16
 6ab380c:	2805883a 	mov	r2,r5
 6ab3810:	003f7c06 	br	6ab3604 <__umoddi3+0x5c>
 6ab3814:	01000044 	movi	r4,1
 6ab3818:	000b883a 	mov	r5,zero
 6ab381c:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab3820:	1021883a 	mov	r16,r2
 6ab3824:	00bfffd4 	movui	r2,65535
 6ab3828:	143ff436 	bltu	r2,r16,6ab37fc <__umoddi3+0x254>
 6ab382c:	003f7106 	br	6ab35f4 <__umoddi3+0x4c>
 6ab3830:	00804034 	movhi	r2,256
 6ab3834:	10bfffc4 	addi	r2,r2,-1
 6ab3838:	1180af36 	bltu	r2,r6,6ab3af8 <__umoddi3+0x550>
 6ab383c:	01400404 	movi	r5,16
 6ab3840:	2805883a 	mov	r2,r5
 6ab3844:	003fbe06 	br	6ab3740 <__umoddi3+0x198>
 6ab3848:	00804034 	movhi	r2,256
 6ab384c:	10bfffc4 	addi	r2,r2,-1
 6ab3850:	11c0ac36 	bltu	r2,r7,6ab3b04 <__umoddi3+0x55c>
 6ab3854:	01400404 	movi	r5,16
 6ab3858:	2805883a 	mov	r2,r5
 6ab385c:	003fa406 	br	6ab36f0 <__umoddi3+0x148>
 6ab3860:	b409c83a 	sub	r4,r22,r16
 6ab3864:	b105803a 	cmpltu	r2,r22,r4
 6ab3868:	a187c83a 	sub	r3,r20,r6
 6ab386c:	18a9c83a 	sub	r20,r3,r2
 6ab3870:	202d883a 	mov	r22,r4
 6ab3874:	003fa906 	br	6ab371c <__umoddi3+0x174>
 6ab3878:	85e0983a 	sll	r16,r16,r23
 6ab387c:	35c5c83a 	sub	r2,r6,r23
 6ab3880:	a0a2d83a 	srl	r17,r20,r2
 6ab3884:	802ad43a 	srli	r21,r16,16
 6ab3888:	b084d83a 	srl	r2,r22,r2
 6ab388c:	a5c6983a 	sll	r3,r20,r23
 6ab3890:	8809883a 	mov	r4,r17
 6ab3894:	a80b883a 	mov	r5,r21
 6ab3898:	1886b03a 	or	r3,r3,r2
 6ab389c:	d8c00115 	stw	r3,4(sp)
 6ab38a0:	853fffcc 	andi	r20,r16,65535
 6ab38a4:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab38a8:	8809883a 	mov	r4,r17
 6ab38ac:	a80b883a 	mov	r5,r21
 6ab38b0:	a0a3383a 	mul	r17,r20,r2
 6ab38b4:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab38b8:	d9000117 	ldw	r4,4(sp)
 6ab38bc:	1004943a 	slli	r2,r2,16
 6ab38c0:	b839883a 	mov	fp,r23
 6ab38c4:	2006d43a 	srli	r3,r4,16
 6ab38c8:	10c4b03a 	or	r2,r2,r3
 6ab38cc:	1440022e 	bgeu	r2,r17,6ab38d8 <__umoddi3+0x330>
 6ab38d0:	1405883a 	add	r2,r2,r16
 6ab38d4:	1400962e 	bgeu	r2,r16,6ab3b30 <__umoddi3+0x588>
 6ab38d8:	1463c83a 	sub	r17,r2,r17
 6ab38dc:	8809883a 	mov	r4,r17
 6ab38e0:	a80b883a 	mov	r5,r21
 6ab38e4:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab38e8:	8809883a 	mov	r4,r17
 6ab38ec:	a80b883a 	mov	r5,r21
 6ab38f0:	a0a3383a 	mul	r17,r20,r2
 6ab38f4:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab38f8:	d9400117 	ldw	r5,4(sp)
 6ab38fc:	1004943a 	slli	r2,r2,16
 6ab3900:	28ffffcc 	andi	r3,r5,65535
 6ab3904:	10c4b03a 	or	r2,r2,r3
 6ab3908:	1440042e 	bgeu	r2,r17,6ab391c <__umoddi3+0x374>
 6ab390c:	1405883a 	add	r2,r2,r16
 6ab3910:	14000236 	bltu	r2,r16,6ab391c <__umoddi3+0x374>
 6ab3914:	1440012e 	bgeu	r2,r17,6ab391c <__umoddi3+0x374>
 6ab3918:	1405883a 	add	r2,r2,r16
 6ab391c:	b5ec983a 	sll	r22,r22,r23
 6ab3920:	1463c83a 	sub	r17,r2,r17
 6ab3924:	003f4406 	br	6ab3638 <__umoddi3+0x90>
 6ab3928:	3d4fc83a 	sub	r7,r7,r21
 6ab392c:	3546983a 	sll	r3,r6,r21
 6ab3930:	81c4d83a 	srl	r2,r16,r7
 6ab3934:	a1e2d83a 	srl	r17,r20,r7
 6ab3938:	a54c983a 	sll	r6,r20,r21
 6ab393c:	18aeb03a 	or	r23,r3,r2
 6ab3940:	b828d43a 	srli	r20,r23,16
 6ab3944:	b1c4d83a 	srl	r2,r22,r7
 6ab3948:	8809883a 	mov	r4,r17
 6ab394c:	a00b883a 	mov	r5,r20
 6ab3950:	308cb03a 	or	r6,r6,r2
 6ab3954:	d9c00315 	stw	r7,12(sp)
 6ab3958:	d9800215 	stw	r6,8(sp)
 6ab395c:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab3960:	8809883a 	mov	r4,r17
 6ab3964:	a00b883a 	mov	r5,r20
 6ab3968:	1039883a 	mov	fp,r2
 6ab396c:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab3970:	b8ffffcc 	andi	r3,r23,65535
 6ab3974:	d8c00415 	stw	r3,16(sp)
 6ab3978:	d9000217 	ldw	r4,8(sp)
 6ab397c:	d9400417 	ldw	r5,16(sp)
 6ab3980:	1004943a 	slli	r2,r2,16
 6ab3984:	2006d43a 	srli	r3,r4,16
 6ab3988:	8560983a 	sll	r16,r16,r21
 6ab398c:	2f23383a 	mul	r17,r5,fp
 6ab3990:	10c4b03a 	or	r2,r2,r3
 6ab3994:	dc000015 	stw	r16,0(sp)
 6ab3998:	b56c983a 	sll	r22,r22,r21
 6ab399c:	1440032e 	bgeu	r2,r17,6ab39ac <__umoddi3+0x404>
 6ab39a0:	15c5883a 	add	r2,r2,r23
 6ab39a4:	e73fffc4 	addi	fp,fp,-1
 6ab39a8:	15c05d2e 	bgeu	r2,r23,6ab3b20 <__umoddi3+0x578>
 6ab39ac:	1463c83a 	sub	r17,r2,r17
 6ab39b0:	8809883a 	mov	r4,r17
 6ab39b4:	a00b883a 	mov	r5,r20
 6ab39b8:	6ab4dc00 	call	6ab4dc0 <__udivsi3>
 6ab39bc:	8809883a 	mov	r4,r17
 6ab39c0:	a00b883a 	mov	r5,r20
 6ab39c4:	1021883a 	mov	r16,r2
 6ab39c8:	6ab4dc80 	call	6ab4dc8 <__umodsi3>
 6ab39cc:	d8c00417 	ldw	r3,16(sp)
 6ab39d0:	d9000217 	ldw	r4,8(sp)
 6ab39d4:	1004943a 	slli	r2,r2,16
 6ab39d8:	1c23383a 	mul	r17,r3,r16
 6ab39dc:	20ffffcc 	andi	r3,r4,65535
 6ab39e0:	10ceb03a 	or	r7,r2,r3
 6ab39e4:	3c40032e 	bgeu	r7,r17,6ab39f4 <__umoddi3+0x44c>
 6ab39e8:	3dcf883a 	add	r7,r7,r23
 6ab39ec:	843fffc4 	addi	r16,r16,-1
 6ab39f0:	3dc0472e 	bgeu	r7,r23,6ab3b10 <__umoddi3+0x568>
 6ab39f4:	e004943a 	slli	r2,fp,16
 6ab39f8:	d9400017 	ldw	r5,0(sp)
 6ab39fc:	3c4fc83a 	sub	r7,r7,r17
 6ab3a00:	8084b03a 	or	r2,r16,r2
 6ab3a04:	28ffffcc 	andi	r3,r5,65535
 6ab3a08:	280cd43a 	srli	r6,r5,16
 6ab3a0c:	100ad43a 	srli	r5,r2,16
 6ab3a10:	10bfffcc 	andi	r2,r2,65535
 6ab3a14:	10d1383a 	mul	r8,r2,r3
 6ab3a18:	28c7383a 	mul	r3,r5,r3
 6ab3a1c:	1185383a 	mul	r2,r2,r6
 6ab3a20:	4008d43a 	srli	r4,r8,16
 6ab3a24:	298b383a 	mul	r5,r5,r6
 6ab3a28:	10c5883a 	add	r2,r2,r3
 6ab3a2c:	2089883a 	add	r4,r4,r2
 6ab3a30:	20c0022e 	bgeu	r4,r3,6ab3a3c <__umoddi3+0x494>
 6ab3a34:	00800074 	movhi	r2,1
 6ab3a38:	288b883a 	add	r5,r5,r2
 6ab3a3c:	2004d43a 	srli	r2,r4,16
 6ab3a40:	2008943a 	slli	r4,r4,16
 6ab3a44:	40ffffcc 	andi	r3,r8,65535
 6ab3a48:	288b883a 	add	r5,r5,r2
 6ab3a4c:	20c9883a 	add	r4,r4,r3
 6ab3a50:	39400b36 	bltu	r7,r5,6ab3a80 <__umoddi3+0x4d8>
 6ab3a54:	39403d26 	beq	r7,r5,6ab3b4c <__umoddi3+0x5a4>
 6ab3a58:	394bc83a 	sub	r5,r7,r5
 6ab3a5c:	00000f06 	br	6ab3a9c <__umoddi3+0x4f4>
 6ab3a60:	30c5c83a 	sub	r2,r6,r3
 6ab3a64:	1839883a 	mov	fp,r3
 6ab3a68:	b084d83a 	srl	r2,r22,r2
 6ab3a6c:	a0c6983a 	sll	r3,r20,r3
 6ab3a70:	8720983a 	sll	r16,r16,fp
 6ab3a74:	b72c983a 	sll	r22,r22,fp
 6ab3a78:	18a8b03a 	or	r20,r3,r2
 6ab3a7c:	003f3a06 	br	6ab3768 <__umoddi3+0x1c0>
 6ab3a80:	d8c00017 	ldw	r3,0(sp)
 6ab3a84:	20c5c83a 	sub	r2,r4,r3
 6ab3a88:	2089803a 	cmpltu	r4,r4,r2
 6ab3a8c:	2dc7c83a 	sub	r3,r5,r23
 6ab3a90:	1907c83a 	sub	r3,r3,r4
 6ab3a94:	38cbc83a 	sub	r5,r7,r3
 6ab3a98:	1009883a 	mov	r4,r2
 6ab3a9c:	b105c83a 	sub	r2,r22,r4
 6ab3aa0:	b087803a 	cmpltu	r3,r22,r2
 6ab3aa4:	28c7c83a 	sub	r3,r5,r3
 6ab3aa8:	d9400317 	ldw	r5,12(sp)
 6ab3aac:	1544d83a 	srl	r2,r2,r21
 6ab3ab0:	1948983a 	sll	r4,r3,r5
 6ab3ab4:	1d46d83a 	srl	r3,r3,r21
 6ab3ab8:	20a4b03a 	or	r18,r4,r2
 6ab3abc:	9011883a 	mov	r8,r18
 6ab3ac0:	1813883a 	mov	r9,r3
 6ab3ac4:	003ef606 	br	6ab36a0 <__umoddi3+0xf8>
 6ab3ac8:	01400604 	movi	r5,24
 6ab3acc:	2805883a 	mov	r2,r5
 6ab3ad0:	003ecc06 	br	6ab3604 <__umoddi3+0x5c>
 6ab3ad4:	01400204 	movi	r5,8
 6ab3ad8:	2805883a 	mov	r2,r5
 6ab3adc:	003ec906 	br	6ab3604 <__umoddi3+0x5c>
 6ab3ae0:	01400204 	movi	r5,8
 6ab3ae4:	2805883a 	mov	r2,r5
 6ab3ae8:	003f0106 	br	6ab36f0 <__umoddi3+0x148>
 6ab3aec:	01400204 	movi	r5,8
 6ab3af0:	2805883a 	mov	r2,r5
 6ab3af4:	003f1206 	br	6ab3740 <__umoddi3+0x198>
 6ab3af8:	01400604 	movi	r5,24
 6ab3afc:	2805883a 	mov	r2,r5
 6ab3b00:	003f0f06 	br	6ab3740 <__umoddi3+0x198>
 6ab3b04:	01400604 	movi	r5,24
 6ab3b08:	2805883a 	mov	r2,r5
 6ab3b0c:	003ef806 	br	6ab36f0 <__umoddi3+0x148>
 6ab3b10:	3c7fb82e 	bgeu	r7,r17,6ab39f4 <__umoddi3+0x44c>
 6ab3b14:	843fffc4 	addi	r16,r16,-1
 6ab3b18:	3dcf883a 	add	r7,r7,r23
 6ab3b1c:	003fb506 	br	6ab39f4 <__umoddi3+0x44c>
 6ab3b20:	147fa22e 	bgeu	r2,r17,6ab39ac <__umoddi3+0x404>
 6ab3b24:	e73fffc4 	addi	fp,fp,-1
 6ab3b28:	15c5883a 	add	r2,r2,r23
 6ab3b2c:	003f9f06 	br	6ab39ac <__umoddi3+0x404>
 6ab3b30:	147f692e 	bgeu	r2,r17,6ab38d8 <__umoddi3+0x330>
 6ab3b34:	1405883a 	add	r2,r2,r16
 6ab3b38:	003f6706 	br	6ab38d8 <__umoddi3+0x330>
 6ab3b3c:	1405883a 	add	r2,r2,r16
 6ab3b40:	003f1906 	br	6ab37a8 <__umoddi3+0x200>
 6ab3b44:	1405883a 	add	r2,r2,r16
 6ab3b48:	003ec906 	br	6ab3670 <__umoddi3+0xc8>
 6ab3b4c:	b13fcc36 	bltu	r22,r4,6ab3a80 <__umoddi3+0x4d8>
 6ab3b50:	000b883a 	mov	r5,zero
 6ab3b54:	003fd106 	br	6ab3a9c <__umoddi3+0x4f4>

06ab3b58 <_fpadd_parts>:
 6ab3b58:	defff804 	addi	sp,sp,-32
 6ab3b5c:	dcc00315 	stw	r19,12(sp)
 6ab3b60:	2027883a 	mov	r19,r4
 6ab3b64:	21000017 	ldw	r4,0(r4)
 6ab3b68:	00c00044 	movi	r3,1
 6ab3b6c:	dd400515 	stw	r21,20(sp)
 6ab3b70:	dd000415 	stw	r20,16(sp)
 6ab3b74:	ddc00715 	stw	r23,28(sp)
 6ab3b78:	dd800615 	stw	r22,24(sp)
 6ab3b7c:	dc800215 	stw	r18,8(sp)
 6ab3b80:	dc400115 	stw	r17,4(sp)
 6ab3b84:	dc000015 	stw	r16,0(sp)
 6ab3b88:	282b883a 	mov	r21,r5
 6ab3b8c:	3029883a 	mov	r20,r6
 6ab3b90:	1900632e 	bgeu	r3,r4,6ab3d20 <_fpadd_parts+0x1c8>
 6ab3b94:	28800017 	ldw	r2,0(r5)
 6ab3b98:	1880812e 	bgeu	r3,r2,6ab3da0 <_fpadd_parts+0x248>
 6ab3b9c:	00c00104 	movi	r3,4
 6ab3ba0:	20c0dc26 	beq	r4,r3,6ab3f14 <_fpadd_parts+0x3bc>
 6ab3ba4:	10c07e26 	beq	r2,r3,6ab3da0 <_fpadd_parts+0x248>
 6ab3ba8:	00c00084 	movi	r3,2
 6ab3bac:	10c06726 	beq	r2,r3,6ab3d4c <_fpadd_parts+0x1f4>
 6ab3bb0:	20c07b26 	beq	r4,r3,6ab3da0 <_fpadd_parts+0x248>
 6ab3bb4:	9dc00217 	ldw	r23,8(r19)
 6ab3bb8:	28c00217 	ldw	r3,8(r5)
 6ab3bbc:	9c400317 	ldw	r17,12(r19)
 6ab3bc0:	2bc00317 	ldw	r15,12(r5)
 6ab3bc4:	b8cdc83a 	sub	r6,r23,r3
 6ab3bc8:	9c800417 	ldw	r18,16(r19)
 6ab3bcc:	2c000417 	ldw	r16,16(r5)
 6ab3bd0:	3009883a 	mov	r4,r6
 6ab3bd4:	30009716 	blt	r6,zero,6ab3e34 <_fpadd_parts+0x2dc>
 6ab3bd8:	00800fc4 	movi	r2,63
 6ab3bdc:	11806b16 	blt	r2,r6,6ab3d8c <_fpadd_parts+0x234>
 6ab3be0:	0100a40e 	bge	zero,r4,6ab3e74 <_fpadd_parts+0x31c>
 6ab3be4:	35bff804 	addi	r22,r6,-32
 6ab3be8:	b000bc16 	blt	r22,zero,6ab3edc <_fpadd_parts+0x384>
 6ab3bec:	8596d83a 	srl	r11,r16,r22
 6ab3bf0:	0019883a 	mov	r12,zero
 6ab3bf4:	0013883a 	mov	r9,zero
 6ab3bf8:	01000044 	movi	r4,1
 6ab3bfc:	0015883a 	mov	r10,zero
 6ab3c00:	b000be16 	blt	r22,zero,6ab3efc <_fpadd_parts+0x3a4>
 6ab3c04:	2590983a 	sll	r8,r4,r22
 6ab3c08:	000f883a 	mov	r7,zero
 6ab3c0c:	00bfffc4 	movi	r2,-1
 6ab3c10:	3889883a 	add	r4,r7,r2
 6ab3c14:	408b883a 	add	r5,r8,r2
 6ab3c18:	21cd803a 	cmpltu	r6,r4,r7
 6ab3c1c:	314b883a 	add	r5,r6,r5
 6ab3c20:	7904703a 	and	r2,r15,r4
 6ab3c24:	8146703a 	and	r3,r16,r5
 6ab3c28:	10c4b03a 	or	r2,r2,r3
 6ab3c2c:	10000226 	beq	r2,zero,6ab3c38 <_fpadd_parts+0xe0>
 6ab3c30:	02400044 	movi	r9,1
 6ab3c34:	0015883a 	mov	r10,zero
 6ab3c38:	5a5eb03a 	or	r15,r11,r9
 6ab3c3c:	62a0b03a 	or	r16,r12,r10
 6ab3c40:	99400117 	ldw	r5,4(r19)
 6ab3c44:	a8800117 	ldw	r2,4(r21)
 6ab3c48:	28806e26 	beq	r5,r2,6ab3e04 <_fpadd_parts+0x2ac>
 6ab3c4c:	28006626 	beq	r5,zero,6ab3de8 <_fpadd_parts+0x290>
 6ab3c50:	7c45c83a 	sub	r2,r15,r17
 6ab3c54:	7889803a 	cmpltu	r4,r15,r2
 6ab3c58:	8487c83a 	sub	r3,r16,r18
 6ab3c5c:	1909c83a 	sub	r4,r3,r4
 6ab3c60:	100d883a 	mov	r6,r2
 6ab3c64:	200f883a 	mov	r7,r4
 6ab3c68:	38007716 	blt	r7,zero,6ab3e48 <_fpadd_parts+0x2f0>
 6ab3c6c:	a5c00215 	stw	r23,8(r20)
 6ab3c70:	a1c00415 	stw	r7,16(r20)
 6ab3c74:	a0000115 	stw	zero,4(r20)
 6ab3c78:	a1800315 	stw	r6,12(r20)
 6ab3c7c:	a2000317 	ldw	r8,12(r20)
 6ab3c80:	a2400417 	ldw	r9,16(r20)
 6ab3c84:	00bfffc4 	movi	r2,-1
 6ab3c88:	408b883a 	add	r5,r8,r2
 6ab3c8c:	2a09803a 	cmpltu	r4,r5,r8
 6ab3c90:	488d883a 	add	r6,r9,r2
 6ab3c94:	01c40034 	movhi	r7,4096
 6ab3c98:	39ffffc4 	addi	r7,r7,-1
 6ab3c9c:	218d883a 	add	r6,r4,r6
 6ab3ca0:	39801736 	bltu	r7,r6,6ab3d00 <_fpadd_parts+0x1a8>
 6ab3ca4:	31c06526 	beq	r6,r7,6ab3e3c <_fpadd_parts+0x2e4>
 6ab3ca8:	a3000217 	ldw	r12,8(r20)
 6ab3cac:	4209883a 	add	r4,r8,r8
 6ab3cb0:	00bfffc4 	movi	r2,-1
 6ab3cb4:	220f803a 	cmpltu	r7,r4,r8
 6ab3cb8:	4a4b883a 	add	r5,r9,r9
 6ab3cbc:	394f883a 	add	r7,r7,r5
 6ab3cc0:	2095883a 	add	r10,r4,r2
 6ab3cc4:	3897883a 	add	r11,r7,r2
 6ab3cc8:	510d803a 	cmpltu	r6,r10,r4
 6ab3ccc:	6099883a 	add	r12,r12,r2
 6ab3cd0:	32d7883a 	add	r11,r6,r11
 6ab3cd4:	00840034 	movhi	r2,4096
 6ab3cd8:	10bfffc4 	addi	r2,r2,-1
 6ab3cdc:	2011883a 	mov	r8,r4
 6ab3ce0:	3813883a 	mov	r9,r7
 6ab3ce4:	a1000315 	stw	r4,12(r20)
 6ab3ce8:	a1c00415 	stw	r7,16(r20)
 6ab3cec:	a3000215 	stw	r12,8(r20)
 6ab3cf0:	12c00336 	bltu	r2,r11,6ab3d00 <_fpadd_parts+0x1a8>
 6ab3cf4:	58bfed1e 	bne	r11,r2,6ab3cac <_fpadd_parts+0x154>
 6ab3cf8:	00bfff84 	movi	r2,-2
 6ab3cfc:	12bfeb2e 	bgeu	r2,r10,6ab3cac <_fpadd_parts+0x154>
 6ab3d00:	a2800417 	ldw	r10,16(r20)
 6ab3d04:	008000c4 	movi	r2,3
 6ab3d08:	00c80034 	movhi	r3,8192
 6ab3d0c:	18ffffc4 	addi	r3,r3,-1
 6ab3d10:	a2400317 	ldw	r9,12(r20)
 6ab3d14:	a0800015 	stw	r2,0(r20)
 6ab3d18:	1a802336 	bltu	r3,r10,6ab3da8 <_fpadd_parts+0x250>
 6ab3d1c:	a027883a 	mov	r19,r20
 6ab3d20:	9805883a 	mov	r2,r19
 6ab3d24:	ddc00717 	ldw	r23,28(sp)
 6ab3d28:	dd800617 	ldw	r22,24(sp)
 6ab3d2c:	dd400517 	ldw	r21,20(sp)
 6ab3d30:	dd000417 	ldw	r20,16(sp)
 6ab3d34:	dcc00317 	ldw	r19,12(sp)
 6ab3d38:	dc800217 	ldw	r18,8(sp)
 6ab3d3c:	dc400117 	ldw	r17,4(sp)
 6ab3d40:	dc000017 	ldw	r16,0(sp)
 6ab3d44:	dec00804 	addi	sp,sp,32
 6ab3d48:	f800283a 	ret
 6ab3d4c:	20fff41e 	bne	r4,r3,6ab3d20 <_fpadd_parts+0x1c8>
 6ab3d50:	31000015 	stw	r4,0(r6)
 6ab3d54:	98800117 	ldw	r2,4(r19)
 6ab3d58:	30800115 	stw	r2,4(r6)
 6ab3d5c:	98c00217 	ldw	r3,8(r19)
 6ab3d60:	30c00215 	stw	r3,8(r6)
 6ab3d64:	98800317 	ldw	r2,12(r19)
 6ab3d68:	30800315 	stw	r2,12(r6)
 6ab3d6c:	98c00417 	ldw	r3,16(r19)
 6ab3d70:	30c00415 	stw	r3,16(r6)
 6ab3d74:	98800117 	ldw	r2,4(r19)
 6ab3d78:	28c00117 	ldw	r3,4(r5)
 6ab3d7c:	3027883a 	mov	r19,r6
 6ab3d80:	10c4703a 	and	r2,r2,r3
 6ab3d84:	30800115 	stw	r2,4(r6)
 6ab3d88:	003fe506 	br	6ab3d20 <_fpadd_parts+0x1c8>
 6ab3d8c:	1dc02616 	blt	r3,r23,6ab3e28 <_fpadd_parts+0x2d0>
 6ab3d90:	0023883a 	mov	r17,zero
 6ab3d94:	182f883a 	mov	r23,r3
 6ab3d98:	0025883a 	mov	r18,zero
 6ab3d9c:	003fa806 	br	6ab3c40 <_fpadd_parts+0xe8>
 6ab3da0:	a827883a 	mov	r19,r21
 6ab3da4:	003fde06 	br	6ab3d20 <_fpadd_parts+0x1c8>
 6ab3da8:	01800044 	movi	r6,1
 6ab3dac:	500497fa 	slli	r2,r10,31
 6ab3db0:	4808d07a 	srli	r4,r9,1
 6ab3db4:	518ad83a 	srl	r5,r10,r6
 6ab3db8:	a2000217 	ldw	r8,8(r20)
 6ab3dbc:	1108b03a 	or	r4,r2,r4
 6ab3dc0:	0007883a 	mov	r3,zero
 6ab3dc4:	4984703a 	and	r2,r9,r6
 6ab3dc8:	208cb03a 	or	r6,r4,r2
 6ab3dcc:	28ceb03a 	or	r7,r5,r3
 6ab3dd0:	42000044 	addi	r8,r8,1
 6ab3dd4:	a027883a 	mov	r19,r20
 6ab3dd8:	a1c00415 	stw	r7,16(r20)
 6ab3ddc:	a2000215 	stw	r8,8(r20)
 6ab3de0:	a1800315 	stw	r6,12(r20)
 6ab3de4:	003fce06 	br	6ab3d20 <_fpadd_parts+0x1c8>
 6ab3de8:	8bc5c83a 	sub	r2,r17,r15
 6ab3dec:	8889803a 	cmpltu	r4,r17,r2
 6ab3df0:	9407c83a 	sub	r3,r18,r16
 6ab3df4:	1909c83a 	sub	r4,r3,r4
 6ab3df8:	100d883a 	mov	r6,r2
 6ab3dfc:	200f883a 	mov	r7,r4
 6ab3e00:	003f9906 	br	6ab3c68 <_fpadd_parts+0x110>
 6ab3e04:	7c45883a 	add	r2,r15,r17
 6ab3e08:	13c9803a 	cmpltu	r4,r2,r15
 6ab3e0c:	8487883a 	add	r3,r16,r18
 6ab3e10:	20c9883a 	add	r4,r4,r3
 6ab3e14:	a1400115 	stw	r5,4(r20)
 6ab3e18:	a5c00215 	stw	r23,8(r20)
 6ab3e1c:	a0800315 	stw	r2,12(r20)
 6ab3e20:	a1000415 	stw	r4,16(r20)
 6ab3e24:	003fb606 	br	6ab3d00 <_fpadd_parts+0x1a8>
 6ab3e28:	001f883a 	mov	r15,zero
 6ab3e2c:	0021883a 	mov	r16,zero
 6ab3e30:	003f8306 	br	6ab3c40 <_fpadd_parts+0xe8>
 6ab3e34:	018dc83a 	sub	r6,zero,r6
 6ab3e38:	003f6706 	br	6ab3bd8 <_fpadd_parts+0x80>
 6ab3e3c:	00bfff84 	movi	r2,-2
 6ab3e40:	117faf36 	bltu	r2,r5,6ab3d00 <_fpadd_parts+0x1a8>
 6ab3e44:	003f9806 	br	6ab3ca8 <_fpadd_parts+0x150>
 6ab3e48:	0005883a 	mov	r2,zero
 6ab3e4c:	1189c83a 	sub	r4,r2,r6
 6ab3e50:	1105803a 	cmpltu	r2,r2,r4
 6ab3e54:	01cbc83a 	sub	r5,zero,r7
 6ab3e58:	2885c83a 	sub	r2,r5,r2
 6ab3e5c:	01800044 	movi	r6,1
 6ab3e60:	a1800115 	stw	r6,4(r20)
 6ab3e64:	a5c00215 	stw	r23,8(r20)
 6ab3e68:	a1000315 	stw	r4,12(r20)
 6ab3e6c:	a0800415 	stw	r2,16(r20)
 6ab3e70:	003f8206 	br	6ab3c7c <_fpadd_parts+0x124>
 6ab3e74:	203f7226 	beq	r4,zero,6ab3c40 <_fpadd_parts+0xe8>
 6ab3e78:	35bff804 	addi	r22,r6,-32
 6ab3e7c:	b9af883a 	add	r23,r23,r6
 6ab3e80:	b0003116 	blt	r22,zero,6ab3f48 <_fpadd_parts+0x3f0>
 6ab3e84:	959ad83a 	srl	r13,r18,r22
 6ab3e88:	001d883a 	mov	r14,zero
 6ab3e8c:	000f883a 	mov	r7,zero
 6ab3e90:	01000044 	movi	r4,1
 6ab3e94:	0011883a 	mov	r8,zero
 6ab3e98:	b0002516 	blt	r22,zero,6ab3f30 <_fpadd_parts+0x3d8>
 6ab3e9c:	2594983a 	sll	r10,r4,r22
 6ab3ea0:	0013883a 	mov	r9,zero
 6ab3ea4:	00bfffc4 	movi	r2,-1
 6ab3ea8:	4889883a 	add	r4,r9,r2
 6ab3eac:	508b883a 	add	r5,r10,r2
 6ab3eb0:	224d803a 	cmpltu	r6,r4,r9
 6ab3eb4:	314b883a 	add	r5,r6,r5
 6ab3eb8:	8904703a 	and	r2,r17,r4
 6ab3ebc:	9146703a 	and	r3,r18,r5
 6ab3ec0:	10c4b03a 	or	r2,r2,r3
 6ab3ec4:	10000226 	beq	r2,zero,6ab3ed0 <_fpadd_parts+0x378>
 6ab3ec8:	01c00044 	movi	r7,1
 6ab3ecc:	0011883a 	mov	r8,zero
 6ab3ed0:	69e2b03a 	or	r17,r13,r7
 6ab3ed4:	7224b03a 	or	r18,r14,r8
 6ab3ed8:	003f5906 	br	6ab3c40 <_fpadd_parts+0xe8>
 6ab3edc:	8407883a 	add	r3,r16,r16
 6ab3ee0:	008007c4 	movi	r2,31
 6ab3ee4:	1185c83a 	sub	r2,r2,r6
 6ab3ee8:	1886983a 	sll	r3,r3,r2
 6ab3eec:	7996d83a 	srl	r11,r15,r6
 6ab3ef0:	8198d83a 	srl	r12,r16,r6
 6ab3ef4:	1ad6b03a 	or	r11,r3,r11
 6ab3ef8:	003f3e06 	br	6ab3bf4 <_fpadd_parts+0x9c>
 6ab3efc:	2006d07a 	srli	r3,r4,1
 6ab3f00:	008007c4 	movi	r2,31
 6ab3f04:	1185c83a 	sub	r2,r2,r6
 6ab3f08:	1890d83a 	srl	r8,r3,r2
 6ab3f0c:	218e983a 	sll	r7,r4,r6
 6ab3f10:	003f3e06 	br	6ab3c0c <_fpadd_parts+0xb4>
 6ab3f14:	113f821e 	bne	r2,r4,6ab3d20 <_fpadd_parts+0x1c8>
 6ab3f18:	28c00117 	ldw	r3,4(r5)
 6ab3f1c:	98800117 	ldw	r2,4(r19)
 6ab3f20:	10ff7f26 	beq	r2,r3,6ab3d20 <_fpadd_parts+0x1c8>
 6ab3f24:	04c1ab34 	movhi	r19,1708
 6ab3f28:	9ce2ca04 	addi	r19,r19,-29912
 6ab3f2c:	003f7c06 	br	6ab3d20 <_fpadd_parts+0x1c8>
 6ab3f30:	2006d07a 	srli	r3,r4,1
 6ab3f34:	008007c4 	movi	r2,31
 6ab3f38:	1185c83a 	sub	r2,r2,r6
 6ab3f3c:	1894d83a 	srl	r10,r3,r2
 6ab3f40:	2192983a 	sll	r9,r4,r6
 6ab3f44:	003fd706 	br	6ab3ea4 <_fpadd_parts+0x34c>
 6ab3f48:	9487883a 	add	r3,r18,r18
 6ab3f4c:	008007c4 	movi	r2,31
 6ab3f50:	1185c83a 	sub	r2,r2,r6
 6ab3f54:	1886983a 	sll	r3,r3,r2
 6ab3f58:	899ad83a 	srl	r13,r17,r6
 6ab3f5c:	919cd83a 	srl	r14,r18,r6
 6ab3f60:	1b5ab03a 	or	r13,r3,r13
 6ab3f64:	003fc906 	br	6ab3e8c <_fpadd_parts+0x334>

06ab3f68 <__subdf3>:
 6ab3f68:	deffea04 	addi	sp,sp,-88
 6ab3f6c:	dcc01415 	stw	r19,80(sp)
 6ab3f70:	dcc00404 	addi	r19,sp,16
 6ab3f74:	2011883a 	mov	r8,r4
 6ab3f78:	2813883a 	mov	r9,r5
 6ab3f7c:	dc401315 	stw	r17,76(sp)
 6ab3f80:	d809883a 	mov	r4,sp
 6ab3f84:	980b883a 	mov	r5,r19
 6ab3f88:	dc400904 	addi	r17,sp,36
 6ab3f8c:	dfc01515 	stw	ra,84(sp)
 6ab3f90:	da400115 	stw	r9,4(sp)
 6ab3f94:	d9c00315 	stw	r7,12(sp)
 6ab3f98:	da000015 	stw	r8,0(sp)
 6ab3f9c:	d9800215 	stw	r6,8(sp)
 6ab3fa0:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab3fa4:	d9000204 	addi	r4,sp,8
 6ab3fa8:	880b883a 	mov	r5,r17
 6ab3fac:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab3fb0:	d8800a17 	ldw	r2,40(sp)
 6ab3fb4:	880b883a 	mov	r5,r17
 6ab3fb8:	9809883a 	mov	r4,r19
 6ab3fbc:	d9800e04 	addi	r6,sp,56
 6ab3fc0:	1080005c 	xori	r2,r2,1
 6ab3fc4:	d8800a15 	stw	r2,40(sp)
 6ab3fc8:	6ab3b580 	call	6ab3b58 <_fpadd_parts>
 6ab3fcc:	1009883a 	mov	r4,r2
 6ab3fd0:	6ab4ee80 	call	6ab4ee8 <__pack_d>
 6ab3fd4:	dfc01517 	ldw	ra,84(sp)
 6ab3fd8:	dcc01417 	ldw	r19,80(sp)
 6ab3fdc:	dc401317 	ldw	r17,76(sp)
 6ab3fe0:	dec01604 	addi	sp,sp,88
 6ab3fe4:	f800283a 	ret

06ab3fe8 <__adddf3>:
 6ab3fe8:	deffea04 	addi	sp,sp,-88
 6ab3fec:	dcc01415 	stw	r19,80(sp)
 6ab3ff0:	dcc00404 	addi	r19,sp,16
 6ab3ff4:	2011883a 	mov	r8,r4
 6ab3ff8:	2813883a 	mov	r9,r5
 6ab3ffc:	dc401315 	stw	r17,76(sp)
 6ab4000:	d809883a 	mov	r4,sp
 6ab4004:	980b883a 	mov	r5,r19
 6ab4008:	dc400904 	addi	r17,sp,36
 6ab400c:	dfc01515 	stw	ra,84(sp)
 6ab4010:	da400115 	stw	r9,4(sp)
 6ab4014:	d9c00315 	stw	r7,12(sp)
 6ab4018:	da000015 	stw	r8,0(sp)
 6ab401c:	d9800215 	stw	r6,8(sp)
 6ab4020:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab4024:	d9000204 	addi	r4,sp,8
 6ab4028:	880b883a 	mov	r5,r17
 6ab402c:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab4030:	d9800e04 	addi	r6,sp,56
 6ab4034:	9809883a 	mov	r4,r19
 6ab4038:	880b883a 	mov	r5,r17
 6ab403c:	6ab3b580 	call	6ab3b58 <_fpadd_parts>
 6ab4040:	1009883a 	mov	r4,r2
 6ab4044:	6ab4ee80 	call	6ab4ee8 <__pack_d>
 6ab4048:	dfc01517 	ldw	ra,84(sp)
 6ab404c:	dcc01417 	ldw	r19,80(sp)
 6ab4050:	dc401317 	ldw	r17,76(sp)
 6ab4054:	dec01604 	addi	sp,sp,88
 6ab4058:	f800283a 	ret

06ab405c <__muldf3>:
 6ab405c:	deffe004 	addi	sp,sp,-128
 6ab4060:	dc401815 	stw	r17,96(sp)
 6ab4064:	dc400404 	addi	r17,sp,16
 6ab4068:	2011883a 	mov	r8,r4
 6ab406c:	2813883a 	mov	r9,r5
 6ab4070:	dc001715 	stw	r16,92(sp)
 6ab4074:	d809883a 	mov	r4,sp
 6ab4078:	880b883a 	mov	r5,r17
 6ab407c:	dc000904 	addi	r16,sp,36
 6ab4080:	dfc01f15 	stw	ra,124(sp)
 6ab4084:	da400115 	stw	r9,4(sp)
 6ab4088:	d9c00315 	stw	r7,12(sp)
 6ab408c:	da000015 	stw	r8,0(sp)
 6ab4090:	d9800215 	stw	r6,8(sp)
 6ab4094:	ddc01e15 	stw	r23,120(sp)
 6ab4098:	dd801d15 	stw	r22,116(sp)
 6ab409c:	dd401c15 	stw	r21,112(sp)
 6ab40a0:	dd001b15 	stw	r20,108(sp)
 6ab40a4:	dcc01a15 	stw	r19,104(sp)
 6ab40a8:	dc801915 	stw	r18,100(sp)
 6ab40ac:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab40b0:	d9000204 	addi	r4,sp,8
 6ab40b4:	800b883a 	mov	r5,r16
 6ab40b8:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab40bc:	d9000417 	ldw	r4,16(sp)
 6ab40c0:	00800044 	movi	r2,1
 6ab40c4:	1100102e 	bgeu	r2,r4,6ab4108 <__muldf3+0xac>
 6ab40c8:	d8c00917 	ldw	r3,36(sp)
 6ab40cc:	10c0062e 	bgeu	r2,r3,6ab40e8 <__muldf3+0x8c>
 6ab40d0:	00800104 	movi	r2,4
 6ab40d4:	20800a26 	beq	r4,r2,6ab4100 <__muldf3+0xa4>
 6ab40d8:	1880cc26 	beq	r3,r2,6ab440c <__muldf3+0x3b0>
 6ab40dc:	00800084 	movi	r2,2
 6ab40e0:	20800926 	beq	r4,r2,6ab4108 <__muldf3+0xac>
 6ab40e4:	1880191e 	bne	r3,r2,6ab414c <__muldf3+0xf0>
 6ab40e8:	d8c00a17 	ldw	r3,40(sp)
 6ab40ec:	d8800517 	ldw	r2,20(sp)
 6ab40f0:	8009883a 	mov	r4,r16
 6ab40f4:	10c4c03a 	cmpne	r2,r2,r3
 6ab40f8:	d8800a15 	stw	r2,40(sp)
 6ab40fc:	00000706 	br	6ab411c <__muldf3+0xc0>
 6ab4100:	00800084 	movi	r2,2
 6ab4104:	1880c326 	beq	r3,r2,6ab4414 <__muldf3+0x3b8>
 6ab4108:	d8800517 	ldw	r2,20(sp)
 6ab410c:	d8c00a17 	ldw	r3,40(sp)
 6ab4110:	8809883a 	mov	r4,r17
 6ab4114:	10c4c03a 	cmpne	r2,r2,r3
 6ab4118:	d8800515 	stw	r2,20(sp)
 6ab411c:	6ab4ee80 	call	6ab4ee8 <__pack_d>
 6ab4120:	dfc01f17 	ldw	ra,124(sp)
 6ab4124:	ddc01e17 	ldw	r23,120(sp)
 6ab4128:	dd801d17 	ldw	r22,116(sp)
 6ab412c:	dd401c17 	ldw	r21,112(sp)
 6ab4130:	dd001b17 	ldw	r20,108(sp)
 6ab4134:	dcc01a17 	ldw	r19,104(sp)
 6ab4138:	dc801917 	ldw	r18,100(sp)
 6ab413c:	dc401817 	ldw	r17,96(sp)
 6ab4140:	dc001717 	ldw	r16,92(sp)
 6ab4144:	dec02004 	addi	sp,sp,128
 6ab4148:	f800283a 	ret
 6ab414c:	dd800717 	ldw	r22,28(sp)
 6ab4150:	dc800c17 	ldw	r18,48(sp)
 6ab4154:	002b883a 	mov	r21,zero
 6ab4158:	0023883a 	mov	r17,zero
 6ab415c:	a80b883a 	mov	r5,r21
 6ab4160:	b00d883a 	mov	r6,r22
 6ab4164:	880f883a 	mov	r7,r17
 6ab4168:	ddc00817 	ldw	r23,32(sp)
 6ab416c:	dcc00d17 	ldw	r19,52(sp)
 6ab4170:	9009883a 	mov	r4,r18
 6ab4174:	6ab4dd00 	call	6ab4dd0 <__muldi3>
 6ab4178:	001b883a 	mov	r13,zero
 6ab417c:	680f883a 	mov	r7,r13
 6ab4180:	b009883a 	mov	r4,r22
 6ab4184:	000b883a 	mov	r5,zero
 6ab4188:	980d883a 	mov	r6,r19
 6ab418c:	b82d883a 	mov	r22,r23
 6ab4190:	002f883a 	mov	r23,zero
 6ab4194:	db401615 	stw	r13,88(sp)
 6ab4198:	d8801315 	stw	r2,76(sp)
 6ab419c:	d8c01415 	stw	r3,80(sp)
 6ab41a0:	dcc01515 	stw	r19,84(sp)
 6ab41a4:	6ab4dd00 	call	6ab4dd0 <__muldi3>
 6ab41a8:	b00d883a 	mov	r6,r22
 6ab41ac:	000b883a 	mov	r5,zero
 6ab41b0:	9009883a 	mov	r4,r18
 6ab41b4:	b80f883a 	mov	r7,r23
 6ab41b8:	1021883a 	mov	r16,r2
 6ab41bc:	1823883a 	mov	r17,r3
 6ab41c0:	6ab4dd00 	call	6ab4dd0 <__muldi3>
 6ab41c4:	8085883a 	add	r2,r16,r2
 6ab41c8:	140d803a 	cmpltu	r6,r2,r16
 6ab41cc:	88c7883a 	add	r3,r17,r3
 6ab41d0:	30cd883a 	add	r6,r6,r3
 6ab41d4:	1029883a 	mov	r20,r2
 6ab41d8:	302b883a 	mov	r21,r6
 6ab41dc:	da801317 	ldw	r10,76(sp)
 6ab41e0:	dac01417 	ldw	r11,80(sp)
 6ab41e4:	db001517 	ldw	r12,84(sp)
 6ab41e8:	db401617 	ldw	r13,88(sp)
 6ab41ec:	3440612e 	bgeu	r6,r17,6ab4374 <__muldf3+0x318>
 6ab41f0:	0009883a 	mov	r4,zero
 6ab41f4:	5105883a 	add	r2,r10,r4
 6ab41f8:	128d803a 	cmpltu	r6,r2,r10
 6ab41fc:	5d07883a 	add	r3,r11,r20
 6ab4200:	30cd883a 	add	r6,r6,r3
 6ab4204:	0021883a 	mov	r16,zero
 6ab4208:	04400044 	movi	r17,1
 6ab420c:	1025883a 	mov	r18,r2
 6ab4210:	3027883a 	mov	r19,r6
 6ab4214:	32c06236 	bltu	r6,r11,6ab43a0 <__muldf3+0x344>
 6ab4218:	59807a26 	beq	r11,r6,6ab4404 <__muldf3+0x3a8>
 6ab421c:	680b883a 	mov	r5,r13
 6ab4220:	b80f883a 	mov	r7,r23
 6ab4224:	6009883a 	mov	r4,r12
 6ab4228:	b00d883a 	mov	r6,r22
 6ab422c:	6ab4dd00 	call	6ab4dd0 <__muldi3>
 6ab4230:	1009883a 	mov	r4,r2
 6ab4234:	000f883a 	mov	r7,zero
 6ab4238:	1545883a 	add	r2,r2,r21
 6ab423c:	1111803a 	cmpltu	r8,r2,r4
 6ab4240:	19c7883a 	add	r3,r3,r7
 6ab4244:	40c7883a 	add	r3,r8,r3
 6ab4248:	88cb883a 	add	r5,r17,r3
 6ab424c:	d8c00617 	ldw	r3,24(sp)
 6ab4250:	8089883a 	add	r4,r16,r2
 6ab4254:	d8800b17 	ldw	r2,44(sp)
 6ab4258:	18c00104 	addi	r3,r3,4
 6ab425c:	240d803a 	cmpltu	r6,r4,r16
 6ab4260:	10c7883a 	add	r3,r2,r3
 6ab4264:	2013883a 	mov	r9,r4
 6ab4268:	d8800a17 	ldw	r2,40(sp)
 6ab426c:	d9000517 	ldw	r4,20(sp)
 6ab4270:	314d883a 	add	r6,r6,r5
 6ab4274:	3015883a 	mov	r10,r6
 6ab4278:	2088c03a 	cmpne	r4,r4,r2
 6ab427c:	00880034 	movhi	r2,8192
 6ab4280:	10bfffc4 	addi	r2,r2,-1
 6ab4284:	d9000f15 	stw	r4,60(sp)
 6ab4288:	d8c01015 	stw	r3,64(sp)
 6ab428c:	1180162e 	bgeu	r2,r6,6ab42e8 <__muldf3+0x28c>
 6ab4290:	1811883a 	mov	r8,r3
 6ab4294:	101f883a 	mov	r15,r2
 6ab4298:	980497fa 	slli	r2,r19,31
 6ab429c:	9016d07a 	srli	r11,r18,1
 6ab42a0:	500697fa 	slli	r3,r10,31
 6ab42a4:	480cd07a 	srli	r6,r9,1
 6ab42a8:	500ed07a 	srli	r7,r10,1
 6ab42ac:	12d6b03a 	or	r11,r2,r11
 6ab42b0:	00800044 	movi	r2,1
 6ab42b4:	198cb03a 	or	r6,r3,r6
 6ab42b8:	4888703a 	and	r4,r9,r2
 6ab42bc:	9818d07a 	srli	r12,r19,1
 6ab42c0:	001b883a 	mov	r13,zero
 6ab42c4:	03a00034 	movhi	r14,32768
 6ab42c8:	3013883a 	mov	r9,r6
 6ab42cc:	3815883a 	mov	r10,r7
 6ab42d0:	4091883a 	add	r8,r8,r2
 6ab42d4:	20000226 	beq	r4,zero,6ab42e0 <__muldf3+0x284>
 6ab42d8:	5b64b03a 	or	r18,r11,r13
 6ab42dc:	63a6b03a 	or	r19,r12,r14
 6ab42e0:	7abfed36 	bltu	r15,r10,6ab4298 <__muldf3+0x23c>
 6ab42e4:	da001015 	stw	r8,64(sp)
 6ab42e8:	00840034 	movhi	r2,4096
 6ab42ec:	10bfffc4 	addi	r2,r2,-1
 6ab42f0:	12801436 	bltu	r2,r10,6ab4344 <__muldf3+0x2e8>
 6ab42f4:	da001017 	ldw	r8,64(sp)
 6ab42f8:	101f883a 	mov	r15,r2
 6ab42fc:	4a45883a 	add	r2,r9,r9
 6ab4300:	124d803a 	cmpltu	r6,r2,r9
 6ab4304:	5287883a 	add	r3,r10,r10
 6ab4308:	9497883a 	add	r11,r18,r18
 6ab430c:	5c8f803a 	cmpltu	r7,r11,r18
 6ab4310:	9cd9883a 	add	r12,r19,r19
 6ab4314:	01000044 	movi	r4,1
 6ab4318:	30cd883a 	add	r6,r6,r3
 6ab431c:	3b0f883a 	add	r7,r7,r12
 6ab4320:	423fffc4 	addi	r8,r8,-1
 6ab4324:	1013883a 	mov	r9,r2
 6ab4328:	3015883a 	mov	r10,r6
 6ab432c:	111ab03a 	or	r13,r2,r4
 6ab4330:	98003016 	blt	r19,zero,6ab43f4 <__muldf3+0x398>
 6ab4334:	5825883a 	mov	r18,r11
 6ab4338:	3827883a 	mov	r19,r7
 6ab433c:	7abfef2e 	bgeu	r15,r10,6ab42fc <__muldf3+0x2a0>
 6ab4340:	da001015 	stw	r8,64(sp)
 6ab4344:	00803fc4 	movi	r2,255
 6ab4348:	488e703a 	and	r7,r9,r2
 6ab434c:	00802004 	movi	r2,128
 6ab4350:	0007883a 	mov	r3,zero
 6ab4354:	0011883a 	mov	r8,zero
 6ab4358:	38801826 	beq	r7,r2,6ab43bc <__muldf3+0x360>
 6ab435c:	008000c4 	movi	r2,3
 6ab4360:	d9000e04 	addi	r4,sp,56
 6ab4364:	da801215 	stw	r10,72(sp)
 6ab4368:	d8800e15 	stw	r2,56(sp)
 6ab436c:	da401115 	stw	r9,68(sp)
 6ab4370:	003f6a06 	br	6ab411c <__muldf3+0xc0>
 6ab4374:	89802126 	beq	r17,r6,6ab43fc <__muldf3+0x3a0>
 6ab4378:	0009883a 	mov	r4,zero
 6ab437c:	5105883a 	add	r2,r10,r4
 6ab4380:	128d803a 	cmpltu	r6,r2,r10
 6ab4384:	5d07883a 	add	r3,r11,r20
 6ab4388:	30cd883a 	add	r6,r6,r3
 6ab438c:	0021883a 	mov	r16,zero
 6ab4390:	0023883a 	mov	r17,zero
 6ab4394:	1025883a 	mov	r18,r2
 6ab4398:	3027883a 	mov	r19,r6
 6ab439c:	32ff9e2e 	bgeu	r6,r11,6ab4218 <__muldf3+0x1bc>
 6ab43a0:	00800044 	movi	r2,1
 6ab43a4:	8089883a 	add	r4,r16,r2
 6ab43a8:	240d803a 	cmpltu	r6,r4,r16
 6ab43ac:	344d883a 	add	r6,r6,r17
 6ab43b0:	2021883a 	mov	r16,r4
 6ab43b4:	3023883a 	mov	r17,r6
 6ab43b8:	003f9806 	br	6ab421c <__muldf3+0x1c0>
 6ab43bc:	403fe71e 	bne	r8,zero,6ab435c <__muldf3+0x300>
 6ab43c0:	01004004 	movi	r4,256
 6ab43c4:	4904703a 	and	r2,r9,r4
 6ab43c8:	10c4b03a 	or	r2,r2,r3
 6ab43cc:	103fe31e 	bne	r2,zero,6ab435c <__muldf3+0x300>
 6ab43d0:	94c4b03a 	or	r2,r18,r19
 6ab43d4:	103fe126 	beq	r2,zero,6ab435c <__muldf3+0x300>
 6ab43d8:	49c5883a 	add	r2,r9,r7
 6ab43dc:	1251803a 	cmpltu	r8,r2,r9
 6ab43e0:	4291883a 	add	r8,r8,r10
 6ab43e4:	013fc004 	movi	r4,-256
 6ab43e8:	1112703a 	and	r9,r2,r4
 6ab43ec:	4015883a 	mov	r10,r8
 6ab43f0:	003fda06 	br	6ab435c <__muldf3+0x300>
 6ab43f4:	6813883a 	mov	r9,r13
 6ab43f8:	003fce06 	br	6ab4334 <__muldf3+0x2d8>
 6ab43fc:	143f7c36 	bltu	r2,r16,6ab41f0 <__muldf3+0x194>
 6ab4400:	003fdd06 	br	6ab4378 <__muldf3+0x31c>
 6ab4404:	12bf852e 	bgeu	r2,r10,6ab421c <__muldf3+0x1c0>
 6ab4408:	003fe506 	br	6ab43a0 <__muldf3+0x344>
 6ab440c:	00800084 	movi	r2,2
 6ab4410:	20bf351e 	bne	r4,r2,6ab40e8 <__muldf3+0x8c>
 6ab4414:	0101ab34 	movhi	r4,1708
 6ab4418:	2122ca04 	addi	r4,r4,-29912
 6ab441c:	003f3f06 	br	6ab411c <__muldf3+0xc0>

06ab4420 <__divdf3>:
 6ab4420:	deffed04 	addi	sp,sp,-76
 6ab4424:	dcc01115 	stw	r19,68(sp)
 6ab4428:	dcc00404 	addi	r19,sp,16
 6ab442c:	2011883a 	mov	r8,r4
 6ab4430:	2813883a 	mov	r9,r5
 6ab4434:	dc000e15 	stw	r16,56(sp)
 6ab4438:	d809883a 	mov	r4,sp
 6ab443c:	980b883a 	mov	r5,r19
 6ab4440:	dc000904 	addi	r16,sp,36
 6ab4444:	dfc01215 	stw	ra,72(sp)
 6ab4448:	da400115 	stw	r9,4(sp)
 6ab444c:	d9c00315 	stw	r7,12(sp)
 6ab4450:	da000015 	stw	r8,0(sp)
 6ab4454:	d9800215 	stw	r6,8(sp)
 6ab4458:	dc801015 	stw	r18,64(sp)
 6ab445c:	dc400f15 	stw	r17,60(sp)
 6ab4460:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab4464:	d9000204 	addi	r4,sp,8
 6ab4468:	800b883a 	mov	r5,r16
 6ab446c:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab4470:	d9000417 	ldw	r4,16(sp)
 6ab4474:	00800044 	movi	r2,1
 6ab4478:	11000b2e 	bgeu	r2,r4,6ab44a8 <__divdf3+0x88>
 6ab447c:	d9400917 	ldw	r5,36(sp)
 6ab4480:	1140762e 	bgeu	r2,r5,6ab465c <__divdf3+0x23c>
 6ab4484:	d8800517 	ldw	r2,20(sp)
 6ab4488:	d8c00a17 	ldw	r3,40(sp)
 6ab448c:	01800104 	movi	r6,4
 6ab4490:	10c4f03a 	xor	r2,r2,r3
 6ab4494:	d8800515 	stw	r2,20(sp)
 6ab4498:	21800226 	beq	r4,r6,6ab44a4 <__divdf3+0x84>
 6ab449c:	00800084 	movi	r2,2
 6ab44a0:	2080141e 	bne	r4,r2,6ab44f4 <__divdf3+0xd4>
 6ab44a4:	29000926 	beq	r5,r4,6ab44cc <__divdf3+0xac>
 6ab44a8:	9809883a 	mov	r4,r19
 6ab44ac:	6ab4ee80 	call	6ab4ee8 <__pack_d>
 6ab44b0:	dfc01217 	ldw	ra,72(sp)
 6ab44b4:	dcc01117 	ldw	r19,68(sp)
 6ab44b8:	dc801017 	ldw	r18,64(sp)
 6ab44bc:	dc400f17 	ldw	r17,60(sp)
 6ab44c0:	dc000e17 	ldw	r16,56(sp)
 6ab44c4:	dec01304 	addi	sp,sp,76
 6ab44c8:	f800283a 	ret
 6ab44cc:	0101ab34 	movhi	r4,1708
 6ab44d0:	2122ca04 	addi	r4,r4,-29912
 6ab44d4:	6ab4ee80 	call	6ab4ee8 <__pack_d>
 6ab44d8:	dfc01217 	ldw	ra,72(sp)
 6ab44dc:	dcc01117 	ldw	r19,68(sp)
 6ab44e0:	dc801017 	ldw	r18,64(sp)
 6ab44e4:	dc400f17 	ldw	r17,60(sp)
 6ab44e8:	dc000e17 	ldw	r16,56(sp)
 6ab44ec:	dec01304 	addi	sp,sp,76
 6ab44f0:	f800283a 	ret
 6ab44f4:	29805b26 	beq	r5,r6,6ab4664 <__divdf3+0x244>
 6ab44f8:	28802d26 	beq	r5,r2,6ab45b0 <__divdf3+0x190>
 6ab44fc:	d8c00617 	ldw	r3,24(sp)
 6ab4500:	d8800b17 	ldw	r2,44(sp)
 6ab4504:	d9c00817 	ldw	r7,32(sp)
 6ab4508:	dc400d17 	ldw	r17,52(sp)
 6ab450c:	188bc83a 	sub	r5,r3,r2
 6ab4510:	d9800717 	ldw	r6,28(sp)
 6ab4514:	dc000c17 	ldw	r16,48(sp)
 6ab4518:	d9400615 	stw	r5,24(sp)
 6ab451c:	3c403836 	bltu	r7,r17,6ab4600 <__divdf3+0x1e0>
 6ab4520:	89c03626 	beq	r17,r7,6ab45fc <__divdf3+0x1dc>
 6ab4524:	0015883a 	mov	r10,zero
 6ab4528:	001d883a 	mov	r14,zero
 6ab452c:	02c40034 	movhi	r11,4096
 6ab4530:	001f883a 	mov	r15,zero
 6ab4534:	003f883a 	mov	ra,zero
 6ab4538:	04800f44 	movi	r18,61
 6ab453c:	00000f06 	br	6ab457c <__divdf3+0x15c>
 6ab4540:	601d883a 	mov	r14,r12
 6ab4544:	681f883a 	mov	r15,r13
 6ab4548:	400d883a 	mov	r6,r8
 6ab454c:	100f883a 	mov	r7,r2
 6ab4550:	3191883a 	add	r8,r6,r6
 6ab4554:	5808d07a 	srli	r4,r11,1
 6ab4558:	4185803a 	cmpltu	r2,r8,r6
 6ab455c:	39d3883a 	add	r9,r7,r7
 6ab4560:	28c6b03a 	or	r3,r5,r3
 6ab4564:	1245883a 	add	r2,r2,r9
 6ab4568:	1815883a 	mov	r10,r3
 6ab456c:	2017883a 	mov	r11,r4
 6ab4570:	400d883a 	mov	r6,r8
 6ab4574:	100f883a 	mov	r7,r2
 6ab4578:	fc801726 	beq	ra,r18,6ab45d8 <__divdf3+0x1b8>
 6ab457c:	580a97fa 	slli	r5,r11,31
 6ab4580:	5006d07a 	srli	r3,r10,1
 6ab4584:	ffc00044 	addi	ra,ra,1
 6ab4588:	3c7ff136 	bltu	r7,r17,6ab4550 <__divdf3+0x130>
 6ab458c:	3411c83a 	sub	r8,r6,r16
 6ab4590:	3205803a 	cmpltu	r2,r6,r8
 6ab4594:	3c53c83a 	sub	r9,r7,r17
 6ab4598:	7298b03a 	or	r12,r14,r10
 6ab459c:	7adab03a 	or	r13,r15,r11
 6ab45a0:	4885c83a 	sub	r2,r9,r2
 6ab45a4:	89ffe61e 	bne	r17,r7,6ab4540 <__divdf3+0x120>
 6ab45a8:	343fe936 	bltu	r6,r16,6ab4550 <__divdf3+0x130>
 6ab45ac:	003fe406 	br	6ab4540 <__divdf3+0x120>
 6ab45b0:	9809883a 	mov	r4,r19
 6ab45b4:	d9800415 	stw	r6,16(sp)
 6ab45b8:	6ab4ee80 	call	6ab4ee8 <__pack_d>
 6ab45bc:	dfc01217 	ldw	ra,72(sp)
 6ab45c0:	dcc01117 	ldw	r19,68(sp)
 6ab45c4:	dc801017 	ldw	r18,64(sp)
 6ab45c8:	dc400f17 	ldw	r17,60(sp)
 6ab45cc:	dc000e17 	ldw	r16,56(sp)
 6ab45d0:	dec01304 	addi	sp,sp,76
 6ab45d4:	f800283a 	ret
 6ab45d8:	00803fc4 	movi	r2,255
 6ab45dc:	7090703a 	and	r8,r14,r2
 6ab45e0:	00802004 	movi	r2,128
 6ab45e4:	0007883a 	mov	r3,zero
 6ab45e8:	0013883a 	mov	r9,zero
 6ab45ec:	40800d26 	beq	r8,r2,6ab4624 <__divdf3+0x204>
 6ab45f0:	dbc00815 	stw	r15,32(sp)
 6ab45f4:	db800715 	stw	r14,28(sp)
 6ab45f8:	003fab06 	br	6ab44a8 <__divdf3+0x88>
 6ab45fc:	343fc92e 	bgeu	r6,r16,6ab4524 <__divdf3+0x104>
 6ab4600:	3185883a 	add	r2,r6,r6
 6ab4604:	1189803a 	cmpltu	r4,r2,r6
 6ab4608:	39c7883a 	add	r3,r7,r7
 6ab460c:	20c9883a 	add	r4,r4,r3
 6ab4610:	297fffc4 	addi	r5,r5,-1
 6ab4614:	100d883a 	mov	r6,r2
 6ab4618:	200f883a 	mov	r7,r4
 6ab461c:	d9400615 	stw	r5,24(sp)
 6ab4620:	003fc006 	br	6ab4524 <__divdf3+0x104>
 6ab4624:	483ff21e 	bne	r9,zero,6ab45f0 <__divdf3+0x1d0>
 6ab4628:	01004004 	movi	r4,256
 6ab462c:	7104703a 	and	r2,r14,r4
 6ab4630:	10c4b03a 	or	r2,r2,r3
 6ab4634:	103fee1e 	bne	r2,zero,6ab45f0 <__divdf3+0x1d0>
 6ab4638:	31c4b03a 	or	r2,r6,r7
 6ab463c:	103fec26 	beq	r2,zero,6ab45f0 <__divdf3+0x1d0>
 6ab4640:	7205883a 	add	r2,r14,r8
 6ab4644:	1391803a 	cmpltu	r8,r2,r14
 6ab4648:	43d1883a 	add	r8,r8,r15
 6ab464c:	013fc004 	movi	r4,-256
 6ab4650:	111c703a 	and	r14,r2,r4
 6ab4654:	401f883a 	mov	r15,r8
 6ab4658:	003fe506 	br	6ab45f0 <__divdf3+0x1d0>
 6ab465c:	8009883a 	mov	r4,r16
 6ab4660:	003f9206 	br	6ab44ac <__divdf3+0x8c>
 6ab4664:	9809883a 	mov	r4,r19
 6ab4668:	d8000715 	stw	zero,28(sp)
 6ab466c:	d8000815 	stw	zero,32(sp)
 6ab4670:	d8000615 	stw	zero,24(sp)
 6ab4674:	003f8d06 	br	6ab44ac <__divdf3+0x8c>

06ab4678 <__eqdf2>:
 6ab4678:	deffef04 	addi	sp,sp,-68
 6ab467c:	dc400f15 	stw	r17,60(sp)
 6ab4680:	dc400404 	addi	r17,sp,16
 6ab4684:	2005883a 	mov	r2,r4
 6ab4688:	2807883a 	mov	r3,r5
 6ab468c:	dc000e15 	stw	r16,56(sp)
 6ab4690:	d809883a 	mov	r4,sp
 6ab4694:	880b883a 	mov	r5,r17
 6ab4698:	dc000904 	addi	r16,sp,36
 6ab469c:	d8c00115 	stw	r3,4(sp)
 6ab46a0:	d8800015 	stw	r2,0(sp)
 6ab46a4:	d9800215 	stw	r6,8(sp)
 6ab46a8:	dfc01015 	stw	ra,64(sp)
 6ab46ac:	d9c00315 	stw	r7,12(sp)
 6ab46b0:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab46b4:	d9000204 	addi	r4,sp,8
 6ab46b8:	800b883a 	mov	r5,r16
 6ab46bc:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab46c0:	d8800417 	ldw	r2,16(sp)
 6ab46c4:	00c00044 	movi	r3,1
 6ab46c8:	180d883a 	mov	r6,r3
 6ab46cc:	1880062e 	bgeu	r3,r2,6ab46e8 <__eqdf2+0x70>
 6ab46d0:	d8800917 	ldw	r2,36(sp)
 6ab46d4:	8809883a 	mov	r4,r17
 6ab46d8:	800b883a 	mov	r5,r16
 6ab46dc:	1880022e 	bgeu	r3,r2,6ab46e8 <__eqdf2+0x70>
 6ab46e0:	6ab53340 	call	6ab5334 <__fpcmp_parts_d>
 6ab46e4:	100d883a 	mov	r6,r2
 6ab46e8:	3005883a 	mov	r2,r6
 6ab46ec:	dfc01017 	ldw	ra,64(sp)
 6ab46f0:	dc400f17 	ldw	r17,60(sp)
 6ab46f4:	dc000e17 	ldw	r16,56(sp)
 6ab46f8:	dec01104 	addi	sp,sp,68
 6ab46fc:	f800283a 	ret

06ab4700 <__nedf2>:
 6ab4700:	deffef04 	addi	sp,sp,-68
 6ab4704:	dc400f15 	stw	r17,60(sp)
 6ab4708:	dc400404 	addi	r17,sp,16
 6ab470c:	2005883a 	mov	r2,r4
 6ab4710:	2807883a 	mov	r3,r5
 6ab4714:	dc000e15 	stw	r16,56(sp)
 6ab4718:	d809883a 	mov	r4,sp
 6ab471c:	880b883a 	mov	r5,r17
 6ab4720:	dc000904 	addi	r16,sp,36
 6ab4724:	d8c00115 	stw	r3,4(sp)
 6ab4728:	d8800015 	stw	r2,0(sp)
 6ab472c:	d9800215 	stw	r6,8(sp)
 6ab4730:	dfc01015 	stw	ra,64(sp)
 6ab4734:	d9c00315 	stw	r7,12(sp)
 6ab4738:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab473c:	d9000204 	addi	r4,sp,8
 6ab4740:	800b883a 	mov	r5,r16
 6ab4744:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab4748:	d8800417 	ldw	r2,16(sp)
 6ab474c:	00c00044 	movi	r3,1
 6ab4750:	180d883a 	mov	r6,r3
 6ab4754:	1880062e 	bgeu	r3,r2,6ab4770 <__nedf2+0x70>
 6ab4758:	d8800917 	ldw	r2,36(sp)
 6ab475c:	8809883a 	mov	r4,r17
 6ab4760:	800b883a 	mov	r5,r16
 6ab4764:	1880022e 	bgeu	r3,r2,6ab4770 <__nedf2+0x70>
 6ab4768:	6ab53340 	call	6ab5334 <__fpcmp_parts_d>
 6ab476c:	100d883a 	mov	r6,r2
 6ab4770:	3005883a 	mov	r2,r6
 6ab4774:	dfc01017 	ldw	ra,64(sp)
 6ab4778:	dc400f17 	ldw	r17,60(sp)
 6ab477c:	dc000e17 	ldw	r16,56(sp)
 6ab4780:	dec01104 	addi	sp,sp,68
 6ab4784:	f800283a 	ret

06ab4788 <__gtdf2>:
 6ab4788:	deffef04 	addi	sp,sp,-68
 6ab478c:	dc400f15 	stw	r17,60(sp)
 6ab4790:	dc400404 	addi	r17,sp,16
 6ab4794:	2005883a 	mov	r2,r4
 6ab4798:	2807883a 	mov	r3,r5
 6ab479c:	dc000e15 	stw	r16,56(sp)
 6ab47a0:	d809883a 	mov	r4,sp
 6ab47a4:	880b883a 	mov	r5,r17
 6ab47a8:	dc000904 	addi	r16,sp,36
 6ab47ac:	d8c00115 	stw	r3,4(sp)
 6ab47b0:	d8800015 	stw	r2,0(sp)
 6ab47b4:	d9800215 	stw	r6,8(sp)
 6ab47b8:	dfc01015 	stw	ra,64(sp)
 6ab47bc:	d9c00315 	stw	r7,12(sp)
 6ab47c0:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab47c4:	d9000204 	addi	r4,sp,8
 6ab47c8:	800b883a 	mov	r5,r16
 6ab47cc:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab47d0:	d8800417 	ldw	r2,16(sp)
 6ab47d4:	00c00044 	movi	r3,1
 6ab47d8:	01bfffc4 	movi	r6,-1
 6ab47dc:	1880062e 	bgeu	r3,r2,6ab47f8 <__gtdf2+0x70>
 6ab47e0:	d8800917 	ldw	r2,36(sp)
 6ab47e4:	8809883a 	mov	r4,r17
 6ab47e8:	800b883a 	mov	r5,r16
 6ab47ec:	1880022e 	bgeu	r3,r2,6ab47f8 <__gtdf2+0x70>
 6ab47f0:	6ab53340 	call	6ab5334 <__fpcmp_parts_d>
 6ab47f4:	100d883a 	mov	r6,r2
 6ab47f8:	3005883a 	mov	r2,r6
 6ab47fc:	dfc01017 	ldw	ra,64(sp)
 6ab4800:	dc400f17 	ldw	r17,60(sp)
 6ab4804:	dc000e17 	ldw	r16,56(sp)
 6ab4808:	dec01104 	addi	sp,sp,68
 6ab480c:	f800283a 	ret

06ab4810 <__gedf2>:
 6ab4810:	deffef04 	addi	sp,sp,-68
 6ab4814:	dc400f15 	stw	r17,60(sp)
 6ab4818:	dc400404 	addi	r17,sp,16
 6ab481c:	2005883a 	mov	r2,r4
 6ab4820:	2807883a 	mov	r3,r5
 6ab4824:	dc000e15 	stw	r16,56(sp)
 6ab4828:	d809883a 	mov	r4,sp
 6ab482c:	880b883a 	mov	r5,r17
 6ab4830:	dc000904 	addi	r16,sp,36
 6ab4834:	d8c00115 	stw	r3,4(sp)
 6ab4838:	d8800015 	stw	r2,0(sp)
 6ab483c:	d9800215 	stw	r6,8(sp)
 6ab4840:	dfc01015 	stw	ra,64(sp)
 6ab4844:	d9c00315 	stw	r7,12(sp)
 6ab4848:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab484c:	d9000204 	addi	r4,sp,8
 6ab4850:	800b883a 	mov	r5,r16
 6ab4854:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab4858:	d8800417 	ldw	r2,16(sp)
 6ab485c:	00c00044 	movi	r3,1
 6ab4860:	01bfffc4 	movi	r6,-1
 6ab4864:	1880062e 	bgeu	r3,r2,6ab4880 <__gedf2+0x70>
 6ab4868:	d8800917 	ldw	r2,36(sp)
 6ab486c:	8809883a 	mov	r4,r17
 6ab4870:	800b883a 	mov	r5,r16
 6ab4874:	1880022e 	bgeu	r3,r2,6ab4880 <__gedf2+0x70>
 6ab4878:	6ab53340 	call	6ab5334 <__fpcmp_parts_d>
 6ab487c:	100d883a 	mov	r6,r2
 6ab4880:	3005883a 	mov	r2,r6
 6ab4884:	dfc01017 	ldw	ra,64(sp)
 6ab4888:	dc400f17 	ldw	r17,60(sp)
 6ab488c:	dc000e17 	ldw	r16,56(sp)
 6ab4890:	dec01104 	addi	sp,sp,68
 6ab4894:	f800283a 	ret

06ab4898 <__ltdf2>:
 6ab4898:	deffef04 	addi	sp,sp,-68
 6ab489c:	dc400f15 	stw	r17,60(sp)
 6ab48a0:	dc400404 	addi	r17,sp,16
 6ab48a4:	2005883a 	mov	r2,r4
 6ab48a8:	2807883a 	mov	r3,r5
 6ab48ac:	dc000e15 	stw	r16,56(sp)
 6ab48b0:	d809883a 	mov	r4,sp
 6ab48b4:	880b883a 	mov	r5,r17
 6ab48b8:	dc000904 	addi	r16,sp,36
 6ab48bc:	d8c00115 	stw	r3,4(sp)
 6ab48c0:	d8800015 	stw	r2,0(sp)
 6ab48c4:	d9800215 	stw	r6,8(sp)
 6ab48c8:	dfc01015 	stw	ra,64(sp)
 6ab48cc:	d9c00315 	stw	r7,12(sp)
 6ab48d0:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab48d4:	d9000204 	addi	r4,sp,8
 6ab48d8:	800b883a 	mov	r5,r16
 6ab48dc:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab48e0:	d8800417 	ldw	r2,16(sp)
 6ab48e4:	00c00044 	movi	r3,1
 6ab48e8:	180d883a 	mov	r6,r3
 6ab48ec:	1880062e 	bgeu	r3,r2,6ab4908 <__ltdf2+0x70>
 6ab48f0:	d8800917 	ldw	r2,36(sp)
 6ab48f4:	8809883a 	mov	r4,r17
 6ab48f8:	800b883a 	mov	r5,r16
 6ab48fc:	1880022e 	bgeu	r3,r2,6ab4908 <__ltdf2+0x70>
 6ab4900:	6ab53340 	call	6ab5334 <__fpcmp_parts_d>
 6ab4904:	100d883a 	mov	r6,r2
 6ab4908:	3005883a 	mov	r2,r6
 6ab490c:	dfc01017 	ldw	ra,64(sp)
 6ab4910:	dc400f17 	ldw	r17,60(sp)
 6ab4914:	dc000e17 	ldw	r16,56(sp)
 6ab4918:	dec01104 	addi	sp,sp,68
 6ab491c:	f800283a 	ret

06ab4920 <__floatsidf>:
 6ab4920:	2006d7fa 	srli	r3,r4,31
 6ab4924:	defff604 	addi	sp,sp,-40
 6ab4928:	008000c4 	movi	r2,3
 6ab492c:	dfc00915 	stw	ra,36(sp)
 6ab4930:	dcc00815 	stw	r19,32(sp)
 6ab4934:	dc800715 	stw	r18,28(sp)
 6ab4938:	dc400615 	stw	r17,24(sp)
 6ab493c:	dc000515 	stw	r16,20(sp)
 6ab4940:	d8800015 	stw	r2,0(sp)
 6ab4944:	d8c00115 	stw	r3,4(sp)
 6ab4948:	20000f1e 	bne	r4,zero,6ab4988 <__floatsidf+0x68>
 6ab494c:	00800084 	movi	r2,2
 6ab4950:	d8800015 	stw	r2,0(sp)
 6ab4954:	d809883a 	mov	r4,sp
 6ab4958:	6ab4ee80 	call	6ab4ee8 <__pack_d>
 6ab495c:	1009883a 	mov	r4,r2
 6ab4960:	180b883a 	mov	r5,r3
 6ab4964:	2005883a 	mov	r2,r4
 6ab4968:	2807883a 	mov	r3,r5
 6ab496c:	dfc00917 	ldw	ra,36(sp)
 6ab4970:	dcc00817 	ldw	r19,32(sp)
 6ab4974:	dc800717 	ldw	r18,28(sp)
 6ab4978:	dc400617 	ldw	r17,24(sp)
 6ab497c:	dc000517 	ldw	r16,20(sp)
 6ab4980:	dec00a04 	addi	sp,sp,40
 6ab4984:	f800283a 	ret
 6ab4988:	00800f04 	movi	r2,60
 6ab498c:	1807003a 	cmpeq	r3,r3,zero
 6ab4990:	d8800215 	stw	r2,8(sp)
 6ab4994:	18001126 	beq	r3,zero,6ab49dc <__floatsidf+0xbc>
 6ab4998:	0027883a 	mov	r19,zero
 6ab499c:	2025883a 	mov	r18,r4
 6ab49a0:	d9000315 	stw	r4,12(sp)
 6ab49a4:	dcc00415 	stw	r19,16(sp)
 6ab49a8:	6ab4e680 	call	6ab4e68 <__clzsi2>
 6ab49ac:	11000744 	addi	r4,r2,29
 6ab49b0:	013fe80e 	bge	zero,r4,6ab4954 <__floatsidf+0x34>
 6ab49b4:	10bfff44 	addi	r2,r2,-3
 6ab49b8:	10000c16 	blt	r2,zero,6ab49ec <__floatsidf+0xcc>
 6ab49bc:	90a2983a 	sll	r17,r18,r2
 6ab49c0:	0021883a 	mov	r16,zero
 6ab49c4:	d8800217 	ldw	r2,8(sp)
 6ab49c8:	dc400415 	stw	r17,16(sp)
 6ab49cc:	dc000315 	stw	r16,12(sp)
 6ab49d0:	1105c83a 	sub	r2,r2,r4
 6ab49d4:	d8800215 	stw	r2,8(sp)
 6ab49d8:	003fde06 	br	6ab4954 <__floatsidf+0x34>
 6ab49dc:	00a00034 	movhi	r2,32768
 6ab49e0:	20800a26 	beq	r4,r2,6ab4a0c <__floatsidf+0xec>
 6ab49e4:	0109c83a 	sub	r4,zero,r4
 6ab49e8:	003feb06 	br	6ab4998 <__floatsidf+0x78>
 6ab49ec:	9006d07a 	srli	r3,r18,1
 6ab49f0:	008007c4 	movi	r2,31
 6ab49f4:	1105c83a 	sub	r2,r2,r4
 6ab49f8:	1886d83a 	srl	r3,r3,r2
 6ab49fc:	9922983a 	sll	r17,r19,r4
 6ab4a00:	9120983a 	sll	r16,r18,r4
 6ab4a04:	1c62b03a 	or	r17,r3,r17
 6ab4a08:	003fee06 	br	6ab49c4 <__floatsidf+0xa4>
 6ab4a0c:	0009883a 	mov	r4,zero
 6ab4a10:	01707834 	movhi	r5,49632
 6ab4a14:	003fd306 	br	6ab4964 <__floatsidf+0x44>

06ab4a18 <__fixdfsi>:
 6ab4a18:	defff804 	addi	sp,sp,-32
 6ab4a1c:	2005883a 	mov	r2,r4
 6ab4a20:	2807883a 	mov	r3,r5
 6ab4a24:	d809883a 	mov	r4,sp
 6ab4a28:	d9400204 	addi	r5,sp,8
 6ab4a2c:	d8c00115 	stw	r3,4(sp)
 6ab4a30:	d8800015 	stw	r2,0(sp)
 6ab4a34:	dfc00715 	stw	ra,28(sp)
 6ab4a38:	6ab51fc0 	call	6ab51fc <__unpack_d>
 6ab4a3c:	d8c00217 	ldw	r3,8(sp)
 6ab4a40:	00800084 	movi	r2,2
 6ab4a44:	1880051e 	bne	r3,r2,6ab4a5c <__fixdfsi+0x44>
 6ab4a48:	0007883a 	mov	r3,zero
 6ab4a4c:	1805883a 	mov	r2,r3
 6ab4a50:	dfc00717 	ldw	ra,28(sp)
 6ab4a54:	dec00804 	addi	sp,sp,32
 6ab4a58:	f800283a 	ret
 6ab4a5c:	00800044 	movi	r2,1
 6ab4a60:	10fff92e 	bgeu	r2,r3,6ab4a48 <__fixdfsi+0x30>
 6ab4a64:	00800104 	movi	r2,4
 6ab4a68:	18800426 	beq	r3,r2,6ab4a7c <__fixdfsi+0x64>
 6ab4a6c:	d8c00417 	ldw	r3,16(sp)
 6ab4a70:	183ff516 	blt	r3,zero,6ab4a48 <__fixdfsi+0x30>
 6ab4a74:	00800784 	movi	r2,30
 6ab4a78:	10c0080e 	bge	r2,r3,6ab4a9c <__fixdfsi+0x84>
 6ab4a7c:	d8800317 	ldw	r2,12(sp)
 6ab4a80:	1000121e 	bne	r2,zero,6ab4acc <__fixdfsi+0xb4>
 6ab4a84:	00e00034 	movhi	r3,32768
 6ab4a88:	18ffffc4 	addi	r3,r3,-1
 6ab4a8c:	1805883a 	mov	r2,r3
 6ab4a90:	dfc00717 	ldw	ra,28(sp)
 6ab4a94:	dec00804 	addi	sp,sp,32
 6ab4a98:	f800283a 	ret
 6ab4a9c:	00800f04 	movi	r2,60
 6ab4aa0:	10d1c83a 	sub	r8,r2,r3
 6ab4aa4:	40bff804 	addi	r2,r8,-32
 6ab4aa8:	d9800517 	ldw	r6,20(sp)
 6ab4aac:	d9c00617 	ldw	r7,24(sp)
 6ab4ab0:	10000816 	blt	r2,zero,6ab4ad4 <__fixdfsi+0xbc>
 6ab4ab4:	3888d83a 	srl	r4,r7,r2
 6ab4ab8:	d8800317 	ldw	r2,12(sp)
 6ab4abc:	2007883a 	mov	r3,r4
 6ab4ac0:	103fe226 	beq	r2,zero,6ab4a4c <__fixdfsi+0x34>
 6ab4ac4:	0107c83a 	sub	r3,zero,r4
 6ab4ac8:	003fe006 	br	6ab4a4c <__fixdfsi+0x34>
 6ab4acc:	00e00034 	movhi	r3,32768
 6ab4ad0:	003fde06 	br	6ab4a4c <__fixdfsi+0x34>
 6ab4ad4:	39c7883a 	add	r3,r7,r7
 6ab4ad8:	008007c4 	movi	r2,31
 6ab4adc:	1205c83a 	sub	r2,r2,r8
 6ab4ae0:	1886983a 	sll	r3,r3,r2
 6ab4ae4:	3208d83a 	srl	r4,r6,r8
 6ab4ae8:	1908b03a 	or	r4,r3,r4
 6ab4aec:	003ff206 	br	6ab4ab8 <__fixdfsi+0xa0>

06ab4af0 <__floatunsidf>:
 6ab4af0:	defff204 	addi	sp,sp,-56
 6ab4af4:	dfc00d15 	stw	ra,52(sp)
 6ab4af8:	ddc00c15 	stw	r23,48(sp)
 6ab4afc:	dd800b15 	stw	r22,44(sp)
 6ab4b00:	dd400a15 	stw	r21,40(sp)
 6ab4b04:	dd000915 	stw	r20,36(sp)
 6ab4b08:	dcc00815 	stw	r19,32(sp)
 6ab4b0c:	dc800715 	stw	r18,28(sp)
 6ab4b10:	dc400615 	stw	r17,24(sp)
 6ab4b14:	dc000515 	stw	r16,20(sp)
 6ab4b18:	d8000115 	stw	zero,4(sp)
 6ab4b1c:	20000f1e 	bne	r4,zero,6ab4b5c <__floatunsidf+0x6c>
 6ab4b20:	00800084 	movi	r2,2
 6ab4b24:	d8800015 	stw	r2,0(sp)
 6ab4b28:	d809883a 	mov	r4,sp
 6ab4b2c:	6ab4ee80 	call	6ab4ee8 <__pack_d>
 6ab4b30:	dfc00d17 	ldw	ra,52(sp)
 6ab4b34:	ddc00c17 	ldw	r23,48(sp)
 6ab4b38:	dd800b17 	ldw	r22,44(sp)
 6ab4b3c:	dd400a17 	ldw	r21,40(sp)
 6ab4b40:	dd000917 	ldw	r20,36(sp)
 6ab4b44:	dcc00817 	ldw	r19,32(sp)
 6ab4b48:	dc800717 	ldw	r18,28(sp)
 6ab4b4c:	dc400617 	ldw	r17,24(sp)
 6ab4b50:	dc000517 	ldw	r16,20(sp)
 6ab4b54:	dec00e04 	addi	sp,sp,56
 6ab4b58:	f800283a 	ret
 6ab4b5c:	008000c4 	movi	r2,3
 6ab4b60:	00c00f04 	movi	r3,60
 6ab4b64:	002f883a 	mov	r23,zero
 6ab4b68:	202d883a 	mov	r22,r4
 6ab4b6c:	d8800015 	stw	r2,0(sp)
 6ab4b70:	d8c00215 	stw	r3,8(sp)
 6ab4b74:	d9000315 	stw	r4,12(sp)
 6ab4b78:	ddc00415 	stw	r23,16(sp)
 6ab4b7c:	6ab4e680 	call	6ab4e68 <__clzsi2>
 6ab4b80:	12400744 	addi	r9,r2,29
 6ab4b84:	48000b16 	blt	r9,zero,6ab4bb4 <__floatunsidf+0xc4>
 6ab4b88:	483fe726 	beq	r9,zero,6ab4b28 <__floatunsidf+0x38>
 6ab4b8c:	10bfff44 	addi	r2,r2,-3
 6ab4b90:	10002e16 	blt	r2,zero,6ab4c4c <__floatunsidf+0x15c>
 6ab4b94:	b0a2983a 	sll	r17,r22,r2
 6ab4b98:	0021883a 	mov	r16,zero
 6ab4b9c:	d8800217 	ldw	r2,8(sp)
 6ab4ba0:	dc400415 	stw	r17,16(sp)
 6ab4ba4:	dc000315 	stw	r16,12(sp)
 6ab4ba8:	1245c83a 	sub	r2,r2,r9
 6ab4bac:	d8800215 	stw	r2,8(sp)
 6ab4bb0:	003fdd06 	br	6ab4b28 <__floatunsidf+0x38>
 6ab4bb4:	0255c83a 	sub	r10,zero,r9
 6ab4bb8:	51bff804 	addi	r6,r10,-32
 6ab4bbc:	30001b16 	blt	r6,zero,6ab4c2c <__floatunsidf+0x13c>
 6ab4bc0:	b9a8d83a 	srl	r20,r23,r6
 6ab4bc4:	002b883a 	mov	r21,zero
 6ab4bc8:	000f883a 	mov	r7,zero
 6ab4bcc:	01000044 	movi	r4,1
 6ab4bd0:	0011883a 	mov	r8,zero
 6ab4bd4:	30002516 	blt	r6,zero,6ab4c6c <__floatunsidf+0x17c>
 6ab4bd8:	21a6983a 	sll	r19,r4,r6
 6ab4bdc:	0025883a 	mov	r18,zero
 6ab4be0:	00bfffc4 	movi	r2,-1
 6ab4be4:	9089883a 	add	r4,r18,r2
 6ab4be8:	988b883a 	add	r5,r19,r2
 6ab4bec:	248d803a 	cmpltu	r6,r4,r18
 6ab4bf0:	314b883a 	add	r5,r6,r5
 6ab4bf4:	b104703a 	and	r2,r22,r4
 6ab4bf8:	b946703a 	and	r3,r23,r5
 6ab4bfc:	10c4b03a 	or	r2,r2,r3
 6ab4c00:	10000226 	beq	r2,zero,6ab4c0c <__floatunsidf+0x11c>
 6ab4c04:	01c00044 	movi	r7,1
 6ab4c08:	0011883a 	mov	r8,zero
 6ab4c0c:	d9000217 	ldw	r4,8(sp)
 6ab4c10:	a1c4b03a 	or	r2,r20,r7
 6ab4c14:	aa06b03a 	or	r3,r21,r8
 6ab4c18:	2249c83a 	sub	r4,r4,r9
 6ab4c1c:	d8c00415 	stw	r3,16(sp)
 6ab4c20:	d9000215 	stw	r4,8(sp)
 6ab4c24:	d8800315 	stw	r2,12(sp)
 6ab4c28:	003fbf06 	br	6ab4b28 <__floatunsidf+0x38>
 6ab4c2c:	bdc7883a 	add	r3,r23,r23
 6ab4c30:	008007c4 	movi	r2,31
 6ab4c34:	1285c83a 	sub	r2,r2,r10
 6ab4c38:	1886983a 	sll	r3,r3,r2
 6ab4c3c:	b2a8d83a 	srl	r20,r22,r10
 6ab4c40:	baaad83a 	srl	r21,r23,r10
 6ab4c44:	1d28b03a 	or	r20,r3,r20
 6ab4c48:	003fdf06 	br	6ab4bc8 <__floatunsidf+0xd8>
 6ab4c4c:	b006d07a 	srli	r3,r22,1
 6ab4c50:	008007c4 	movi	r2,31
 6ab4c54:	1245c83a 	sub	r2,r2,r9
 6ab4c58:	1886d83a 	srl	r3,r3,r2
 6ab4c5c:	ba62983a 	sll	r17,r23,r9
 6ab4c60:	b260983a 	sll	r16,r22,r9
 6ab4c64:	1c62b03a 	or	r17,r3,r17
 6ab4c68:	003fcc06 	br	6ab4b9c <__floatunsidf+0xac>
 6ab4c6c:	2006d07a 	srli	r3,r4,1
 6ab4c70:	008007c4 	movi	r2,31
 6ab4c74:	1285c83a 	sub	r2,r2,r10
 6ab4c78:	18a6d83a 	srl	r19,r3,r2
 6ab4c7c:	22a4983a 	sll	r18,r4,r10
 6ab4c80:	003fd706 	br	6ab4be0 <__floatunsidf+0xf0>

06ab4c84 <udivmodsi4>:
 6ab4c84:	29001b2e 	bgeu	r5,r4,6ab4cf4 <udivmodsi4+0x70>
 6ab4c88:	28001a16 	blt	r5,zero,6ab4cf4 <udivmodsi4+0x70>
 6ab4c8c:	00800044 	movi	r2,1
 6ab4c90:	0007883a 	mov	r3,zero
 6ab4c94:	01c007c4 	movi	r7,31
 6ab4c98:	00000306 	br	6ab4ca8 <udivmodsi4+0x24>
 6ab4c9c:	19c01326 	beq	r3,r7,6ab4cec <udivmodsi4+0x68>
 6ab4ca0:	18c00044 	addi	r3,r3,1
 6ab4ca4:	28000416 	blt	r5,zero,6ab4cb8 <udivmodsi4+0x34>
 6ab4ca8:	294b883a 	add	r5,r5,r5
 6ab4cac:	1085883a 	add	r2,r2,r2
 6ab4cb0:	293ffa36 	bltu	r5,r4,6ab4c9c <udivmodsi4+0x18>
 6ab4cb4:	10000d26 	beq	r2,zero,6ab4cec <udivmodsi4+0x68>
 6ab4cb8:	0007883a 	mov	r3,zero
 6ab4cbc:	21400236 	bltu	r4,r5,6ab4cc8 <udivmodsi4+0x44>
 6ab4cc0:	2149c83a 	sub	r4,r4,r5
 6ab4cc4:	1886b03a 	or	r3,r3,r2
 6ab4cc8:	1004d07a 	srli	r2,r2,1
 6ab4ccc:	280ad07a 	srli	r5,r5,1
 6ab4cd0:	103ffa1e 	bne	r2,zero,6ab4cbc <udivmodsi4+0x38>
 6ab4cd4:	30000226 	beq	r6,zero,6ab4ce0 <udivmodsi4+0x5c>
 6ab4cd8:	2005883a 	mov	r2,r4
 6ab4cdc:	f800283a 	ret
 6ab4ce0:	1809883a 	mov	r4,r3
 6ab4ce4:	2005883a 	mov	r2,r4
 6ab4ce8:	f800283a 	ret
 6ab4cec:	0007883a 	mov	r3,zero
 6ab4cf0:	003ff806 	br	6ab4cd4 <udivmodsi4+0x50>
 6ab4cf4:	00800044 	movi	r2,1
 6ab4cf8:	0007883a 	mov	r3,zero
 6ab4cfc:	003fef06 	br	6ab4cbc <udivmodsi4+0x38>

06ab4d00 <__divsi3>:
 6ab4d00:	defffe04 	addi	sp,sp,-8
 6ab4d04:	dc000015 	stw	r16,0(sp)
 6ab4d08:	dfc00115 	stw	ra,4(sp)
 6ab4d0c:	0021883a 	mov	r16,zero
 6ab4d10:	20000c16 	blt	r4,zero,6ab4d44 <__divsi3+0x44>
 6ab4d14:	000d883a 	mov	r6,zero
 6ab4d18:	28000e16 	blt	r5,zero,6ab4d54 <__divsi3+0x54>
 6ab4d1c:	6ab4c840 	call	6ab4c84 <udivmodsi4>
 6ab4d20:	1007883a 	mov	r3,r2
 6ab4d24:	8005003a 	cmpeq	r2,r16,zero
 6ab4d28:	1000011e 	bne	r2,zero,6ab4d30 <__divsi3+0x30>
 6ab4d2c:	00c7c83a 	sub	r3,zero,r3
 6ab4d30:	1805883a 	mov	r2,r3
 6ab4d34:	dfc00117 	ldw	ra,4(sp)
 6ab4d38:	dc000017 	ldw	r16,0(sp)
 6ab4d3c:	dec00204 	addi	sp,sp,8
 6ab4d40:	f800283a 	ret
 6ab4d44:	0109c83a 	sub	r4,zero,r4
 6ab4d48:	04000044 	movi	r16,1
 6ab4d4c:	000d883a 	mov	r6,zero
 6ab4d50:	283ff20e 	bge	r5,zero,6ab4d1c <__divsi3+0x1c>
 6ab4d54:	014bc83a 	sub	r5,zero,r5
 6ab4d58:	8021003a 	cmpeq	r16,r16,zero
 6ab4d5c:	003fef06 	br	6ab4d1c <__divsi3+0x1c>

06ab4d60 <__modsi3>:
 6ab4d60:	deffff04 	addi	sp,sp,-4
 6ab4d64:	dfc00015 	stw	ra,0(sp)
 6ab4d68:	01800044 	movi	r6,1
 6ab4d6c:	2807883a 	mov	r3,r5
 6ab4d70:	20000416 	blt	r4,zero,6ab4d84 <__modsi3+0x24>
 6ab4d74:	28000c16 	blt	r5,zero,6ab4da8 <__modsi3+0x48>
 6ab4d78:	dfc00017 	ldw	ra,0(sp)
 6ab4d7c:	dec00104 	addi	sp,sp,4
 6ab4d80:	6ab4c841 	jmpi	6ab4c84 <udivmodsi4>
 6ab4d84:	0109c83a 	sub	r4,zero,r4
 6ab4d88:	28000b16 	blt	r5,zero,6ab4db8 <__modsi3+0x58>
 6ab4d8c:	180b883a 	mov	r5,r3
 6ab4d90:	01800044 	movi	r6,1
 6ab4d94:	6ab4c840 	call	6ab4c84 <udivmodsi4>
 6ab4d98:	0085c83a 	sub	r2,zero,r2
 6ab4d9c:	dfc00017 	ldw	ra,0(sp)
 6ab4da0:	dec00104 	addi	sp,sp,4
 6ab4da4:	f800283a 	ret
 6ab4da8:	014bc83a 	sub	r5,zero,r5
 6ab4dac:	dfc00017 	ldw	ra,0(sp)
 6ab4db0:	dec00104 	addi	sp,sp,4
 6ab4db4:	6ab4c841 	jmpi	6ab4c84 <udivmodsi4>
 6ab4db8:	0147c83a 	sub	r3,zero,r5
 6ab4dbc:	003ff306 	br	6ab4d8c <__modsi3+0x2c>

06ab4dc0 <__udivsi3>:
 6ab4dc0:	000d883a 	mov	r6,zero
 6ab4dc4:	6ab4c841 	jmpi	6ab4c84 <udivmodsi4>

06ab4dc8 <__umodsi3>:
 6ab4dc8:	01800044 	movi	r6,1
 6ab4dcc:	6ab4c841 	jmpi	6ab4c84 <udivmodsi4>

06ab4dd0 <__muldi3>:
 6ab4dd0:	2011883a 	mov	r8,r4
 6ab4dd4:	427fffcc 	andi	r9,r8,65535
 6ab4dd8:	4018d43a 	srli	r12,r8,16
 6ab4ddc:	32bfffcc 	andi	r10,r6,65535
 6ab4de0:	3016d43a 	srli	r11,r6,16
 6ab4de4:	4a85383a 	mul	r2,r9,r10
 6ab4de8:	6295383a 	mul	r10,r12,r10
 6ab4dec:	4ad3383a 	mul	r9,r9,r11
 6ab4df0:	113fffcc 	andi	r4,r2,65535
 6ab4df4:	1004d43a 	srli	r2,r2,16
 6ab4df8:	4a93883a 	add	r9,r9,r10
 6ab4dfc:	3807883a 	mov	r3,r7
 6ab4e00:	1245883a 	add	r2,r2,r9
 6ab4e04:	280f883a 	mov	r7,r5
 6ab4e08:	180b883a 	mov	r5,r3
 6ab4e0c:	1006943a 	slli	r3,r2,16
 6ab4e10:	defffd04 	addi	sp,sp,-12
 6ab4e14:	dc800215 	stw	r18,8(sp)
 6ab4e18:	1907883a 	add	r3,r3,r4
 6ab4e1c:	dc400115 	stw	r17,4(sp)
 6ab4e20:	dc000015 	stw	r16,0(sp)
 6ab4e24:	4165383a 	mul	r18,r8,r5
 6ab4e28:	31e3383a 	mul	r17,r6,r7
 6ab4e2c:	1012d43a 	srli	r9,r2,16
 6ab4e30:	62d9383a 	mul	r12,r12,r11
 6ab4e34:	181f883a 	mov	r15,r3
 6ab4e38:	1280022e 	bgeu	r2,r10,6ab4e44 <__muldi3+0x74>
 6ab4e3c:	00800074 	movhi	r2,1
 6ab4e40:	6099883a 	add	r12,r12,r2
 6ab4e44:	624d883a 	add	r6,r12,r9
 6ab4e48:	9187883a 	add	r3,r18,r6
 6ab4e4c:	88c7883a 	add	r3,r17,r3
 6ab4e50:	7805883a 	mov	r2,r15
 6ab4e54:	dc800217 	ldw	r18,8(sp)
 6ab4e58:	dc400117 	ldw	r17,4(sp)
 6ab4e5c:	dc000017 	ldw	r16,0(sp)
 6ab4e60:	dec00304 	addi	sp,sp,12
 6ab4e64:	f800283a 	ret

06ab4e68 <__clzsi2>:
 6ab4e68:	00bfffd4 	movui	r2,65535
 6ab4e6c:	11000e36 	bltu	r2,r4,6ab4ea8 <__clzsi2+0x40>
 6ab4e70:	00803fc4 	movi	r2,255
 6ab4e74:	01400204 	movi	r5,8
 6ab4e78:	0007883a 	mov	r3,zero
 6ab4e7c:	11001036 	bltu	r2,r4,6ab4ec0 <__clzsi2+0x58>
 6ab4e80:	000b883a 	mov	r5,zero
 6ab4e84:	20c6d83a 	srl	r3,r4,r3
 6ab4e88:	0081ab34 	movhi	r2,1708
 6ab4e8c:	10a2cf04 	addi	r2,r2,-29892
 6ab4e90:	1887883a 	add	r3,r3,r2
 6ab4e94:	18800003 	ldbu	r2,0(r3)
 6ab4e98:	00c00804 	movi	r3,32
 6ab4e9c:	2885883a 	add	r2,r5,r2
 6ab4ea0:	1885c83a 	sub	r2,r3,r2
 6ab4ea4:	f800283a 	ret
 6ab4ea8:	01400404 	movi	r5,16
 6ab4eac:	00804034 	movhi	r2,256
 6ab4eb0:	10bfffc4 	addi	r2,r2,-1
 6ab4eb4:	2807883a 	mov	r3,r5
 6ab4eb8:	113ff22e 	bgeu	r2,r4,6ab4e84 <__clzsi2+0x1c>
 6ab4ebc:	01400604 	movi	r5,24
 6ab4ec0:	2807883a 	mov	r3,r5
 6ab4ec4:	20c6d83a 	srl	r3,r4,r3
 6ab4ec8:	0081ab34 	movhi	r2,1708
 6ab4ecc:	10a2cf04 	addi	r2,r2,-29892
 6ab4ed0:	1887883a 	add	r3,r3,r2
 6ab4ed4:	18800003 	ldbu	r2,0(r3)
 6ab4ed8:	00c00804 	movi	r3,32
 6ab4edc:	2885883a 	add	r2,r5,r2
 6ab4ee0:	1885c83a 	sub	r2,r3,r2
 6ab4ee4:	f800283a 	ret

06ab4ee8 <__pack_d>:
 6ab4ee8:	20c00017 	ldw	r3,0(r4)
 6ab4eec:	defffd04 	addi	sp,sp,-12
 6ab4ef0:	dc000015 	stw	r16,0(sp)
 6ab4ef4:	dc800215 	stw	r18,8(sp)
 6ab4ef8:	dc400115 	stw	r17,4(sp)
 6ab4efc:	00800044 	movi	r2,1
 6ab4f00:	22000317 	ldw	r8,12(r4)
 6ab4f04:	001f883a 	mov	r15,zero
 6ab4f08:	22400417 	ldw	r9,16(r4)
 6ab4f0c:	24000117 	ldw	r16,4(r4)
 6ab4f10:	10c0552e 	bgeu	r2,r3,6ab5068 <__pack_d+0x180>
 6ab4f14:	00800104 	movi	r2,4
 6ab4f18:	18804f26 	beq	r3,r2,6ab5058 <__pack_d+0x170>
 6ab4f1c:	00800084 	movi	r2,2
 6ab4f20:	18800226 	beq	r3,r2,6ab4f2c <__pack_d+0x44>
 6ab4f24:	4244b03a 	or	r2,r8,r9
 6ab4f28:	10001a1e 	bne	r2,zero,6ab4f94 <__pack_d+0xac>
 6ab4f2c:	000d883a 	mov	r6,zero
 6ab4f30:	000f883a 	mov	r7,zero
 6ab4f34:	0011883a 	mov	r8,zero
 6ab4f38:	00800434 	movhi	r2,16
 6ab4f3c:	10bfffc4 	addi	r2,r2,-1
 6ab4f40:	301d883a 	mov	r14,r6
 6ab4f44:	3884703a 	and	r2,r7,r2
 6ab4f48:	400a953a 	slli	r5,r8,20
 6ab4f4c:	79bffc2c 	andhi	r6,r15,65520
 6ab4f50:	308cb03a 	or	r6,r6,r2
 6ab4f54:	00e00434 	movhi	r3,32784
 6ab4f58:	18ffffc4 	addi	r3,r3,-1
 6ab4f5c:	800497fa 	slli	r2,r16,31
 6ab4f60:	30c6703a 	and	r3,r6,r3
 6ab4f64:	1946b03a 	or	r3,r3,r5
 6ab4f68:	01600034 	movhi	r5,32768
 6ab4f6c:	297fffc4 	addi	r5,r5,-1
 6ab4f70:	194a703a 	and	r5,r3,r5
 6ab4f74:	288ab03a 	or	r5,r5,r2
 6ab4f78:	2807883a 	mov	r3,r5
 6ab4f7c:	7005883a 	mov	r2,r14
 6ab4f80:	dc800217 	ldw	r18,8(sp)
 6ab4f84:	dc400117 	ldw	r17,4(sp)
 6ab4f88:	dc000017 	ldw	r16,0(sp)
 6ab4f8c:	dec00304 	addi	sp,sp,12
 6ab4f90:	f800283a 	ret
 6ab4f94:	21000217 	ldw	r4,8(r4)
 6ab4f98:	00bf0084 	movi	r2,-1022
 6ab4f9c:	20803f16 	blt	r4,r2,6ab509c <__pack_d+0x1b4>
 6ab4fa0:	0080ffc4 	movi	r2,1023
 6ab4fa4:	11002c16 	blt	r2,r4,6ab5058 <__pack_d+0x170>
 6ab4fa8:	00803fc4 	movi	r2,255
 6ab4fac:	408c703a 	and	r6,r8,r2
 6ab4fb0:	00802004 	movi	r2,128
 6ab4fb4:	0007883a 	mov	r3,zero
 6ab4fb8:	000f883a 	mov	r7,zero
 6ab4fbc:	2280ffc4 	addi	r10,r4,1023
 6ab4fc0:	30801e26 	beq	r6,r2,6ab503c <__pack_d+0x154>
 6ab4fc4:	00801fc4 	movi	r2,127
 6ab4fc8:	4089883a 	add	r4,r8,r2
 6ab4fcc:	220d803a 	cmpltu	r6,r4,r8
 6ab4fd0:	324d883a 	add	r6,r6,r9
 6ab4fd4:	2011883a 	mov	r8,r4
 6ab4fd8:	3013883a 	mov	r9,r6
 6ab4fdc:	00880034 	movhi	r2,8192
 6ab4fe0:	10bfffc4 	addi	r2,r2,-1
 6ab4fe4:	12400d36 	bltu	r2,r9,6ab501c <__pack_d+0x134>
 6ab4fe8:	4804963a 	slli	r2,r9,24
 6ab4fec:	400cd23a 	srli	r6,r8,8
 6ab4ff0:	480ed23a 	srli	r7,r9,8
 6ab4ff4:	013fffc4 	movi	r4,-1
 6ab4ff8:	118cb03a 	or	r6,r2,r6
 6ab4ffc:	01400434 	movhi	r5,16
 6ab5000:	297fffc4 	addi	r5,r5,-1
 6ab5004:	3104703a 	and	r2,r6,r4
 6ab5008:	3946703a 	and	r3,r7,r5
 6ab500c:	5201ffcc 	andi	r8,r10,2047
 6ab5010:	100d883a 	mov	r6,r2
 6ab5014:	180f883a 	mov	r7,r3
 6ab5018:	003fc706 	br	6ab4f38 <__pack_d+0x50>
 6ab501c:	480897fa 	slli	r4,r9,31
 6ab5020:	4004d07a 	srli	r2,r8,1
 6ab5024:	4806d07a 	srli	r3,r9,1
 6ab5028:	52800044 	addi	r10,r10,1
 6ab502c:	2084b03a 	or	r2,r4,r2
 6ab5030:	1011883a 	mov	r8,r2
 6ab5034:	1813883a 	mov	r9,r3
 6ab5038:	003feb06 	br	6ab4fe8 <__pack_d+0x100>
 6ab503c:	383fe11e 	bne	r7,zero,6ab4fc4 <__pack_d+0xdc>
 6ab5040:	01004004 	movi	r4,256
 6ab5044:	4104703a 	and	r2,r8,r4
 6ab5048:	10c4b03a 	or	r2,r2,r3
 6ab504c:	103fe326 	beq	r2,zero,6ab4fdc <__pack_d+0xf4>
 6ab5050:	3005883a 	mov	r2,r6
 6ab5054:	003fdc06 	br	6ab4fc8 <__pack_d+0xe0>
 6ab5058:	000d883a 	mov	r6,zero
 6ab505c:	000f883a 	mov	r7,zero
 6ab5060:	0201ffc4 	movi	r8,2047
 6ab5064:	003fb406 	br	6ab4f38 <__pack_d+0x50>
 6ab5068:	0005883a 	mov	r2,zero
 6ab506c:	00c00234 	movhi	r3,8
 6ab5070:	408cb03a 	or	r6,r8,r2
 6ab5074:	48ceb03a 	or	r7,r9,r3
 6ab5078:	013fffc4 	movi	r4,-1
 6ab507c:	01400434 	movhi	r5,16
 6ab5080:	297fffc4 	addi	r5,r5,-1
 6ab5084:	3104703a 	and	r2,r6,r4
 6ab5088:	3946703a 	and	r3,r7,r5
 6ab508c:	100d883a 	mov	r6,r2
 6ab5090:	180f883a 	mov	r7,r3
 6ab5094:	0201ffc4 	movi	r8,2047
 6ab5098:	003fa706 	br	6ab4f38 <__pack_d+0x50>
 6ab509c:	1109c83a 	sub	r4,r2,r4
 6ab50a0:	00800e04 	movi	r2,56
 6ab50a4:	11004316 	blt	r2,r4,6ab51b4 <__pack_d+0x2cc>
 6ab50a8:	21fff804 	addi	r7,r4,-32
 6ab50ac:	38004516 	blt	r7,zero,6ab51c4 <__pack_d+0x2dc>
 6ab50b0:	49d8d83a 	srl	r12,r9,r7
 6ab50b4:	001b883a 	mov	r13,zero
 6ab50b8:	0023883a 	mov	r17,zero
 6ab50bc:	01400044 	movi	r5,1
 6ab50c0:	0025883a 	mov	r18,zero
 6ab50c4:	38004716 	blt	r7,zero,6ab51e4 <__pack_d+0x2fc>
 6ab50c8:	29d6983a 	sll	r11,r5,r7
 6ab50cc:	0015883a 	mov	r10,zero
 6ab50d0:	00bfffc4 	movi	r2,-1
 6ab50d4:	5089883a 	add	r4,r10,r2
 6ab50d8:	588b883a 	add	r5,r11,r2
 6ab50dc:	228d803a 	cmpltu	r6,r4,r10
 6ab50e0:	314b883a 	add	r5,r6,r5
 6ab50e4:	4104703a 	and	r2,r8,r4
 6ab50e8:	4946703a 	and	r3,r9,r5
 6ab50ec:	10c4b03a 	or	r2,r2,r3
 6ab50f0:	10000226 	beq	r2,zero,6ab50fc <__pack_d+0x214>
 6ab50f4:	04400044 	movi	r17,1
 6ab50f8:	0025883a 	mov	r18,zero
 6ab50fc:	00803fc4 	movi	r2,255
 6ab5100:	644eb03a 	or	r7,r12,r17
 6ab5104:	3892703a 	and	r9,r7,r2
 6ab5108:	00802004 	movi	r2,128
 6ab510c:	6c90b03a 	or	r8,r13,r18
 6ab5110:	0015883a 	mov	r10,zero
 6ab5114:	48801626 	beq	r9,r2,6ab5170 <__pack_d+0x288>
 6ab5118:	01001fc4 	movi	r4,127
 6ab511c:	3905883a 	add	r2,r7,r4
 6ab5120:	11cd803a 	cmpltu	r6,r2,r7
 6ab5124:	320d883a 	add	r6,r6,r8
 6ab5128:	100f883a 	mov	r7,r2
 6ab512c:	00840034 	movhi	r2,4096
 6ab5130:	10bfffc4 	addi	r2,r2,-1
 6ab5134:	3011883a 	mov	r8,r6
 6ab5138:	0007883a 	mov	r3,zero
 6ab513c:	11801b36 	bltu	r2,r6,6ab51ac <__pack_d+0x2c4>
 6ab5140:	4004963a 	slli	r2,r8,24
 6ab5144:	3808d23a 	srli	r4,r7,8
 6ab5148:	400ad23a 	srli	r5,r8,8
 6ab514c:	1813883a 	mov	r9,r3
 6ab5150:	1108b03a 	or	r4,r2,r4
 6ab5154:	00bfffc4 	movi	r2,-1
 6ab5158:	00c00434 	movhi	r3,16
 6ab515c:	18ffffc4 	addi	r3,r3,-1
 6ab5160:	208c703a 	and	r6,r4,r2
 6ab5164:	28ce703a 	and	r7,r5,r3
 6ab5168:	4a01ffcc 	andi	r8,r9,2047
 6ab516c:	003f7206 	br	6ab4f38 <__pack_d+0x50>
 6ab5170:	503fe91e 	bne	r10,zero,6ab5118 <__pack_d+0x230>
 6ab5174:	01004004 	movi	r4,256
 6ab5178:	3904703a 	and	r2,r7,r4
 6ab517c:	0007883a 	mov	r3,zero
 6ab5180:	10c4b03a 	or	r2,r2,r3
 6ab5184:	10000626 	beq	r2,zero,6ab51a0 <__pack_d+0x2b8>
 6ab5188:	3a45883a 	add	r2,r7,r9
 6ab518c:	11cd803a 	cmpltu	r6,r2,r7
 6ab5190:	320d883a 	add	r6,r6,r8
 6ab5194:	100f883a 	mov	r7,r2
 6ab5198:	3011883a 	mov	r8,r6
 6ab519c:	0007883a 	mov	r3,zero
 6ab51a0:	00840034 	movhi	r2,4096
 6ab51a4:	10bfffc4 	addi	r2,r2,-1
 6ab51a8:	123fe52e 	bgeu	r2,r8,6ab5140 <__pack_d+0x258>
 6ab51ac:	00c00044 	movi	r3,1
 6ab51b0:	003fe306 	br	6ab5140 <__pack_d+0x258>
 6ab51b4:	0009883a 	mov	r4,zero
 6ab51b8:	0013883a 	mov	r9,zero
 6ab51bc:	000b883a 	mov	r5,zero
 6ab51c0:	003fe406 	br	6ab5154 <__pack_d+0x26c>
 6ab51c4:	4a47883a 	add	r3,r9,r9
 6ab51c8:	008007c4 	movi	r2,31
 6ab51cc:	1105c83a 	sub	r2,r2,r4
 6ab51d0:	1886983a 	sll	r3,r3,r2
 6ab51d4:	4118d83a 	srl	r12,r8,r4
 6ab51d8:	491ad83a 	srl	r13,r9,r4
 6ab51dc:	1b18b03a 	or	r12,r3,r12
 6ab51e0:	003fb506 	br	6ab50b8 <__pack_d+0x1d0>
 6ab51e4:	2806d07a 	srli	r3,r5,1
 6ab51e8:	008007c4 	movi	r2,31
 6ab51ec:	1105c83a 	sub	r2,r2,r4
 6ab51f0:	1896d83a 	srl	r11,r3,r2
 6ab51f4:	2914983a 	sll	r10,r5,r4
 6ab51f8:	003fb506 	br	6ab50d0 <__pack_d+0x1e8>

06ab51fc <__unpack_d>:
 6ab51fc:	20c00117 	ldw	r3,4(r4)
 6ab5200:	22400017 	ldw	r9,0(r4)
 6ab5204:	00800434 	movhi	r2,16
 6ab5208:	10bfffc4 	addi	r2,r2,-1
 6ab520c:	1808d53a 	srli	r4,r3,20
 6ab5210:	180cd7fa 	srli	r6,r3,31
 6ab5214:	1894703a 	and	r10,r3,r2
 6ab5218:	2201ffcc 	andi	r8,r4,2047
 6ab521c:	281b883a 	mov	r13,r5
 6ab5220:	4817883a 	mov	r11,r9
 6ab5224:	29800115 	stw	r6,4(r5)
 6ab5228:	5019883a 	mov	r12,r10
 6ab522c:	40001e1e 	bne	r8,zero,6ab52a8 <__unpack_d+0xac>
 6ab5230:	4a84b03a 	or	r2,r9,r10
 6ab5234:	10001926 	beq	r2,zero,6ab529c <__unpack_d+0xa0>
 6ab5238:	4804d63a 	srli	r2,r9,24
 6ab523c:	500c923a 	slli	r6,r10,8
 6ab5240:	013f0084 	movi	r4,-1022
 6ab5244:	00c40034 	movhi	r3,4096
 6ab5248:	18ffffc4 	addi	r3,r3,-1
 6ab524c:	118cb03a 	or	r6,r2,r6
 6ab5250:	008000c4 	movi	r2,3
 6ab5254:	480a923a 	slli	r5,r9,8
 6ab5258:	68800015 	stw	r2,0(r13)
 6ab525c:	69000215 	stw	r4,8(r13)
 6ab5260:	19800b36 	bltu	r3,r6,6ab5290 <__unpack_d+0x94>
 6ab5264:	200f883a 	mov	r7,r4
 6ab5268:	1811883a 	mov	r8,r3
 6ab526c:	2945883a 	add	r2,r5,r5
 6ab5270:	1149803a 	cmpltu	r4,r2,r5
 6ab5274:	3187883a 	add	r3,r6,r6
 6ab5278:	20c9883a 	add	r4,r4,r3
 6ab527c:	100b883a 	mov	r5,r2
 6ab5280:	200d883a 	mov	r6,r4
 6ab5284:	39ffffc4 	addi	r7,r7,-1
 6ab5288:	413ff82e 	bgeu	r8,r4,6ab526c <__unpack_d+0x70>
 6ab528c:	69c00215 	stw	r7,8(r13)
 6ab5290:	69800415 	stw	r6,16(r13)
 6ab5294:	69400315 	stw	r5,12(r13)
 6ab5298:	f800283a 	ret
 6ab529c:	00800084 	movi	r2,2
 6ab52a0:	28800015 	stw	r2,0(r5)
 6ab52a4:	f800283a 	ret
 6ab52a8:	0081ffc4 	movi	r2,2047
 6ab52ac:	40800f26 	beq	r8,r2,6ab52ec <__unpack_d+0xf0>
 6ab52b0:	480cd63a 	srli	r6,r9,24
 6ab52b4:	5006923a 	slli	r3,r10,8
 6ab52b8:	4804923a 	slli	r2,r9,8
 6ab52bc:	0009883a 	mov	r4,zero
 6ab52c0:	30c6b03a 	or	r3,r6,r3
 6ab52c4:	01440034 	movhi	r5,4096
 6ab52c8:	110cb03a 	or	r6,r2,r4
 6ab52cc:	423f0044 	addi	r8,r8,-1023
 6ab52d0:	194eb03a 	or	r7,r3,r5
 6ab52d4:	008000c4 	movi	r2,3
 6ab52d8:	69c00415 	stw	r7,16(r13)
 6ab52dc:	6a000215 	stw	r8,8(r13)
 6ab52e0:	68800015 	stw	r2,0(r13)
 6ab52e4:	69800315 	stw	r6,12(r13)
 6ab52e8:	f800283a 	ret
 6ab52ec:	4a84b03a 	or	r2,r9,r10
 6ab52f0:	1000031e 	bne	r2,zero,6ab5300 <__unpack_d+0x104>
 6ab52f4:	00800104 	movi	r2,4
 6ab52f8:	28800015 	stw	r2,0(r5)
 6ab52fc:	f800283a 	ret
 6ab5300:	0009883a 	mov	r4,zero
 6ab5304:	01400234 	movhi	r5,8
 6ab5308:	4904703a 	and	r2,r9,r4
 6ab530c:	5146703a 	and	r3,r10,r5
 6ab5310:	10c4b03a 	or	r2,r2,r3
 6ab5314:	10000526 	beq	r2,zero,6ab532c <__unpack_d+0x130>
 6ab5318:	00800044 	movi	r2,1
 6ab531c:	68800015 	stw	r2,0(r13)
 6ab5320:	6b000415 	stw	r12,16(r13)
 6ab5324:	6ac00315 	stw	r11,12(r13)
 6ab5328:	f800283a 	ret
 6ab532c:	68000015 	stw	zero,0(r13)
 6ab5330:	003ffb06 	br	6ab5320 <__unpack_d+0x124>

06ab5334 <__fpcmp_parts_d>:
 6ab5334:	21800017 	ldw	r6,0(r4)
 6ab5338:	00c00044 	movi	r3,1
 6ab533c:	19800a2e 	bgeu	r3,r6,6ab5368 <__fpcmp_parts_d+0x34>
 6ab5340:	28800017 	ldw	r2,0(r5)
 6ab5344:	1880082e 	bgeu	r3,r2,6ab5368 <__fpcmp_parts_d+0x34>
 6ab5348:	00c00104 	movi	r3,4
 6ab534c:	30c02626 	beq	r6,r3,6ab53e8 <__fpcmp_parts_d+0xb4>
 6ab5350:	10c02226 	beq	r2,r3,6ab53dc <__fpcmp_parts_d+0xa8>
 6ab5354:	00c00084 	movi	r3,2
 6ab5358:	30c00526 	beq	r6,r3,6ab5370 <__fpcmp_parts_d+0x3c>
 6ab535c:	10c0071e 	bne	r2,r3,6ab537c <__fpcmp_parts_d+0x48>
 6ab5360:	20800117 	ldw	r2,4(r4)
 6ab5364:	1000091e 	bne	r2,zero,6ab538c <__fpcmp_parts_d+0x58>
 6ab5368:	00800044 	movi	r2,1
 6ab536c:	f800283a 	ret
 6ab5370:	10c01a1e 	bne	r2,r3,6ab53dc <__fpcmp_parts_d+0xa8>
 6ab5374:	0005883a 	mov	r2,zero
 6ab5378:	f800283a 	ret
 6ab537c:	22000117 	ldw	r8,4(r4)
 6ab5380:	28800117 	ldw	r2,4(r5)
 6ab5384:	40800326 	beq	r8,r2,6ab5394 <__fpcmp_parts_d+0x60>
 6ab5388:	403ff726 	beq	r8,zero,6ab5368 <__fpcmp_parts_d+0x34>
 6ab538c:	00bfffc4 	movi	r2,-1
 6ab5390:	f800283a 	ret
 6ab5394:	20c00217 	ldw	r3,8(r4)
 6ab5398:	28800217 	ldw	r2,8(r5)
 6ab539c:	10fffa16 	blt	r2,r3,6ab5388 <__fpcmp_parts_d+0x54>
 6ab53a0:	18800916 	blt	r3,r2,6ab53c8 <__fpcmp_parts_d+0x94>
 6ab53a4:	21c00417 	ldw	r7,16(r4)
 6ab53a8:	28c00417 	ldw	r3,16(r5)
 6ab53ac:	21800317 	ldw	r6,12(r4)
 6ab53b0:	28800317 	ldw	r2,12(r5)
 6ab53b4:	19fff436 	bltu	r3,r7,6ab5388 <__fpcmp_parts_d+0x54>
 6ab53b8:	38c00526 	beq	r7,r3,6ab53d0 <__fpcmp_parts_d+0x9c>
 6ab53bc:	38c00236 	bltu	r7,r3,6ab53c8 <__fpcmp_parts_d+0x94>
 6ab53c0:	19ffec1e 	bne	r3,r7,6ab5374 <__fpcmp_parts_d+0x40>
 6ab53c4:	30bfeb2e 	bgeu	r6,r2,6ab5374 <__fpcmp_parts_d+0x40>
 6ab53c8:	403fe71e 	bne	r8,zero,6ab5368 <__fpcmp_parts_d+0x34>
 6ab53cc:	003fef06 	br	6ab538c <__fpcmp_parts_d+0x58>
 6ab53d0:	11bffa2e 	bgeu	r2,r6,6ab53bc <__fpcmp_parts_d+0x88>
 6ab53d4:	403fe426 	beq	r8,zero,6ab5368 <__fpcmp_parts_d+0x34>
 6ab53d8:	003fec06 	br	6ab538c <__fpcmp_parts_d+0x58>
 6ab53dc:	28800117 	ldw	r2,4(r5)
 6ab53e0:	103fe11e 	bne	r2,zero,6ab5368 <__fpcmp_parts_d+0x34>
 6ab53e4:	003fe906 	br	6ab538c <__fpcmp_parts_d+0x58>
 6ab53e8:	11bfdd1e 	bne	r2,r6,6ab5360 <__fpcmp_parts_d+0x2c>
 6ab53ec:	28c00117 	ldw	r3,4(r5)
 6ab53f0:	20800117 	ldw	r2,4(r4)
 6ab53f4:	1885c83a 	sub	r2,r3,r2
 6ab53f8:	f800283a 	ret

06ab53fc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 6ab53fc:	defff804 	addi	sp,sp,-32
 6ab5400:	dfc00715 	stw	ra,28(sp)
 6ab5404:	df000615 	stw	fp,24(sp)
 6ab5408:	df000604 	addi	fp,sp,24
 6ab540c:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 6ab5410:	e0bffc17 	ldw	r2,-16(fp)
 6ab5414:	1004803a 	cmplt	r2,r2,zero
 6ab5418:	1000081e 	bne	r2,zero,6ab543c <close+0x40>
 6ab541c:	e0bffc17 	ldw	r2,-16(fp)
 6ab5420:	10800324 	muli	r2,r2,12
 6ab5424:	1007883a 	mov	r3,r2
 6ab5428:	0081ab34 	movhi	r2,1708
 6ab542c:	10a52e04 	addi	r2,r2,-27464
 6ab5430:	1887883a 	add	r3,r3,r2
 6ab5434:	e0ffff15 	stw	r3,-4(fp)
 6ab5438:	00000106 	br	6ab5440 <close+0x44>
 6ab543c:	e03fff15 	stw	zero,-4(fp)
 6ab5440:	e0bfff17 	ldw	r2,-4(fp)
 6ab5444:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
 6ab5448:	e0bffb17 	ldw	r2,-20(fp)
 6ab544c:	1005003a 	cmpeq	r2,r2,zero
 6ab5450:	10001d1e 	bne	r2,zero,6ab54c8 <close+0xcc>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 6ab5454:	e0bffb17 	ldw	r2,-20(fp)
 6ab5458:	10800017 	ldw	r2,0(r2)
 6ab545c:	10800417 	ldw	r2,16(r2)
 6ab5460:	1005003a 	cmpeq	r2,r2,zero
 6ab5464:	1000071e 	bne	r2,zero,6ab5484 <close+0x88>
 6ab5468:	e0bffb17 	ldw	r2,-20(fp)
 6ab546c:	10800017 	ldw	r2,0(r2)
 6ab5470:	10800417 	ldw	r2,16(r2)
 6ab5474:	e13ffb17 	ldw	r4,-20(fp)
 6ab5478:	103ee83a 	callr	r2
 6ab547c:	e0bffe15 	stw	r2,-8(fp)
 6ab5480:	00000106 	br	6ab5488 <close+0x8c>
 6ab5484:	e03ffe15 	stw	zero,-8(fp)
 6ab5488:	e0bffe17 	ldw	r2,-8(fp)
 6ab548c:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 6ab5490:	e13ffc17 	ldw	r4,-16(fp)
 6ab5494:	6ab5f640 	call	6ab5f64 <alt_release_fd>
    if (rval < 0)
 6ab5498:	e0bffa17 	ldw	r2,-24(fp)
 6ab549c:	1004403a 	cmpge	r2,r2,zero
 6ab54a0:	1000071e 	bne	r2,zero,6ab54c0 <close+0xc4>
    {
      ALT_ERRNO = -rval;
 6ab54a4:	6ab54f80 	call	6ab54f8 <alt_get_errno>
 6ab54a8:	e0fffa17 	ldw	r3,-24(fp)
 6ab54ac:	00c7c83a 	sub	r3,zero,r3
 6ab54b0:	10c00015 	stw	r3,0(r2)
      return -1;
 6ab54b4:	00bfffc4 	movi	r2,-1
 6ab54b8:	e0bffd15 	stw	r2,-12(fp)
 6ab54bc:	00000806 	br	6ab54e0 <close+0xe4>
    }
    return 0;
 6ab54c0:	e03ffd15 	stw	zero,-12(fp)
 6ab54c4:	00000606 	br	6ab54e0 <close+0xe4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 6ab54c8:	6ab54f80 	call	6ab54f8 <alt_get_errno>
 6ab54cc:	1007883a 	mov	r3,r2
 6ab54d0:	00801444 	movi	r2,81
 6ab54d4:	18800015 	stw	r2,0(r3)
    return -1;
 6ab54d8:	00bfffc4 	movi	r2,-1
 6ab54dc:	e0bffd15 	stw	r2,-12(fp)
 6ab54e0:	e0bffd17 	ldw	r2,-12(fp)
  }
}
 6ab54e4:	e037883a 	mov	sp,fp
 6ab54e8:	dfc00117 	ldw	ra,4(sp)
 6ab54ec:	df000017 	ldw	fp,0(sp)
 6ab54f0:	dec00204 	addi	sp,sp,8
 6ab54f4:	f800283a 	ret

06ab54f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 6ab54f8:	defffd04 	addi	sp,sp,-12
 6ab54fc:	dfc00215 	stw	ra,8(sp)
 6ab5500:	df000115 	stw	fp,4(sp)
 6ab5504:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 6ab5508:	0081ab34 	movhi	r2,1708
 6ab550c:	10a9bb04 	addi	r2,r2,-22804
 6ab5510:	10800017 	ldw	r2,0(r2)
 6ab5514:	1005003a 	cmpeq	r2,r2,zero
 6ab5518:	1000061e 	bne	r2,zero,6ab5534 <alt_get_errno+0x3c>
 6ab551c:	0081ab34 	movhi	r2,1708
 6ab5520:	10a9bb04 	addi	r2,r2,-22804
 6ab5524:	10800017 	ldw	r2,0(r2)
 6ab5528:	103ee83a 	callr	r2
 6ab552c:	e0bfff15 	stw	r2,-4(fp)
 6ab5530:	00000306 	br	6ab5540 <alt_get_errno+0x48>
 6ab5534:	0081ab34 	movhi	r2,1708
 6ab5538:	10b08504 	addi	r2,r2,-15852
 6ab553c:	e0bfff15 	stw	r2,-4(fp)
 6ab5540:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab5544:	e037883a 	mov	sp,fp
 6ab5548:	dfc00117 	ldw	ra,4(sp)
 6ab554c:	df000017 	ldw	fp,0(sp)
 6ab5550:	dec00204 	addi	sp,sp,8
 6ab5554:	f800283a 	ret

06ab5558 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 6ab5558:	defffc04 	addi	sp,sp,-16
 6ab555c:	df000315 	stw	fp,12(sp)
 6ab5560:	df000304 	addi	fp,sp,12
 6ab5564:	e13ffd15 	stw	r4,-12(fp)
 6ab5568:	e17ffe15 	stw	r5,-8(fp)
 6ab556c:	e1bfff15 	stw	r6,-4(fp)
  return len;
 6ab5570:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab5574:	e037883a 	mov	sp,fp
 6ab5578:	df000017 	ldw	fp,0(sp)
 6ab557c:	dec00104 	addi	sp,sp,4
 6ab5580:	f800283a 	ret

06ab5584 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
 6ab5584:	defffd04 	addi	sp,sp,-12
 6ab5588:	df000215 	stw	fp,8(sp)
 6ab558c:	df000204 	addi	fp,sp,8
 6ab5590:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
 6ab5594:	e0bfff17 	ldw	r2,-4(fp)
 6ab5598:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 6ab559c:	e0bffe17 	ldw	r2,-8(fp)
 6ab55a0:	1005003a 	cmpeq	r2,r2,zero
 6ab55a4:	1000021e 	bne	r2,zero,6ab55b0 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
 6ab55a8:	002af070 	cmpltui	zero,zero,43969
 6ab55ac:	00000106 	br	6ab55b4 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
 6ab55b0:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
 6ab55b4:	e037883a 	mov	sp,fp
 6ab55b8:	df000017 	ldw	fp,0(sp)
 6ab55bc:	dec00104 	addi	sp,sp,4
 6ab55c0:	f800283a 	ret

06ab55c4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 6ab55c4:	defffd04 	addi	sp,sp,-12
 6ab55c8:	dfc00215 	stw	ra,8(sp)
 6ab55cc:	df000115 	stw	fp,4(sp)
 6ab55d0:	df000104 	addi	fp,sp,4
 6ab55d4:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
 6ab55d8:	e13fff17 	ldw	r4,-4(fp)
 6ab55dc:	6ab55840 	call	6ab5584 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 6ab55e0:	003fff06 	br	6ab55e0 <_exit+0x1c>

06ab55e4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 6ab55e4:	defff904 	addi	sp,sp,-28
 6ab55e8:	dfc00615 	stw	ra,24(sp)
 6ab55ec:	df000515 	stw	fp,20(sp)
 6ab55f0:	df000504 	addi	fp,sp,20
 6ab55f4:	e13ffc15 	stw	r4,-16(fp)
 6ab55f8:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 6ab55fc:	e0bffc17 	ldw	r2,-16(fp)
 6ab5600:	1004803a 	cmplt	r2,r2,zero
 6ab5604:	1000081e 	bne	r2,zero,6ab5628 <fstat+0x44>
 6ab5608:	e0bffc17 	ldw	r2,-16(fp)
 6ab560c:	10800324 	muli	r2,r2,12
 6ab5610:	1007883a 	mov	r3,r2
 6ab5614:	0081ab34 	movhi	r2,1708
 6ab5618:	10a52e04 	addi	r2,r2,-27464
 6ab561c:	1887883a 	add	r3,r3,r2
 6ab5620:	e0ffff15 	stw	r3,-4(fp)
 6ab5624:	00000106 	br	6ab562c <fstat+0x48>
 6ab5628:	e03fff15 	stw	zero,-4(fp)
 6ab562c:	e0bfff17 	ldw	r2,-4(fp)
 6ab5630:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 6ab5634:	e0bffb17 	ldw	r2,-20(fp)
 6ab5638:	1005003a 	cmpeq	r2,r2,zero
 6ab563c:	1000121e 	bne	r2,zero,6ab5688 <fstat+0xa4>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 6ab5640:	e0bffb17 	ldw	r2,-20(fp)
 6ab5644:	10800017 	ldw	r2,0(r2)
 6ab5648:	10800817 	ldw	r2,32(r2)
 6ab564c:	1005003a 	cmpeq	r2,r2,zero
 6ab5650:	1000081e 	bne	r2,zero,6ab5674 <fstat+0x90>
    {
      return fd->dev->fstat(fd, st);
 6ab5654:	e0bffb17 	ldw	r2,-20(fp)
 6ab5658:	10800017 	ldw	r2,0(r2)
 6ab565c:	10800817 	ldw	r2,32(r2)
 6ab5660:	e13ffb17 	ldw	r4,-20(fp)
 6ab5664:	e17ffd17 	ldw	r5,-12(fp)
 6ab5668:	103ee83a 	callr	r2
 6ab566c:	e0bffe15 	stw	r2,-8(fp)
 6ab5670:	00000b06 	br	6ab56a0 <fstat+0xbc>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 6ab5674:	e0fffd17 	ldw	r3,-12(fp)
 6ab5678:	00880004 	movi	r2,8192
 6ab567c:	18800115 	stw	r2,4(r3)
      return 0;
 6ab5680:	e03ffe15 	stw	zero,-8(fp)
 6ab5684:	00000606 	br	6ab56a0 <fstat+0xbc>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 6ab5688:	6ab56b80 	call	6ab56b8 <alt_get_errno>
 6ab568c:	1007883a 	mov	r3,r2
 6ab5690:	00801444 	movi	r2,81
 6ab5694:	18800015 	stw	r2,0(r3)
    return -1;
 6ab5698:	00bfffc4 	movi	r2,-1
 6ab569c:	e0bffe15 	stw	r2,-8(fp)
 6ab56a0:	e0bffe17 	ldw	r2,-8(fp)
  }
}
 6ab56a4:	e037883a 	mov	sp,fp
 6ab56a8:	dfc00117 	ldw	ra,4(sp)
 6ab56ac:	df000017 	ldw	fp,0(sp)
 6ab56b0:	dec00204 	addi	sp,sp,8
 6ab56b4:	f800283a 	ret

06ab56b8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 6ab56b8:	defffd04 	addi	sp,sp,-12
 6ab56bc:	dfc00215 	stw	ra,8(sp)
 6ab56c0:	df000115 	stw	fp,4(sp)
 6ab56c4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 6ab56c8:	0081ab34 	movhi	r2,1708
 6ab56cc:	10a9bb04 	addi	r2,r2,-22804
 6ab56d0:	10800017 	ldw	r2,0(r2)
 6ab56d4:	1005003a 	cmpeq	r2,r2,zero
 6ab56d8:	1000061e 	bne	r2,zero,6ab56f4 <alt_get_errno+0x3c>
 6ab56dc:	0081ab34 	movhi	r2,1708
 6ab56e0:	10a9bb04 	addi	r2,r2,-22804
 6ab56e4:	10800017 	ldw	r2,0(r2)
 6ab56e8:	103ee83a 	callr	r2
 6ab56ec:	e0bfff15 	stw	r2,-4(fp)
 6ab56f0:	00000306 	br	6ab5700 <alt_get_errno+0x48>
 6ab56f4:	0081ab34 	movhi	r2,1708
 6ab56f8:	10b08504 	addi	r2,r2,-15852
 6ab56fc:	e0bfff15 	stw	r2,-4(fp)
 6ab5700:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab5704:	e037883a 	mov	sp,fp
 6ab5708:	dfc00117 	ldw	ra,4(sp)
 6ab570c:	df000017 	ldw	fp,0(sp)
 6ab5710:	dec00204 	addi	sp,sp,8
 6ab5714:	f800283a 	ret

06ab5718 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 6ab5718:	deffeb04 	addi	sp,sp,-84
 6ab571c:	dfc01415 	stw	ra,80(sp)
 6ab5720:	df001315 	stw	fp,76(sp)
 6ab5724:	df001304 	addi	fp,sp,76
 6ab5728:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 6ab572c:	e0bffd17 	ldw	r2,-12(fp)
 6ab5730:	1004803a 	cmplt	r2,r2,zero
 6ab5734:	1000081e 	bne	r2,zero,6ab5758 <isatty+0x40>
 6ab5738:	e0bffd17 	ldw	r2,-12(fp)
 6ab573c:	10800324 	muli	r2,r2,12
 6ab5740:	1007883a 	mov	r3,r2
 6ab5744:	0081ab34 	movhi	r2,1708
 6ab5748:	10a52e04 	addi	r2,r2,-27464
 6ab574c:	1887883a 	add	r3,r3,r2
 6ab5750:	e0ffff15 	stw	r3,-4(fp)
 6ab5754:	00000106 	br	6ab575c <isatty+0x44>
 6ab5758:	e03fff15 	stw	zero,-4(fp)
 6ab575c:	e0bfff17 	ldw	r2,-4(fp)
 6ab5760:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
 6ab5764:	e0bfed17 	ldw	r2,-76(fp)
 6ab5768:	1005003a 	cmpeq	r2,r2,zero
 6ab576c:	10000f1e 	bne	r2,zero,6ab57ac <isatty+0x94>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 6ab5770:	e0bfed17 	ldw	r2,-76(fp)
 6ab5774:	10800017 	ldw	r2,0(r2)
 6ab5778:	10800817 	ldw	r2,32(r2)
 6ab577c:	1004c03a 	cmpne	r2,r2,zero
 6ab5780:	1000031e 	bne	r2,zero,6ab5790 <isatty+0x78>
    {
      return 1;
 6ab5784:	00800044 	movi	r2,1
 6ab5788:	e0bffe15 	stw	r2,-8(fp)
 6ab578c:	00000c06 	br	6ab57c0 <isatty+0xa8>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 6ab5790:	e17fee04 	addi	r5,fp,-72
 6ab5794:	e13ffd17 	ldw	r4,-12(fp)
 6ab5798:	6ab55e40 	call	6ab55e4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 6ab579c:	e0bfef17 	ldw	r2,-68(fp)
 6ab57a0:	10880020 	cmpeqi	r2,r2,8192
 6ab57a4:	e0bffe15 	stw	r2,-8(fp)
 6ab57a8:	00000506 	br	6ab57c0 <isatty+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 6ab57ac:	6ab57d80 	call	6ab57d8 <alt_get_errno>
 6ab57b0:	1007883a 	mov	r3,r2
 6ab57b4:	00801444 	movi	r2,81
 6ab57b8:	18800015 	stw	r2,0(r3)
    return 0;
 6ab57bc:	e03ffe15 	stw	zero,-8(fp)
 6ab57c0:	e0bffe17 	ldw	r2,-8(fp)
  }
}
 6ab57c4:	e037883a 	mov	sp,fp
 6ab57c8:	dfc00117 	ldw	ra,4(sp)
 6ab57cc:	df000017 	ldw	fp,0(sp)
 6ab57d0:	dec00204 	addi	sp,sp,8
 6ab57d4:	f800283a 	ret

06ab57d8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 6ab57d8:	defffd04 	addi	sp,sp,-12
 6ab57dc:	dfc00215 	stw	ra,8(sp)
 6ab57e0:	df000115 	stw	fp,4(sp)
 6ab57e4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 6ab57e8:	0081ab34 	movhi	r2,1708
 6ab57ec:	10a9bb04 	addi	r2,r2,-22804
 6ab57f0:	10800017 	ldw	r2,0(r2)
 6ab57f4:	1005003a 	cmpeq	r2,r2,zero
 6ab57f8:	1000061e 	bne	r2,zero,6ab5814 <alt_get_errno+0x3c>
 6ab57fc:	0081ab34 	movhi	r2,1708
 6ab5800:	10a9bb04 	addi	r2,r2,-22804
 6ab5804:	10800017 	ldw	r2,0(r2)
 6ab5808:	103ee83a 	callr	r2
 6ab580c:	e0bfff15 	stw	r2,-4(fp)
 6ab5810:	00000306 	br	6ab5820 <alt_get_errno+0x48>
 6ab5814:	0081ab34 	movhi	r2,1708
 6ab5818:	10b08504 	addi	r2,r2,-15852
 6ab581c:	e0bfff15 	stw	r2,-4(fp)
 6ab5820:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab5824:	e037883a 	mov	sp,fp
 6ab5828:	dfc00117 	ldw	ra,4(sp)
 6ab582c:	df000017 	ldw	fp,0(sp)
 6ab5830:	dec00204 	addi	sp,sp,8
 6ab5834:	f800283a 	ret

06ab5838 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 6ab5838:	defffe04 	addi	sp,sp,-8
 6ab583c:	dfc00115 	stw	ra,4(sp)
 6ab5840:	df000015 	stw	fp,0(sp)
 6ab5844:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 6ab5848:	0101ab34 	movhi	r4,1708
 6ab584c:	2129d204 	addi	r4,r4,-22712
 6ab5850:	0141ab34 	movhi	r5,1708
 6ab5854:	29631f04 	addi	r5,r5,-29572
 6ab5858:	0181ab34 	movhi	r6,1708
 6ab585c:	31a9d204 	addi	r6,r6,-22712
 6ab5860:	6ab58b80 	call	6ab58b8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 6ab5864:	0101aaf4 	movhi	r4,1707
 6ab5868:	212aa404 	addi	r4,r4,-21872
 6ab586c:	01420034 	movhi	r5,2048
 6ab5870:	29460804 	addi	r5,r5,6176
 6ab5874:	01820034 	movhi	r6,2048
 6ab5878:	31866d04 	addi	r6,r6,6580
 6ab587c:	6ab58b80 	call	6ab58b8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 6ab5880:	0101ab34 	movhi	r4,1708
 6ab5884:	21224204 	addi	r4,r4,-30456
 6ab5888:	0141ab34 	movhi	r5,1708
 6ab588c:	29624204 	addi	r5,r5,-30456
 6ab5890:	0181ab34 	movhi	r6,1708
 6ab5894:	31a31f04 	addi	r6,r6,-29572
 6ab5898:	6ab58b80 	call	6ab58b8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 6ab589c:	6ab7bc80 	call	6ab7bc8 <alt_dcache_flush_all>
  alt_icache_flush_all();
 6ab58a0:	6ab80bc0 	call	6ab80bc <alt_icache_flush_all>
}
 6ab58a4:	e037883a 	mov	sp,fp
 6ab58a8:	dfc00117 	ldw	ra,4(sp)
 6ab58ac:	df000017 	ldw	fp,0(sp)
 6ab58b0:	dec00204 	addi	sp,sp,8
 6ab58b4:	f800283a 	ret

06ab58b8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 6ab58b8:	defffc04 	addi	sp,sp,-16
 6ab58bc:	df000315 	stw	fp,12(sp)
 6ab58c0:	df000304 	addi	fp,sp,12
 6ab58c4:	e13ffd15 	stw	r4,-12(fp)
 6ab58c8:	e17ffe15 	stw	r5,-8(fp)
 6ab58cc:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 6ab58d0:	e0fffe17 	ldw	r3,-8(fp)
 6ab58d4:	e0bffd17 	ldw	r2,-12(fp)
 6ab58d8:	18800e26 	beq	r3,r2,6ab5914 <alt_load_section+0x5c>
  {
    while( to != end )
 6ab58dc:	00000a06 	br	6ab5908 <alt_load_section+0x50>
    {
      *to++ = *from++;
 6ab58e0:	e0bffd17 	ldw	r2,-12(fp)
 6ab58e4:	10c00017 	ldw	r3,0(r2)
 6ab58e8:	e0bffe17 	ldw	r2,-8(fp)
 6ab58ec:	10c00015 	stw	r3,0(r2)
 6ab58f0:	e0bffe17 	ldw	r2,-8(fp)
 6ab58f4:	10800104 	addi	r2,r2,4
 6ab58f8:	e0bffe15 	stw	r2,-8(fp)
 6ab58fc:	e0bffd17 	ldw	r2,-12(fp)
 6ab5900:	10800104 	addi	r2,r2,4
 6ab5904:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 6ab5908:	e0fffe17 	ldw	r3,-8(fp)
 6ab590c:	e0bfff17 	ldw	r2,-4(fp)
 6ab5910:	18bff31e 	bne	r3,r2,6ab58e0 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
 6ab5914:	e037883a 	mov	sp,fp
 6ab5918:	df000017 	ldw	fp,0(sp)
 6ab591c:	dec00104 	addi	sp,sp,4
 6ab5920:	f800283a 	ret

06ab5924 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 6ab5924:	defff804 	addi	sp,sp,-32
 6ab5928:	dfc00715 	stw	ra,28(sp)
 6ab592c:	df000615 	stw	fp,24(sp)
 6ab5930:	df000604 	addi	fp,sp,24
 6ab5934:	e13ffc15 	stw	r4,-16(fp)
 6ab5938:	e17ffd15 	stw	r5,-12(fp)
 6ab593c:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 6ab5940:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 6ab5944:	e0bffc17 	ldw	r2,-16(fp)
 6ab5948:	1004803a 	cmplt	r2,r2,zero
 6ab594c:	1000081e 	bne	r2,zero,6ab5970 <lseek+0x4c>
 6ab5950:	e0bffc17 	ldw	r2,-16(fp)
 6ab5954:	10800324 	muli	r2,r2,12
 6ab5958:	1007883a 	mov	r3,r2
 6ab595c:	0081ab34 	movhi	r2,1708
 6ab5960:	10a52e04 	addi	r2,r2,-27464
 6ab5964:	1887883a 	add	r3,r3,r2
 6ab5968:	e0ffff15 	stw	r3,-4(fp)
 6ab596c:	00000106 	br	6ab5974 <lseek+0x50>
 6ab5970:	e03fff15 	stw	zero,-4(fp)
 6ab5974:	e0bfff17 	ldw	r2,-4(fp)
 6ab5978:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
 6ab597c:	e0bffb17 	ldw	r2,-20(fp)
 6ab5980:	1005003a 	cmpeq	r2,r2,zero
 6ab5984:	1000111e 	bne	r2,zero,6ab59cc <lseek+0xa8>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 6ab5988:	e0bffb17 	ldw	r2,-20(fp)
 6ab598c:	10800017 	ldw	r2,0(r2)
 6ab5990:	10800717 	ldw	r2,28(r2)
 6ab5994:	1005003a 	cmpeq	r2,r2,zero
 6ab5998:	1000091e 	bne	r2,zero,6ab59c0 <lseek+0x9c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 6ab599c:	e0bffb17 	ldw	r2,-20(fp)
 6ab59a0:	10800017 	ldw	r2,0(r2)
 6ab59a4:	10800717 	ldw	r2,28(r2)
 6ab59a8:	e13ffb17 	ldw	r4,-20(fp)
 6ab59ac:	e17ffd17 	ldw	r5,-12(fp)
 6ab59b0:	e1bffe17 	ldw	r6,-8(fp)
 6ab59b4:	103ee83a 	callr	r2
 6ab59b8:	e0bffa15 	stw	r2,-24(fp)
 6ab59bc:	00000506 	br	6ab59d4 <lseek+0xb0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 6ab59c0:	00bfde84 	movi	r2,-134
 6ab59c4:	e0bffa15 	stw	r2,-24(fp)
 6ab59c8:	00000206 	br	6ab59d4 <lseek+0xb0>
    }
  }
  else  
  {
    rc = -EBADFD;
 6ab59cc:	00bfebc4 	movi	r2,-81
 6ab59d0:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
 6ab59d4:	e0bffa17 	ldw	r2,-24(fp)
 6ab59d8:	1004403a 	cmpge	r2,r2,zero
 6ab59dc:	1000071e 	bne	r2,zero,6ab59fc <lseek+0xd8>
  {
    ALT_ERRNO = -rc;
 6ab59e0:	6ab5a140 	call	6ab5a14 <alt_get_errno>
 6ab59e4:	1007883a 	mov	r3,r2
 6ab59e8:	e0bffa17 	ldw	r2,-24(fp)
 6ab59ec:	0085c83a 	sub	r2,zero,r2
 6ab59f0:	18800015 	stw	r2,0(r3)
    rc = -1;
 6ab59f4:	00bfffc4 	movi	r2,-1
 6ab59f8:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
 6ab59fc:	e0bffa17 	ldw	r2,-24(fp)
}
 6ab5a00:	e037883a 	mov	sp,fp
 6ab5a04:	dfc00117 	ldw	ra,4(sp)
 6ab5a08:	df000017 	ldw	fp,0(sp)
 6ab5a0c:	dec00204 	addi	sp,sp,8
 6ab5a10:	f800283a 	ret

06ab5a14 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 6ab5a14:	defffd04 	addi	sp,sp,-12
 6ab5a18:	dfc00215 	stw	ra,8(sp)
 6ab5a1c:	df000115 	stw	fp,4(sp)
 6ab5a20:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 6ab5a24:	0081ab34 	movhi	r2,1708
 6ab5a28:	10a9bb04 	addi	r2,r2,-22804
 6ab5a2c:	10800017 	ldw	r2,0(r2)
 6ab5a30:	1005003a 	cmpeq	r2,r2,zero
 6ab5a34:	1000061e 	bne	r2,zero,6ab5a50 <alt_get_errno+0x3c>
 6ab5a38:	0081ab34 	movhi	r2,1708
 6ab5a3c:	10a9bb04 	addi	r2,r2,-22804
 6ab5a40:	10800017 	ldw	r2,0(r2)
 6ab5a44:	103ee83a 	callr	r2
 6ab5a48:	e0bfff15 	stw	r2,-4(fp)
 6ab5a4c:	00000306 	br	6ab5a5c <alt_get_errno+0x48>
 6ab5a50:	0081ab34 	movhi	r2,1708
 6ab5a54:	10b08504 	addi	r2,r2,-15852
 6ab5a58:	e0bfff15 	stw	r2,-4(fp)
 6ab5a5c:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab5a60:	e037883a 	mov	sp,fp
 6ab5a64:	dfc00117 	ldw	ra,4(sp)
 6ab5a68:	df000017 	ldw	fp,0(sp)
 6ab5a6c:	dec00204 	addi	sp,sp,8
 6ab5a70:	f800283a 	ret

06ab5a74 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 6ab5a74:	defffd04 	addi	sp,sp,-12
 6ab5a78:	dfc00215 	stw	ra,8(sp)
 6ab5a7c:	df000115 	stw	fp,4(sp)
 6ab5a80:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 6ab5a84:	0009883a 	mov	r4,zero
 6ab5a88:	6ab62f40 	call	6ab62f4 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 6ab5a8c:	6ab63280 	call	6ab6328 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 6ab5a90:	0101ab34 	movhi	r4,1708
 6ab5a94:	21231204 	addi	r4,r4,-29624
 6ab5a98:	0141ab34 	movhi	r5,1708
 6ab5a9c:	29631204 	addi	r5,r5,-29624
 6ab5aa0:	0181ab34 	movhi	r6,1708
 6ab5aa4:	31a31204 	addi	r6,r6,-29624
 6ab5aa8:	6ab847c0 	call	6ab847c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 6ab5aac:	6ab7cf80 	call	6ab7cf8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 6ab5ab0:	0101aaf4 	movhi	r4,1707
 6ab5ab4:	211f5704 	addi	r4,r4,32092
 6ab5ab8:	6ab87480 	call	6ab8748 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 6ab5abc:	d126dc17 	ldw	r4,-25744(gp)
 6ab5ac0:	d166dd17 	ldw	r5,-25740(gp)
 6ab5ac4:	d1a6de17 	ldw	r6,-25736(gp)
 6ab5ac8:	6aaac600 	call	6aaac60 <main>
 6ab5acc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 6ab5ad0:	01000044 	movi	r4,1
 6ab5ad4:	6ab53fc0 	call	6ab53fc <close>
  exit (result);
 6ab5ad8:	e13fff17 	ldw	r4,-4(fp)
 6ab5adc:	6aaaebc0 	call	6aaaebc <exit>

06ab5ae0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 6ab5ae0:	defffe04 	addi	sp,sp,-8
 6ab5ae4:	df000115 	stw	fp,4(sp)
 6ab5ae8:	df000104 	addi	fp,sp,4
 6ab5aec:	e13fff15 	stw	r4,-4(fp)
}
 6ab5af0:	e037883a 	mov	sp,fp
 6ab5af4:	df000017 	ldw	fp,0(sp)
 6ab5af8:	dec00104 	addi	sp,sp,4
 6ab5afc:	f800283a 	ret

06ab5b00 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 6ab5b00:	defffe04 	addi	sp,sp,-8
 6ab5b04:	df000115 	stw	fp,4(sp)
 6ab5b08:	df000104 	addi	fp,sp,4
 6ab5b0c:	e13fff15 	stw	r4,-4(fp)
}
 6ab5b10:	e037883a 	mov	sp,fp
 6ab5b14:	df000017 	ldw	fp,0(sp)
 6ab5b18:	dec00104 	addi	sp,sp,4
 6ab5b1c:	f800283a 	ret

06ab5b20 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 6ab5b20:	defffc04 	addi	sp,sp,-16
 6ab5b24:	df000315 	stw	fp,12(sp)
 6ab5b28:	df000304 	addi	fp,sp,12
 6ab5b2c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 6ab5b30:	e0bffe17 	ldw	r2,-8(fp)
 6ab5b34:	10800217 	ldw	r2,8(r2)
 6ab5b38:	10d00034 	orhi	r3,r2,16384
 6ab5b3c:	e0bffe17 	ldw	r2,-8(fp)
 6ab5b40:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 6ab5b44:	e03ffd15 	stw	zero,-12(fp)
 6ab5b48:	00002006 	br	6ab5bcc <alt_file_locked+0xac>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 6ab5b4c:	e0bffd17 	ldw	r2,-12(fp)
 6ab5b50:	00c1ab34 	movhi	r3,1708
 6ab5b54:	18e52e04 	addi	r3,r3,-27464
 6ab5b58:	10800324 	muli	r2,r2,12
 6ab5b5c:	10c5883a 	add	r2,r2,r3
 6ab5b60:	10c00017 	ldw	r3,0(r2)
 6ab5b64:	e0bffe17 	ldw	r2,-8(fp)
 6ab5b68:	10800017 	ldw	r2,0(r2)
 6ab5b6c:	1880141e 	bne	r3,r2,6ab5bc0 <alt_file_locked+0xa0>
 6ab5b70:	e0bffd17 	ldw	r2,-12(fp)
 6ab5b74:	00c1ab34 	movhi	r3,1708
 6ab5b78:	18e52e04 	addi	r3,r3,-27464
 6ab5b7c:	10800324 	muli	r2,r2,12
 6ab5b80:	10c5883a 	add	r2,r2,r3
 6ab5b84:	10800204 	addi	r2,r2,8
 6ab5b88:	10800017 	ldw	r2,0(r2)
 6ab5b8c:	1004403a 	cmpge	r2,r2,zero
 6ab5b90:	10000b1e 	bne	r2,zero,6ab5bc0 <alt_file_locked+0xa0>
 6ab5b94:	e0bffd17 	ldw	r2,-12(fp)
 6ab5b98:	10800324 	muli	r2,r2,12
 6ab5b9c:	1007883a 	mov	r3,r2
 6ab5ba0:	0081ab34 	movhi	r2,1708
 6ab5ba4:	10a52e04 	addi	r2,r2,-27464
 6ab5ba8:	1887883a 	add	r3,r3,r2
 6ab5bac:	e0bffe17 	ldw	r2,-8(fp)
 6ab5bb0:	18800326 	beq	r3,r2,6ab5bc0 <alt_file_locked+0xa0>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 6ab5bb4:	00bffcc4 	movi	r2,-13
 6ab5bb8:	e0bfff15 	stw	r2,-4(fp)
 6ab5bbc:	00000a06 	br	6ab5be8 <alt_file_locked+0xc8>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 6ab5bc0:	e0bffd17 	ldw	r2,-12(fp)
 6ab5bc4:	10800044 	addi	r2,r2,1
 6ab5bc8:	e0bffd15 	stw	r2,-12(fp)
 6ab5bcc:	0081ab34 	movhi	r2,1708
 6ab5bd0:	10a9ba04 	addi	r2,r2,-22808
 6ab5bd4:	10800017 	ldw	r2,0(r2)
 6ab5bd8:	1007883a 	mov	r3,r2
 6ab5bdc:	e0bffd17 	ldw	r2,-12(fp)
 6ab5be0:	18bfda2e 	bgeu	r3,r2,6ab5b4c <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 6ab5be4:	e03fff15 	stw	zero,-4(fp)
 6ab5be8:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab5bec:	e037883a 	mov	sp,fp
 6ab5bf0:	df000017 	ldw	fp,0(sp)
 6ab5bf4:	dec00104 	addi	sp,sp,4
 6ab5bf8:	f800283a 	ret

06ab5bfc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 6ab5bfc:	defff404 	addi	sp,sp,-48
 6ab5c00:	dfc00b15 	stw	ra,44(sp)
 6ab5c04:	df000a15 	stw	fp,40(sp)
 6ab5c08:	df000a04 	addi	fp,sp,40
 6ab5c0c:	e13ffb15 	stw	r4,-20(fp)
 6ab5c10:	e17ffc15 	stw	r5,-16(fp)
 6ab5c14:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 6ab5c18:	00bfffc4 	movi	r2,-1
 6ab5c1c:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
 6ab5c20:	00bffb44 	movi	r2,-19
 6ab5c24:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
 6ab5c28:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 6ab5c2c:	e13ffb17 	ldw	r4,-20(fp)
 6ab5c30:	0141ab34 	movhi	r5,1708
 6ab5c34:	2969b804 	addi	r5,r5,-22816
 6ab5c38:	6ab7dc00 	call	6ab7dc0 <alt_find_dev>
 6ab5c3c:	e0bffa15 	stw	r2,-24(fp)
 6ab5c40:	e0bffa17 	ldw	r2,-24(fp)
 6ab5c44:	1004c03a 	cmpne	r2,r2,zero
 6ab5c48:	1000051e 	bne	r2,zero,6ab5c60 <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 6ab5c4c:	e13ffb17 	ldw	r4,-20(fp)
 6ab5c50:	6ab7e540 	call	6ab7e54 <alt_find_file>
 6ab5c54:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
 6ab5c58:	00800044 	movi	r2,1
 6ab5c5c:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 6ab5c60:	e0bffa17 	ldw	r2,-24(fp)
 6ab5c64:	1005003a 	cmpeq	r2,r2,zero
 6ab5c68:	1000301e 	bne	r2,zero,6ab5d2c <open+0x130>
  {
    if ((index = alt_get_fd (dev)) < 0)
 6ab5c6c:	e13ffa17 	ldw	r4,-24(fp)
 6ab5c70:	6ab80040 	call	6ab8004 <alt_get_fd>
 6ab5c74:	e0bff815 	stw	r2,-32(fp)
 6ab5c78:	e0bff817 	ldw	r2,-32(fp)
 6ab5c7c:	1004403a 	cmpge	r2,r2,zero
 6ab5c80:	1000031e 	bne	r2,zero,6ab5c90 <open+0x94>
    {
      status = index;
 6ab5c84:	e0bff817 	ldw	r2,-32(fp)
 6ab5c88:	e0bff715 	stw	r2,-36(fp)
 6ab5c8c:	00002906 	br	6ab5d34 <open+0x138>
    }
    else
    {
      fd = &alt_fd_list[index];
 6ab5c90:	e0bff817 	ldw	r2,-32(fp)
 6ab5c94:	10800324 	muli	r2,r2,12
 6ab5c98:	1007883a 	mov	r3,r2
 6ab5c9c:	0081ab34 	movhi	r2,1708
 6ab5ca0:	10a52e04 	addi	r2,r2,-27464
 6ab5ca4:	1885883a 	add	r2,r3,r2
 6ab5ca8:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 6ab5cac:	e0fffc17 	ldw	r3,-16(fp)
 6ab5cb0:	00900034 	movhi	r2,16384
 6ab5cb4:	10bfffc4 	addi	r2,r2,-1
 6ab5cb8:	1886703a 	and	r3,r3,r2
 6ab5cbc:	e0bff917 	ldw	r2,-28(fp)
 6ab5cc0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 6ab5cc4:	e0bff617 	ldw	r2,-40(fp)
 6ab5cc8:	1004c03a 	cmpne	r2,r2,zero
 6ab5ccc:	1000061e 	bne	r2,zero,6ab5ce8 <open+0xec>
 6ab5cd0:	e13ff917 	ldw	r4,-28(fp)
 6ab5cd4:	6ab5b200 	call	6ab5b20 <alt_file_locked>
 6ab5cd8:	e0bff715 	stw	r2,-36(fp)
 6ab5cdc:	e0bff717 	ldw	r2,-36(fp)
 6ab5ce0:	1004803a 	cmplt	r2,r2,zero
 6ab5ce4:	1000131e 	bne	r2,zero,6ab5d34 <open+0x138>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 6ab5ce8:	e0bffa17 	ldw	r2,-24(fp)
 6ab5cec:	10800317 	ldw	r2,12(r2)
 6ab5cf0:	1005003a 	cmpeq	r2,r2,zero
 6ab5cf4:	1000091e 	bne	r2,zero,6ab5d1c <open+0x120>
 6ab5cf8:	e0bffa17 	ldw	r2,-24(fp)
 6ab5cfc:	10800317 	ldw	r2,12(r2)
 6ab5d00:	e13ff917 	ldw	r4,-28(fp)
 6ab5d04:	e17ffb17 	ldw	r5,-20(fp)
 6ab5d08:	e1bffc17 	ldw	r6,-16(fp)
 6ab5d0c:	e1fffd17 	ldw	r7,-12(fp)
 6ab5d10:	103ee83a 	callr	r2
 6ab5d14:	e0bfff15 	stw	r2,-4(fp)
 6ab5d18:	00000106 	br	6ab5d20 <open+0x124>
 6ab5d1c:	e03fff15 	stw	zero,-4(fp)
 6ab5d20:	e0bfff17 	ldw	r2,-4(fp)
 6ab5d24:	e0bff715 	stw	r2,-36(fp)
 6ab5d28:	00000206 	br	6ab5d34 <open+0x138>
      }
    }
  }
  else
  {
    status = -ENODEV;
 6ab5d2c:	00bffb44 	movi	r2,-19
 6ab5d30:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 6ab5d34:	e0bff717 	ldw	r2,-36(fp)
 6ab5d38:	1004403a 	cmpge	r2,r2,zero
 6ab5d3c:	1000091e 	bne	r2,zero,6ab5d64 <open+0x168>
  {
    alt_release_fd (index);  
 6ab5d40:	e13ff817 	ldw	r4,-32(fp)
 6ab5d44:	6ab5f640 	call	6ab5f64 <alt_release_fd>
    ALT_ERRNO = -status;
 6ab5d48:	6ab5d840 	call	6ab5d84 <alt_get_errno>
 6ab5d4c:	e0fff717 	ldw	r3,-36(fp)
 6ab5d50:	00c7c83a 	sub	r3,zero,r3
 6ab5d54:	10c00015 	stw	r3,0(r2)
    return -1;
 6ab5d58:	00bfffc4 	movi	r2,-1
 6ab5d5c:	e0bffe15 	stw	r2,-8(fp)
 6ab5d60:	00000206 	br	6ab5d6c <open+0x170>
  }
  
  /* return the reference upon success */

  return index;
 6ab5d64:	e0bff817 	ldw	r2,-32(fp)
 6ab5d68:	e0bffe15 	stw	r2,-8(fp)
 6ab5d6c:	e0bffe17 	ldw	r2,-8(fp)
}
 6ab5d70:	e037883a 	mov	sp,fp
 6ab5d74:	dfc00117 	ldw	ra,4(sp)
 6ab5d78:	df000017 	ldw	fp,0(sp)
 6ab5d7c:	dec00204 	addi	sp,sp,8
 6ab5d80:	f800283a 	ret

06ab5d84 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 6ab5d84:	defffd04 	addi	sp,sp,-12
 6ab5d88:	dfc00215 	stw	ra,8(sp)
 6ab5d8c:	df000115 	stw	fp,4(sp)
 6ab5d90:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 6ab5d94:	0081ab34 	movhi	r2,1708
 6ab5d98:	10a9bb04 	addi	r2,r2,-22804
 6ab5d9c:	10800017 	ldw	r2,0(r2)
 6ab5da0:	1005003a 	cmpeq	r2,r2,zero
 6ab5da4:	1000061e 	bne	r2,zero,6ab5dc0 <alt_get_errno+0x3c>
 6ab5da8:	0081ab34 	movhi	r2,1708
 6ab5dac:	10a9bb04 	addi	r2,r2,-22804
 6ab5db0:	10800017 	ldw	r2,0(r2)
 6ab5db4:	103ee83a 	callr	r2
 6ab5db8:	e0bfff15 	stw	r2,-4(fp)
 6ab5dbc:	00000306 	br	6ab5dcc <alt_get_errno+0x48>
 6ab5dc0:	0081ab34 	movhi	r2,1708
 6ab5dc4:	10b08504 	addi	r2,r2,-15852
 6ab5dc8:	e0bfff15 	stw	r2,-4(fp)
 6ab5dcc:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab5dd0:	e037883a 	mov	sp,fp
 6ab5dd4:	dfc00117 	ldw	ra,4(sp)
 6ab5dd8:	df000017 	ldw	fp,0(sp)
 6ab5ddc:	dec00204 	addi	sp,sp,8
 6ab5de0:	f800283a 	ret

06ab5de4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 6ab5de4:	defff704 	addi	sp,sp,-36
 6ab5de8:	dfc00815 	stw	ra,32(sp)
 6ab5dec:	df000715 	stw	fp,28(sp)
 6ab5df0:	df000704 	addi	fp,sp,28
 6ab5df4:	e13ffb15 	stw	r4,-20(fp)
 6ab5df8:	e17ffc15 	stw	r5,-16(fp)
 6ab5dfc:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 6ab5e00:	e0bffb17 	ldw	r2,-20(fp)
 6ab5e04:	1004803a 	cmplt	r2,r2,zero
 6ab5e08:	1000081e 	bne	r2,zero,6ab5e2c <read+0x48>
 6ab5e0c:	e0bffb17 	ldw	r2,-20(fp)
 6ab5e10:	10800324 	muli	r2,r2,12
 6ab5e14:	1007883a 	mov	r3,r2
 6ab5e18:	0081ab34 	movhi	r2,1708
 6ab5e1c:	10a52e04 	addi	r2,r2,-27464
 6ab5e20:	1887883a 	add	r3,r3,r2
 6ab5e24:	e0ffff15 	stw	r3,-4(fp)
 6ab5e28:	00000106 	br	6ab5e30 <read+0x4c>
 6ab5e2c:	e03fff15 	stw	zero,-4(fp)
 6ab5e30:	e0bfff17 	ldw	r2,-4(fp)
 6ab5e34:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
 6ab5e38:	e0bffa17 	ldw	r2,-24(fp)
 6ab5e3c:	1005003a 	cmpeq	r2,r2,zero
 6ab5e40:	1000241e 	bne	r2,zero,6ab5ed4 <read+0xf0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 6ab5e44:	e0bffa17 	ldw	r2,-24(fp)
 6ab5e48:	10800217 	ldw	r2,8(r2)
 6ab5e4c:	108000cc 	andi	r2,r2,3
 6ab5e50:	10800060 	cmpeqi	r2,r2,1
 6ab5e54:	10001a1e 	bne	r2,zero,6ab5ec0 <read+0xdc>
 6ab5e58:	e0bffa17 	ldw	r2,-24(fp)
 6ab5e5c:	10800017 	ldw	r2,0(r2)
 6ab5e60:	10800517 	ldw	r2,20(r2)
 6ab5e64:	1005003a 	cmpeq	r2,r2,zero
 6ab5e68:	1000151e 	bne	r2,zero,6ab5ec0 <read+0xdc>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 6ab5e6c:	e0bffa17 	ldw	r2,-24(fp)
 6ab5e70:	10800017 	ldw	r2,0(r2)
 6ab5e74:	10800517 	ldw	r2,20(r2)
 6ab5e78:	e17ffc17 	ldw	r5,-16(fp)
 6ab5e7c:	e1bffd17 	ldw	r6,-12(fp)
 6ab5e80:	e13ffa17 	ldw	r4,-24(fp)
 6ab5e84:	103ee83a 	callr	r2
 6ab5e88:	e0bff915 	stw	r2,-28(fp)
 6ab5e8c:	e0bff917 	ldw	r2,-28(fp)
 6ab5e90:	1004403a 	cmpge	r2,r2,zero
 6ab5e94:	1000071e 	bne	r2,zero,6ab5eb4 <read+0xd0>
        {
          ALT_ERRNO = -rval;
 6ab5e98:	6ab5f040 	call	6ab5f04 <alt_get_errno>
 6ab5e9c:	e0fff917 	ldw	r3,-28(fp)
 6ab5ea0:	00c7c83a 	sub	r3,zero,r3
 6ab5ea4:	10c00015 	stw	r3,0(r2)
          return -1;
 6ab5ea8:	00bfffc4 	movi	r2,-1
 6ab5eac:	e0bffe15 	stw	r2,-8(fp)
 6ab5eb0:	00000e06 	br	6ab5eec <read+0x108>
        }
        return rval;
 6ab5eb4:	e0bff917 	ldw	r2,-28(fp)
 6ab5eb8:	e0bffe15 	stw	r2,-8(fp)
 6ab5ebc:	00000b06 	br	6ab5eec <read+0x108>
      }
      else
      {
        ALT_ERRNO = EACCES;
 6ab5ec0:	6ab5f040 	call	6ab5f04 <alt_get_errno>
 6ab5ec4:	1007883a 	mov	r3,r2
 6ab5ec8:	00800344 	movi	r2,13
 6ab5ecc:	18800015 	stw	r2,0(r3)
 6ab5ed0:	00000406 	br	6ab5ee4 <read+0x100>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 6ab5ed4:	6ab5f040 	call	6ab5f04 <alt_get_errno>
 6ab5ed8:	1007883a 	mov	r3,r2
 6ab5edc:	00801444 	movi	r2,81
 6ab5ee0:	18800015 	stw	r2,0(r3)
  }
  return -1;
 6ab5ee4:	00bfffc4 	movi	r2,-1
 6ab5ee8:	e0bffe15 	stw	r2,-8(fp)
 6ab5eec:	e0bffe17 	ldw	r2,-8(fp)
}
 6ab5ef0:	e037883a 	mov	sp,fp
 6ab5ef4:	dfc00117 	ldw	ra,4(sp)
 6ab5ef8:	df000017 	ldw	fp,0(sp)
 6ab5efc:	dec00204 	addi	sp,sp,8
 6ab5f00:	f800283a 	ret

06ab5f04 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 6ab5f04:	defffd04 	addi	sp,sp,-12
 6ab5f08:	dfc00215 	stw	ra,8(sp)
 6ab5f0c:	df000115 	stw	fp,4(sp)
 6ab5f10:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 6ab5f14:	0081ab34 	movhi	r2,1708
 6ab5f18:	10a9bb04 	addi	r2,r2,-22804
 6ab5f1c:	10800017 	ldw	r2,0(r2)
 6ab5f20:	1005003a 	cmpeq	r2,r2,zero
 6ab5f24:	1000061e 	bne	r2,zero,6ab5f40 <alt_get_errno+0x3c>
 6ab5f28:	0081ab34 	movhi	r2,1708
 6ab5f2c:	10a9bb04 	addi	r2,r2,-22804
 6ab5f30:	10800017 	ldw	r2,0(r2)
 6ab5f34:	103ee83a 	callr	r2
 6ab5f38:	e0bfff15 	stw	r2,-4(fp)
 6ab5f3c:	00000306 	br	6ab5f4c <alt_get_errno+0x48>
 6ab5f40:	0081ab34 	movhi	r2,1708
 6ab5f44:	10b08504 	addi	r2,r2,-15852
 6ab5f48:	e0bfff15 	stw	r2,-4(fp)
 6ab5f4c:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab5f50:	e037883a 	mov	sp,fp
 6ab5f54:	dfc00117 	ldw	ra,4(sp)
 6ab5f58:	df000017 	ldw	fp,0(sp)
 6ab5f5c:	dec00204 	addi	sp,sp,8
 6ab5f60:	f800283a 	ret

06ab5f64 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 6ab5f64:	defffe04 	addi	sp,sp,-8
 6ab5f68:	df000115 	stw	fp,4(sp)
 6ab5f6c:	df000104 	addi	fp,sp,4
 6ab5f70:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 6ab5f74:	e0bfff17 	ldw	r2,-4(fp)
 6ab5f78:	108000d0 	cmplti	r2,r2,3
 6ab5f7c:	10000d1e 	bne	r2,zero,6ab5fb4 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 6ab5f80:	e0bfff17 	ldw	r2,-4(fp)
 6ab5f84:	00c1ab34 	movhi	r3,1708
 6ab5f88:	18e52e04 	addi	r3,r3,-27464
 6ab5f8c:	10800324 	muli	r2,r2,12
 6ab5f90:	10c5883a 	add	r2,r2,r3
 6ab5f94:	10800204 	addi	r2,r2,8
 6ab5f98:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 6ab5f9c:	e0bfff17 	ldw	r2,-4(fp)
 6ab5fa0:	00c1ab34 	movhi	r3,1708
 6ab5fa4:	18e52e04 	addi	r3,r3,-27464
 6ab5fa8:	10800324 	muli	r2,r2,12
 6ab5fac:	10c5883a 	add	r2,r2,r3
 6ab5fb0:	10000015 	stw	zero,0(r2)
  }
}
 6ab5fb4:	e037883a 	mov	sp,fp
 6ab5fb8:	df000017 	ldw	fp,0(sp)
 6ab5fbc:	dec00104 	addi	sp,sp,4
 6ab5fc0:	f800283a 	ret

06ab5fc4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 6ab5fc4:	defff804 	addi	sp,sp,-32
 6ab5fc8:	df000715 	stw	fp,28(sp)
 6ab5fcc:	df000704 	addi	fp,sp,28
 6ab5fd0:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 6ab5fd4:	0005303a 	rdctl	r2,status
 6ab5fd8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 6ab5fdc:	e0fffb17 	ldw	r3,-20(fp)
 6ab5fe0:	00bfff84 	movi	r2,-2
 6ab5fe4:	1884703a 	and	r2,r3,r2
 6ab5fe8:	1001703a 	wrctl	status,r2
  
  return context;
 6ab5fec:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 6ab5ff0:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 6ab5ff4:	d0a00c17 	ldw	r2,-32720(gp)
 6ab5ff8:	10c000c4 	addi	r3,r2,3
 6ab5ffc:	00bfff04 	movi	r2,-4
 6ab6000:	1884703a 	and	r2,r3,r2
 6ab6004:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 6ab6008:	d0e00c17 	ldw	r3,-32720(gp)
 6ab600c:	e0bffe17 	ldw	r2,-8(fp)
 6ab6010:	1887883a 	add	r3,r3,r2
 6ab6014:	00820034 	movhi	r2,2048
 6ab6018:	10bff804 	addi	r2,r2,-32
 6ab601c:	10c0072e 	bgeu	r2,r3,6ab603c <sbrk+0x78>
 6ab6020:	e0bffd17 	ldw	r2,-12(fp)
 6ab6024:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 6ab6028:	e0bffa17 	ldw	r2,-24(fp)
 6ab602c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 6ab6030:	00bfffc4 	movi	r2,-1
 6ab6034:	e0bfff15 	stw	r2,-4(fp)
 6ab6038:	00000c06 	br	6ab606c <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
 6ab603c:	d0a00c17 	ldw	r2,-32720(gp)
 6ab6040:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
 6ab6044:	d0e00c17 	ldw	r3,-32720(gp)
 6ab6048:	e0bffe17 	ldw	r2,-8(fp)
 6ab604c:	1885883a 	add	r2,r3,r2
 6ab6050:	d0a00c15 	stw	r2,-32720(gp)
 6ab6054:	e0bffd17 	ldw	r2,-12(fp)
 6ab6058:	e0bff915 	stw	r2,-28(fp)
 6ab605c:	e0bff917 	ldw	r2,-28(fp)
 6ab6060:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 6ab6064:	e0bffc17 	ldw	r2,-16(fp)
 6ab6068:	e0bfff15 	stw	r2,-4(fp)
 6ab606c:	e0bfff17 	ldw	r2,-4(fp)
} 
 6ab6070:	e037883a 	mov	sp,fp
 6ab6074:	df000017 	ldw	fp,0(sp)
 6ab6078:	dec00104 	addi	sp,sp,4
 6ab607c:	f800283a 	ret

06ab6080 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
 6ab6080:	defffb04 	addi	sp,sp,-20
 6ab6084:	dfc00415 	stw	ra,16(sp)
 6ab6088:	df000315 	stw	fp,12(sp)
 6ab608c:	df000304 	addi	fp,sp,12
 6ab6090:	e13ffe15 	stw	r4,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 6ab6094:	0081ab34 	movhi	r2,1708
 6ab6098:	10b09104 	addi	r2,r2,-15804
 6ab609c:	10800017 	ldw	r2,0(r2)
  clock_t ticks = alt_nticks(); 
 6ab60a0:	e0bffd15 	stw	r2,-12(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 6ab60a4:	0081ab34 	movhi	r2,1708
 6ab60a8:	10b09004 	addi	r2,r2,-15808
 6ab60ac:	10800017 	ldw	r2,0(r2)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
 6ab60b0:	1004c03a 	cmpne	r2,r2,zero
 6ab60b4:	1000061e 	bne	r2,zero,6ab60d0 <times+0x50>
  {
    ALT_ERRNO = ENOSYS;
 6ab60b8:	6ab61140 	call	6ab6114 <alt_get_errno>
 6ab60bc:	1007883a 	mov	r3,r2
 6ab60c0:	00801604 	movi	r2,88
 6ab60c4:	18800015 	stw	r2,0(r3)
    return 0;
 6ab60c8:	e03fff15 	stw	zero,-4(fp)
 6ab60cc:	00000b06 	br	6ab60fc <times+0x7c>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
 6ab60d0:	e0bffe17 	ldw	r2,-8(fp)
 6ab60d4:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
 6ab60d8:	e0fffe17 	ldw	r3,-8(fp)
 6ab60dc:	e0bffd17 	ldw	r2,-12(fp)
 6ab60e0:	18800115 	stw	r2,4(r3)
  buf->tms_cutime = 0;
 6ab60e4:	e0bffe17 	ldw	r2,-8(fp)
 6ab60e8:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
 6ab60ec:	e0bffe17 	ldw	r2,-8(fp)
 6ab60f0:	10000315 	stw	zero,12(r2)

  return ticks;
 6ab60f4:	e0bffd17 	ldw	r2,-12(fp)
 6ab60f8:	e0bfff15 	stw	r2,-4(fp)
 6ab60fc:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab6100:	e037883a 	mov	sp,fp
 6ab6104:	dfc00117 	ldw	ra,4(sp)
 6ab6108:	df000017 	ldw	fp,0(sp)
 6ab610c:	dec00204 	addi	sp,sp,8
 6ab6110:	f800283a 	ret

06ab6114 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 6ab6114:	defffd04 	addi	sp,sp,-12
 6ab6118:	dfc00215 	stw	ra,8(sp)
 6ab611c:	df000115 	stw	fp,4(sp)
 6ab6120:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 6ab6124:	0081ab34 	movhi	r2,1708
 6ab6128:	10a9bb04 	addi	r2,r2,-22804
 6ab612c:	10800017 	ldw	r2,0(r2)
 6ab6130:	1005003a 	cmpeq	r2,r2,zero
 6ab6134:	1000061e 	bne	r2,zero,6ab6150 <alt_get_errno+0x3c>
 6ab6138:	0081ab34 	movhi	r2,1708
 6ab613c:	10a9bb04 	addi	r2,r2,-22804
 6ab6140:	10800017 	ldw	r2,0(r2)
 6ab6144:	103ee83a 	callr	r2
 6ab6148:	e0bfff15 	stw	r2,-4(fp)
 6ab614c:	00000306 	br	6ab615c <alt_get_errno+0x48>
 6ab6150:	0081ab34 	movhi	r2,1708
 6ab6154:	10b08504 	addi	r2,r2,-15852
 6ab6158:	e0bfff15 	stw	r2,-4(fp)
 6ab615c:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab6160:	e037883a 	mov	sp,fp
 6ab6164:	dfc00117 	ldw	ra,4(sp)
 6ab6168:	df000017 	ldw	fp,0(sp)
 6ab616c:	dec00204 	addi	sp,sp,8
 6ab6170:	f800283a 	ret

06ab6174 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 6ab6174:	defff704 	addi	sp,sp,-36
 6ab6178:	dfc00815 	stw	ra,32(sp)
 6ab617c:	df000715 	stw	fp,28(sp)
 6ab6180:	df000704 	addi	fp,sp,28
 6ab6184:	e13ffb15 	stw	r4,-20(fp)
 6ab6188:	e17ffc15 	stw	r5,-16(fp)
 6ab618c:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 6ab6190:	e0bffb17 	ldw	r2,-20(fp)
 6ab6194:	1004803a 	cmplt	r2,r2,zero
 6ab6198:	1000081e 	bne	r2,zero,6ab61bc <write+0x48>
 6ab619c:	e0bffb17 	ldw	r2,-20(fp)
 6ab61a0:	10800324 	muli	r2,r2,12
 6ab61a4:	1007883a 	mov	r3,r2
 6ab61a8:	0081ab34 	movhi	r2,1708
 6ab61ac:	10a52e04 	addi	r2,r2,-27464
 6ab61b0:	1887883a 	add	r3,r3,r2
 6ab61b4:	e0ffff15 	stw	r3,-4(fp)
 6ab61b8:	00000106 	br	6ab61c0 <write+0x4c>
 6ab61bc:	e03fff15 	stw	zero,-4(fp)
 6ab61c0:	e0bfff17 	ldw	r2,-4(fp)
 6ab61c4:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
 6ab61c8:	e0bffa17 	ldw	r2,-24(fp)
 6ab61cc:	1005003a 	cmpeq	r2,r2,zero
 6ab61d0:	1000241e 	bne	r2,zero,6ab6264 <write+0xf0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 6ab61d4:	e0bffa17 	ldw	r2,-24(fp)
 6ab61d8:	10800217 	ldw	r2,8(r2)
 6ab61dc:	108000cc 	andi	r2,r2,3
 6ab61e0:	1005003a 	cmpeq	r2,r2,zero
 6ab61e4:	10001a1e 	bne	r2,zero,6ab6250 <write+0xdc>
 6ab61e8:	e0bffa17 	ldw	r2,-24(fp)
 6ab61ec:	10800017 	ldw	r2,0(r2)
 6ab61f0:	10800617 	ldw	r2,24(r2)
 6ab61f4:	1005003a 	cmpeq	r2,r2,zero
 6ab61f8:	1000151e 	bne	r2,zero,6ab6250 <write+0xdc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 6ab61fc:	e0bffa17 	ldw	r2,-24(fp)
 6ab6200:	10800017 	ldw	r2,0(r2)
 6ab6204:	10800617 	ldw	r2,24(r2)
 6ab6208:	e17ffc17 	ldw	r5,-16(fp)
 6ab620c:	e1bffd17 	ldw	r6,-12(fp)
 6ab6210:	e13ffa17 	ldw	r4,-24(fp)
 6ab6214:	103ee83a 	callr	r2
 6ab6218:	e0bff915 	stw	r2,-28(fp)
 6ab621c:	e0bff917 	ldw	r2,-28(fp)
 6ab6220:	1004403a 	cmpge	r2,r2,zero
 6ab6224:	1000071e 	bne	r2,zero,6ab6244 <write+0xd0>
      {
        ALT_ERRNO = -rval;
 6ab6228:	6ab62940 	call	6ab6294 <alt_get_errno>
 6ab622c:	e0fff917 	ldw	r3,-28(fp)
 6ab6230:	00c7c83a 	sub	r3,zero,r3
 6ab6234:	10c00015 	stw	r3,0(r2)
        return -1;
 6ab6238:	00bfffc4 	movi	r2,-1
 6ab623c:	e0bffe15 	stw	r2,-8(fp)
 6ab6240:	00000e06 	br	6ab627c <write+0x108>
      }
      return rval;
 6ab6244:	e0bff917 	ldw	r2,-28(fp)
 6ab6248:	e0bffe15 	stw	r2,-8(fp)
 6ab624c:	00000b06 	br	6ab627c <write+0x108>
    }
    else
    {
      ALT_ERRNO = EACCES;
 6ab6250:	6ab62940 	call	6ab6294 <alt_get_errno>
 6ab6254:	1007883a 	mov	r3,r2
 6ab6258:	00800344 	movi	r2,13
 6ab625c:	18800015 	stw	r2,0(r3)
 6ab6260:	00000406 	br	6ab6274 <write+0x100>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 6ab6264:	6ab62940 	call	6ab6294 <alt_get_errno>
 6ab6268:	1007883a 	mov	r3,r2
 6ab626c:	00801444 	movi	r2,81
 6ab6270:	18800015 	stw	r2,0(r3)
  }
  return -1;
 6ab6274:	00bfffc4 	movi	r2,-1
 6ab6278:	e0bffe15 	stw	r2,-8(fp)
 6ab627c:	e0bffe17 	ldw	r2,-8(fp)
}
 6ab6280:	e037883a 	mov	sp,fp
 6ab6284:	dfc00117 	ldw	ra,4(sp)
 6ab6288:	df000017 	ldw	fp,0(sp)
 6ab628c:	dec00204 	addi	sp,sp,8
 6ab6290:	f800283a 	ret

06ab6294 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 6ab6294:	defffd04 	addi	sp,sp,-12
 6ab6298:	dfc00215 	stw	ra,8(sp)
 6ab629c:	df000115 	stw	fp,4(sp)
 6ab62a0:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 6ab62a4:	0081ab34 	movhi	r2,1708
 6ab62a8:	10a9bb04 	addi	r2,r2,-22804
 6ab62ac:	10800017 	ldw	r2,0(r2)
 6ab62b0:	1005003a 	cmpeq	r2,r2,zero
 6ab62b4:	1000061e 	bne	r2,zero,6ab62d0 <alt_get_errno+0x3c>
 6ab62b8:	0081ab34 	movhi	r2,1708
 6ab62bc:	10a9bb04 	addi	r2,r2,-22804
 6ab62c0:	10800017 	ldw	r2,0(r2)
 6ab62c4:	103ee83a 	callr	r2
 6ab62c8:	e0bfff15 	stw	r2,-4(fp)
 6ab62cc:	00000306 	br	6ab62dc <alt_get_errno+0x48>
 6ab62d0:	0081ab34 	movhi	r2,1708
 6ab62d4:	10b08504 	addi	r2,r2,-15852
 6ab62d8:	e0bfff15 	stw	r2,-4(fp)
 6ab62dc:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab62e0:	e037883a 	mov	sp,fp
 6ab62e4:	dfc00117 	ldw	ra,4(sp)
 6ab62e8:	df000017 	ldw	fp,0(sp)
 6ab62ec:	dec00204 	addi	sp,sp,8
 6ab62f0:	f800283a 	ret

06ab62f4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 6ab62f4:	defffd04 	addi	sp,sp,-12
 6ab62f8:	dfc00215 	stw	ra,8(sp)
 6ab62fc:	df000115 	stw	fp,4(sp)
 6ab6300:	df000104 	addi	fp,sp,4
 6ab6304:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU_5, cpu_5);
 6ab6308:	6ab86980 	call	6ab8698 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 6ab630c:	00800044 	movi	r2,1
 6ab6310:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 6ab6314:	e037883a 	mov	sp,fp
 6ab6318:	dfc00117 	ldw	ra,4(sp)
 6ab631c:	df000017 	ldw	fp,0(sp)
 6ab6320:	dec00204 	addi	sp,sp,8
 6ab6324:	f800283a 	ret

06ab6328 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 6ab6328:	defffe04 	addi	sp,sp,-8
 6ab632c:	dfc00115 	stw	ra,4(sp)
 6ab6330:	df000015 	stw	fp,0(sp)
 6ab6334:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_5, timer_5);
 6ab6338:	01020034 	movhi	r4,2048
 6ab633c:	21040804 	addi	r4,r4,4128
 6ab6340:	000b883a 	mov	r5,zero
 6ab6344:	01800044 	movi	r6,1
 6ab6348:	01c0fa04 	movi	r7,1000
 6ab634c:	6ab74440 	call	6ab7444 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_FIFO_INIT ( FIFO_STAGE1_TO_6, fifo_stage1_to_6);
    ALTERA_AVALON_FIFO_INIT ( FIFO_STAGE5_TO_6, fifo_stage5_to_6);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_5, jtag_uart_5);
 6ab6350:	0101ab34 	movhi	r4,1708
 6ab6354:	21259804 	addi	r4,r4,-27040
 6ab6358:	000b883a 	mov	r5,zero
 6ab635c:	01800404 	movi	r6,16
 6ab6360:	6ab6a700 	call	6ab6a70 <altera_avalon_jtag_uart_init>
 6ab6364:	0101ab34 	movhi	r4,1708
 6ab6368:	21258e04 	addi	r4,r4,-27080
 6ab636c:	6ab63900 	call	6ab6390 <alt_dev_reg>
    ALTERA_HOSTFS_INIT ( ALTERA_HOSTFS, altera_hostfs);
 6ab6370:	0101ab34 	movhi	r4,1708
 6ab6374:	2129a604 	addi	r4,r4,-22888
 6ab6378:	6ab7f740 	call	6ab7f74 <alt_fs_reg>
}
 6ab637c:	e037883a 	mov	sp,fp
 6ab6380:	dfc00117 	ldw	ra,4(sp)
 6ab6384:	df000017 	ldw	fp,0(sp)
 6ab6388:	dec00204 	addi	sp,sp,8
 6ab638c:	f800283a 	ret

06ab6390 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 6ab6390:	defffd04 	addi	sp,sp,-12
 6ab6394:	dfc00215 	stw	ra,8(sp)
 6ab6398:	df000115 	stw	fp,4(sp)
 6ab639c:	df000104 	addi	fp,sp,4
 6ab63a0:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 6ab63a4:	e13fff17 	ldw	r4,-4(fp)
 6ab63a8:	0141ab34 	movhi	r5,1708
 6ab63ac:	2969b804 	addi	r5,r5,-22816
 6ab63b0:	6ab7be40 	call	6ab7be4 <alt_dev_llist_insert>
}
 6ab63b4:	e037883a 	mov	sp,fp
 6ab63b8:	dfc00117 	ldw	ra,4(sp)
 6ab63bc:	df000017 	ldw	fp,0(sp)
 6ab63c0:	dec00204 	addi	sp,sp,8
 6ab63c4:	f800283a 	ret

06ab63c8 <altera_avalon_fifo_init>:



int altera_avalon_fifo_init(alt_u32 address, alt_u32 ienable,
                            alt_u32 emptymark, alt_u32 fullmark)
{
 6ab63c8:	defff904 	addi	sp,sp,-28
 6ab63cc:	dfc00615 	stw	ra,24(sp)
 6ab63d0:	df000515 	stw	fp,20(sp)
 6ab63d4:	df000504 	addi	fp,sp,20
 6ab63d8:	e13ffb15 	stw	r4,-20(fp)
 6ab63dc:	e17ffc15 	stw	r5,-16(fp)
 6ab63e0:	e1bffd15 	stw	r6,-12(fp)
 6ab63e4:	e1fffe15 	stw	r7,-8(fp)
    if(altera_avalon_fifo_clear_event(address, ALTERA_AVALON_FIFO_EVENT_ALL) != ALTERA_AVALON_FIFO_OK)
 6ab63e8:	e13ffb17 	ldw	r4,-20(fp)
 6ab63ec:	01400fc4 	movi	r5,63
 6ab63f0:	6ab65b80 	call	6ab65b8 <altera_avalon_fifo_clear_event>
 6ab63f4:	1005003a 	cmpeq	r2,r2,zero
 6ab63f8:	1000031e 	bne	r2,zero,6ab6408 <altera_avalon_fifo_init+0x40>
    {
        return ALTERA_AVALON_FIFO_EVENT_CLEAR_ERROR;
 6ab63fc:	00bfffc4 	movi	r2,-1
 6ab6400:	e0bfff15 	stw	r2,-4(fp)
 6ab6404:	00001906 	br	6ab646c <altera_avalon_fifo_init+0xa4>
    }

    if( altera_avalon_fifo_write_ienable(address, ienable) != ALTERA_AVALON_FIFO_OK)
 6ab6408:	e13ffb17 	ldw	r4,-20(fp)
 6ab640c:	e17ffc17 	ldw	r5,-16(fp)
 6ab6410:	6ab66200 	call	6ab6620 <altera_avalon_fifo_write_ienable>
 6ab6414:	1005003a 	cmpeq	r2,r2,zero
 6ab6418:	1000031e 	bne	r2,zero,6ab6428 <altera_avalon_fifo_init+0x60>
    {
         return ALTERA_AVALON_FIFO_IENABLE_WRITE_ERROR;
 6ab641c:	00bfff84 	movi	r2,-2
 6ab6420:	e0bfff15 	stw	r2,-4(fp)
 6ab6424:	00001106 	br	6ab646c <altera_avalon_fifo_init+0xa4>
    }

    if( altera_avalon_fifo_write_almostfull(address, fullmark) != ALTERA_AVALON_FIFO_OK)
 6ab6428:	e13ffb17 	ldw	r4,-20(fp)
 6ab642c:	e17ffe17 	ldw	r5,-8(fp)
 6ab6430:	6ab66800 	call	6ab6680 <altera_avalon_fifo_write_almostfull>
 6ab6434:	1005003a 	cmpeq	r2,r2,zero
 6ab6438:	1000031e 	bne	r2,zero,6ab6448 <altera_avalon_fifo_init+0x80>
    {
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
 6ab643c:	00bfff44 	movi	r2,-3
 6ab6440:	e0bfff15 	stw	r2,-4(fp)
 6ab6444:	00000906 	br	6ab646c <altera_avalon_fifo_init+0xa4>
    }
  
    if( altera_avalon_fifo_write_almostempty(address, emptymark) != ALTERA_AVALON_FIFO_OK)
 6ab6448:	e13ffb17 	ldw	r4,-20(fp)
 6ab644c:	e17ffd17 	ldw	r5,-12(fp)
 6ab6450:	6ab66e00 	call	6ab66e0 <altera_avalon_fifo_write_almostempty>
 6ab6454:	1005003a 	cmpeq	r2,r2,zero
 6ab6458:	1000031e 	bne	r2,zero,6ab6468 <altera_avalon_fifo_init+0xa0>
    {
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
 6ab645c:	00bfff44 	movi	r2,-3
 6ab6460:	e0bfff15 	stw	r2,-4(fp)
 6ab6464:	00000106 	br	6ab646c <altera_avalon_fifo_init+0xa4>
    }

    return ALTERA_AVALON_FIFO_OK;
 6ab6468:	e03fff15 	stw	zero,-4(fp)
 6ab646c:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab6470:	e037883a 	mov	sp,fp
 6ab6474:	dfc00117 	ldw	ra,4(sp)
 6ab6478:	df000017 	ldw	fp,0(sp)
 6ab647c:	dec00204 	addi	sp,sp,8
 6ab6480:	f800283a 	ret

06ab6484 <altera_avalon_fifo_read_status>:

int altera_avalon_fifo_read_status(alt_u32 address, alt_u32 mask)
{
 6ab6484:	defffd04 	addi	sp,sp,-12
 6ab6488:	df000215 	stw	fp,8(sp)
 6ab648c:	df000204 	addi	fp,sp,8
 6ab6490:	e13ffe15 	stw	r4,-8(fp)
 6ab6494:	e17fff15 	stw	r5,-4(fp)
    return (IORD_ALTERA_AVALON_FIFO_STATUS(address) & mask);
 6ab6498:	e0bffe17 	ldw	r2,-8(fp)
 6ab649c:	10800104 	addi	r2,r2,4
 6ab64a0:	10800037 	ldwio	r2,0(r2)
 6ab64a4:	1007883a 	mov	r3,r2
 6ab64a8:	e0bfff17 	ldw	r2,-4(fp)
 6ab64ac:	1884703a 	and	r2,r3,r2
}
 6ab64b0:	e037883a 	mov	sp,fp
 6ab64b4:	df000017 	ldw	fp,0(sp)
 6ab64b8:	dec00104 	addi	sp,sp,4
 6ab64bc:	f800283a 	ret

06ab64c0 <altera_avalon_fifo_read_ienable>:

int altera_avalon_fifo_read_ienable(alt_u32 address, alt_u32 mask)
{
 6ab64c0:	defffd04 	addi	sp,sp,-12
 6ab64c4:	df000215 	stw	fp,8(sp)
 6ab64c8:	df000204 	addi	fp,sp,8
 6ab64cc:	e13ffe15 	stw	r4,-8(fp)
 6ab64d0:	e17fff15 	stw	r5,-4(fp)
	
    return (IORD_ALTERA_AVALON_FIFO_IENABLE(address) & mask);
 6ab64d4:	e0bffe17 	ldw	r2,-8(fp)
 6ab64d8:	10800304 	addi	r2,r2,12
 6ab64dc:	10800037 	ldwio	r2,0(r2)
 6ab64e0:	1007883a 	mov	r3,r2
 6ab64e4:	e0bfff17 	ldw	r2,-4(fp)
 6ab64e8:	1884703a 	and	r2,r3,r2
}
 6ab64ec:	e037883a 	mov	sp,fp
 6ab64f0:	df000017 	ldw	fp,0(sp)
 6ab64f4:	dec00104 	addi	sp,sp,4
 6ab64f8:	f800283a 	ret

06ab64fc <altera_avalon_fifo_read_almostfull>:

int altera_avalon_fifo_read_almostfull(alt_u32 address)
{
 6ab64fc:	defffe04 	addi	sp,sp,-8
 6ab6500:	df000115 	stw	fp,4(sp)
 6ab6504:	df000104 	addi	fp,sp,4
 6ab6508:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_ALMOSTFULL(address);
 6ab650c:	e0bfff17 	ldw	r2,-4(fp)
 6ab6510:	10800404 	addi	r2,r2,16
 6ab6514:	10800037 	ldwio	r2,0(r2)
}
 6ab6518:	e037883a 	mov	sp,fp
 6ab651c:	df000017 	ldw	fp,0(sp)
 6ab6520:	dec00104 	addi	sp,sp,4
 6ab6524:	f800283a 	ret

06ab6528 <altera_avalon_fifo_read_almostempty>:

int altera_avalon_fifo_read_almostempty(alt_u32 address)
{
 6ab6528:	defffe04 	addi	sp,sp,-8
 6ab652c:	df000115 	stw	fp,4(sp)
 6ab6530:	df000104 	addi	fp,sp,4
 6ab6534:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_ALMOSTEMPTY(address);
 6ab6538:	e0bfff17 	ldw	r2,-4(fp)
 6ab653c:	10800504 	addi	r2,r2,20
 6ab6540:	10800037 	ldwio	r2,0(r2)
}
 6ab6544:	e037883a 	mov	sp,fp
 6ab6548:	df000017 	ldw	fp,0(sp)
 6ab654c:	dec00104 	addi	sp,sp,4
 6ab6550:	f800283a 	ret

06ab6554 <altera_avalon_fifo_read_event>:

int altera_avalon_fifo_read_event(alt_u32 address, alt_u32 mask)
{
 6ab6554:	defffd04 	addi	sp,sp,-12
 6ab6558:	df000215 	stw	fp,8(sp)
 6ab655c:	df000204 	addi	fp,sp,8
 6ab6560:	e13ffe15 	stw	r4,-8(fp)
 6ab6564:	e17fff15 	stw	r5,-4(fp)
    return (IORD_ALTERA_AVALON_FIFO_EVENT(address) & mask);
 6ab6568:	e0bffe17 	ldw	r2,-8(fp)
 6ab656c:	10800204 	addi	r2,r2,8
 6ab6570:	10800037 	ldwio	r2,0(r2)
 6ab6574:	1007883a 	mov	r3,r2
 6ab6578:	e0bfff17 	ldw	r2,-4(fp)
 6ab657c:	1884703a 	and	r2,r3,r2
}
 6ab6580:	e037883a 	mov	sp,fp
 6ab6584:	df000017 	ldw	fp,0(sp)
 6ab6588:	dec00104 	addi	sp,sp,4
 6ab658c:	f800283a 	ret

06ab6590 <altera_avalon_fifo_read_level>:

int altera_avalon_fifo_read_level(alt_u32 address)
{
 6ab6590:	defffe04 	addi	sp,sp,-8
 6ab6594:	df000115 	stw	fp,4(sp)
 6ab6598:	df000104 	addi	fp,sp,4
 6ab659c:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_LEVEL(address);
 6ab65a0:	e0bfff17 	ldw	r2,-4(fp)
 6ab65a4:	10800037 	ldwio	r2,0(r2)
}
 6ab65a8:	e037883a 	mov	sp,fp
 6ab65ac:	df000017 	ldw	fp,0(sp)
 6ab65b0:	dec00104 	addi	sp,sp,4
 6ab65b4:	f800283a 	ret

06ab65b8 <altera_avalon_fifo_clear_event>:

int altera_avalon_fifo_clear_event(alt_u32 address, alt_u32 mask)
{
 6ab65b8:	defffc04 	addi	sp,sp,-16
 6ab65bc:	df000315 	stw	fp,12(sp)
 6ab65c0:	df000304 	addi	fp,sp,12
 6ab65c4:	e13ffd15 	stw	r4,-12(fp)
 6ab65c8:	e17ffe15 	stw	r5,-8(fp)
    IOWR_ALTERA_AVALON_FIFO_EVENT(address, mask);
 6ab65cc:	e0bffd17 	ldw	r2,-12(fp)
 6ab65d0:	10800204 	addi	r2,r2,8
 6ab65d4:	e0fffe17 	ldw	r3,-8(fp)
 6ab65d8:	10c00035 	stwio	r3,0(r2)
    if((IORD_ALTERA_AVALON_FIFO_EVENT(address) & mask) == 0)
 6ab65dc:	e0bffd17 	ldw	r2,-12(fp)
 6ab65e0:	10800204 	addi	r2,r2,8
 6ab65e4:	10800037 	ldwio	r2,0(r2)
 6ab65e8:	1007883a 	mov	r3,r2
 6ab65ec:	e0bffe17 	ldw	r2,-8(fp)
 6ab65f0:	1884703a 	and	r2,r3,r2
 6ab65f4:	1004c03a 	cmpne	r2,r2,zero
 6ab65f8:	1000021e 	bne	r2,zero,6ab6604 <altera_avalon_fifo_clear_event+0x4c>
        return ALTERA_AVALON_FIFO_OK;
 6ab65fc:	e03fff15 	stw	zero,-4(fp)
 6ab6600:	00000206 	br	6ab660c <altera_avalon_fifo_clear_event+0x54>
    else
    return ALTERA_AVALON_FIFO_EVENT_CLEAR_ERROR;
 6ab6604:	00bfffc4 	movi	r2,-1
 6ab6608:	e0bfff15 	stw	r2,-4(fp)
 6ab660c:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab6610:	e037883a 	mov	sp,fp
 6ab6614:	df000017 	ldw	fp,0(sp)
 6ab6618:	dec00104 	addi	sp,sp,4
 6ab661c:	f800283a 	ret

06ab6620 <altera_avalon_fifo_write_ienable>:

int altera_avalon_fifo_write_ienable(alt_u32 address, alt_u32 mask)
{
 6ab6620:	defffc04 	addi	sp,sp,-16
 6ab6624:	df000315 	stw	fp,12(sp)
 6ab6628:	df000304 	addi	fp,sp,12
 6ab662c:	e13ffd15 	stw	r4,-12(fp)
 6ab6630:	e17ffe15 	stw	r5,-8(fp)
    IOWR_ALTERA_AVALON_FIFO_IENABLE(address, mask);
 6ab6634:	e0bffd17 	ldw	r2,-12(fp)
 6ab6638:	10800304 	addi	r2,r2,12
 6ab663c:	e0fffe17 	ldw	r3,-8(fp)
 6ab6640:	10c00035 	stwio	r3,0(r2)
    if(IORD_ALTERA_AVALON_FIFO_IENABLE(address) == mask)
 6ab6644:	e0bffd17 	ldw	r2,-12(fp)
 6ab6648:	10800304 	addi	r2,r2,12
 6ab664c:	10800037 	ldwio	r2,0(r2)
 6ab6650:	1007883a 	mov	r3,r2
 6ab6654:	e0bffe17 	ldw	r2,-8(fp)
 6ab6658:	1880021e 	bne	r3,r2,6ab6664 <altera_avalon_fifo_write_ienable+0x44>
        return ALTERA_AVALON_FIFO_OK;
 6ab665c:	e03fff15 	stw	zero,-4(fp)
 6ab6660:	00000206 	br	6ab666c <altera_avalon_fifo_write_ienable+0x4c>
    else
        return ALTERA_AVALON_FIFO_IENABLE_WRITE_ERROR;
 6ab6664:	00bfff84 	movi	r2,-2
 6ab6668:	e0bfff15 	stw	r2,-4(fp)
 6ab666c:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab6670:	e037883a 	mov	sp,fp
 6ab6674:	df000017 	ldw	fp,0(sp)
 6ab6678:	dec00104 	addi	sp,sp,4
 6ab667c:	f800283a 	ret

06ab6680 <altera_avalon_fifo_write_almostfull>:

int altera_avalon_fifo_write_almostfull(alt_u32 address, alt_u32 data)
{
 6ab6680:	defffc04 	addi	sp,sp,-16
 6ab6684:	df000315 	stw	fp,12(sp)
 6ab6688:	df000304 	addi	fp,sp,12
 6ab668c:	e13ffd15 	stw	r4,-12(fp)
 6ab6690:	e17ffe15 	stw	r5,-8(fp)
    IOWR_ALTERA_AVALON_FIFO_ALMOSTFULL(address, data);
 6ab6694:	e0bffd17 	ldw	r2,-12(fp)
 6ab6698:	10800404 	addi	r2,r2,16
 6ab669c:	e0fffe17 	ldw	r3,-8(fp)
 6ab66a0:	10c00035 	stwio	r3,0(r2)
    if(IORD_ALTERA_AVALON_FIFO_ALMOSTFULL(address) == data)
 6ab66a4:	e0bffd17 	ldw	r2,-12(fp)
 6ab66a8:	10800404 	addi	r2,r2,16
 6ab66ac:	10800037 	ldwio	r2,0(r2)
 6ab66b0:	1007883a 	mov	r3,r2
 6ab66b4:	e0bffe17 	ldw	r2,-8(fp)
 6ab66b8:	1880021e 	bne	r3,r2,6ab66c4 <altera_avalon_fifo_write_almostfull+0x44>
        return ALTERA_AVALON_FIFO_OK;
 6ab66bc:	e03fff15 	stw	zero,-4(fp)
 6ab66c0:	00000206 	br	6ab66cc <altera_avalon_fifo_write_almostfull+0x4c>
    else
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
 6ab66c4:	00bfff44 	movi	r2,-3
 6ab66c8:	e0bfff15 	stw	r2,-4(fp)
 6ab66cc:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab66d0:	e037883a 	mov	sp,fp
 6ab66d4:	df000017 	ldw	fp,0(sp)
 6ab66d8:	dec00104 	addi	sp,sp,4
 6ab66dc:	f800283a 	ret

06ab66e0 <altera_avalon_fifo_write_almostempty>:

int altera_avalon_fifo_write_almostempty(alt_u32 address, alt_u32 data)
{
 6ab66e0:	defffc04 	addi	sp,sp,-16
 6ab66e4:	df000315 	stw	fp,12(sp)
 6ab66e8:	df000304 	addi	fp,sp,12
 6ab66ec:	e13ffd15 	stw	r4,-12(fp)
 6ab66f0:	e17ffe15 	stw	r5,-8(fp)
    IOWR_ALTERA_AVALON_FIFO_ALMOSTEMPTY(address, data);
 6ab66f4:	e0bffd17 	ldw	r2,-12(fp)
 6ab66f8:	10800504 	addi	r2,r2,20
 6ab66fc:	e0fffe17 	ldw	r3,-8(fp)
 6ab6700:	10c00035 	stwio	r3,0(r2)
    if(IORD_ALTERA_AVALON_FIFO_ALMOSTEMPTY(address) == data)
 6ab6704:	e0bffd17 	ldw	r2,-12(fp)
 6ab6708:	10800504 	addi	r2,r2,20
 6ab670c:	10800037 	ldwio	r2,0(r2)
 6ab6710:	1007883a 	mov	r3,r2
 6ab6714:	e0bffe17 	ldw	r2,-8(fp)
 6ab6718:	1880021e 	bne	r3,r2,6ab6724 <altera_avalon_fifo_write_almostempty+0x44>
        return ALTERA_AVALON_FIFO_OK;
 6ab671c:	e03fff15 	stw	zero,-4(fp)
 6ab6720:	00000206 	br	6ab672c <altera_avalon_fifo_write_almostempty+0x4c>
    else
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
 6ab6724:	00bfff44 	movi	r2,-3
 6ab6728:	e0bfff15 	stw	r2,-4(fp)
 6ab672c:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab6730:	e037883a 	mov	sp,fp
 6ab6734:	df000017 	ldw	fp,0(sp)
 6ab6738:	dec00104 	addi	sp,sp,4
 6ab673c:	f800283a 	ret

06ab6740 <altera_avalon_fifo_write_fifo>:

int altera_avalon_fifo_write_fifo(alt_u32 write_address,
                                  alt_u32 ctrl_address,
                                  alt_u32 data)
{
 6ab6740:	defffa04 	addi	sp,sp,-24
 6ab6744:	dfc00515 	stw	ra,20(sp)
 6ab6748:	df000415 	stw	fp,16(sp)
 6ab674c:	df000404 	addi	fp,sp,16
 6ab6750:	e13ffc15 	stw	r4,-16(fp)
 6ab6754:	e17ffd15 	stw	r5,-12(fp)
 6ab6758:	e1bffe15 	stw	r6,-8(fp)
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_F_MSK))
 6ab675c:	e13ffd17 	ldw	r4,-12(fp)
 6ab6760:	01400044 	movi	r5,1
 6ab6764:	6ab64840 	call	6ab6484 <altera_avalon_fifo_read_status>
 6ab6768:	1004c03a 	cmpne	r2,r2,zero
 6ab676c:	1000051e 	bne	r2,zero,6ab6784 <altera_avalon_fifo_write_fifo+0x44>
    {
        IOWR_ALTERA_AVALON_FIFO_DATA(write_address, data);
 6ab6770:	e0bffc17 	ldw	r2,-16(fp)
 6ab6774:	e0fffe17 	ldw	r3,-8(fp)
 6ab6778:	10c00035 	stwio	r3,0(r2)
        return ALTERA_AVALON_FIFO_OK;
 6ab677c:	e03fff15 	stw	zero,-4(fp)
 6ab6780:	00000206 	br	6ab678c <altera_avalon_fifo_write_fifo+0x4c>
    }
    else
    {
        return ALTERA_AVALON_FIFO_FULL;
 6ab6784:	00bfff04 	movi	r2,-4
 6ab6788:	e0bfff15 	stw	r2,-4(fp)
 6ab678c:	e0bfff17 	ldw	r2,-4(fp)
    }
}
 6ab6790:	e037883a 	mov	sp,fp
 6ab6794:	dfc00117 	ldw	ra,4(sp)
 6ab6798:	df000017 	ldw	fp,0(sp)
 6ab679c:	dec00204 	addi	sp,sp,8
 6ab67a0:	f800283a 	ret

06ab67a4 <altera_avalon_read_fifo>:

int altera_avalon_read_fifo(alt_u32 read_address, alt_u32 ctrl_address, int *data)
{
 6ab67a4:	defffa04 	addi	sp,sp,-24
 6ab67a8:	dfc00515 	stw	ra,20(sp)
 6ab67ac:	df000415 	stw	fp,16(sp)
 6ab67b0:	df000404 	addi	fp,sp,16
 6ab67b4:	e13ffd15 	stw	r4,-12(fp)
 6ab67b8:	e17ffe15 	stw	r5,-8(fp)
 6ab67bc:	e1bfff15 	stw	r6,-4(fp)
    int return_val = 0;
 6ab67c0:	e03ffc15 	stw	zero,-16(fp)
    *data = 0;
 6ab67c4:	e0bfff17 	ldw	r2,-4(fp)
 6ab67c8:	10000015 	stw	zero,0(r2)
    
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_E_MSK))
 6ab67cc:	e13ffe17 	ldw	r4,-8(fp)
 6ab67d0:	01400084 	movi	r5,2
 6ab67d4:	6ab64840 	call	6ab6484 <altera_avalon_fifo_read_status>
 6ab67d8:	1004c03a 	cmpne	r2,r2,zero
 6ab67dc:	1000071e 	bne	r2,zero,6ab67fc <altera_avalon_read_fifo+0x58>
    {
        return_val = altera_avalon_fifo_read_level(ctrl_address);
 6ab67e0:	e13ffe17 	ldw	r4,-8(fp)
 6ab67e4:	6ab65900 	call	6ab6590 <altera_avalon_fifo_read_level>
 6ab67e8:	e0bffc15 	stw	r2,-16(fp)
        *data = IORD_ALTERA_AVALON_FIFO_DATA(read_address);
 6ab67ec:	e0bffd17 	ldw	r2,-12(fp)
 6ab67f0:	10c00037 	ldwio	r3,0(r2)
 6ab67f4:	e0bfff17 	ldw	r2,-4(fp)
 6ab67f8:	10c00015 	stw	r3,0(r2)
    
    }
    return return_val;
 6ab67fc:	e0bffc17 	ldw	r2,-16(fp)
}
 6ab6800:	e037883a 	mov	sp,fp
 6ab6804:	dfc00117 	ldw	ra,4(sp)
 6ab6808:	df000017 	ldw	fp,0(sp)
 6ab680c:	dec00204 	addi	sp,sp,8
 6ab6810:	f800283a 	ret

06ab6814 <altera_avalon_fifo_read_fifo>:

int altera_avalon_fifo_read_fifo(alt_u32 read_address, alt_u32 ctrl_address)
{
 6ab6814:	defffb04 	addi	sp,sp,-20
 6ab6818:	dfc00415 	stw	ra,16(sp)
 6ab681c:	df000315 	stw	fp,12(sp)
 6ab6820:	df000304 	addi	fp,sp,12
 6ab6824:	e13ffd15 	stw	r4,-12(fp)
 6ab6828:	e17ffe15 	stw	r5,-8(fp)
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_E_MSK))
 6ab682c:	e13ffe17 	ldw	r4,-8(fp)
 6ab6830:	01400084 	movi	r5,2
 6ab6834:	6ab64840 	call	6ab6484 <altera_avalon_fifo_read_status>
 6ab6838:	1004c03a 	cmpne	r2,r2,zero
 6ab683c:	1000041e 	bne	r2,zero,6ab6850 <altera_avalon_fifo_read_fifo+0x3c>
    {
        return IORD_ALTERA_AVALON_FIFO_DATA(read_address);
 6ab6840:	e0bffd17 	ldw	r2,-12(fp)
 6ab6844:	10800037 	ldwio	r2,0(r2)
 6ab6848:	e0bfff15 	stw	r2,-4(fp)
 6ab684c:	00000106 	br	6ab6854 <altera_avalon_fifo_read_fifo+0x40>
    }
    return 0;
 6ab6850:	e03fff15 	stw	zero,-4(fp)
 6ab6854:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab6858:	e037883a 	mov	sp,fp
 6ab685c:	dfc00117 	ldw	ra,4(sp)
 6ab6860:	df000017 	ldw	fp,0(sp)
 6ab6864:	dec00204 	addi	sp,sp,8
 6ab6868:	f800283a 	ret

06ab686c <altera_avalon_fifo_write_other_info>:

int altera_avalon_fifo_write_other_info(alt_u32 write_address,
					alt_u32 ctrl_address,
					alt_u32 data)
{
 6ab686c:	defffa04 	addi	sp,sp,-24
 6ab6870:	dfc00515 	stw	ra,20(sp)
 6ab6874:	df000415 	stw	fp,16(sp)
 6ab6878:	df000404 	addi	fp,sp,16
 6ab687c:	e13ffc15 	stw	r4,-16(fp)
 6ab6880:	e17ffd15 	stw	r5,-12(fp)
 6ab6884:	e1bffe15 	stw	r6,-8(fp)
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_F_MSK))
 6ab6888:	e13ffd17 	ldw	r4,-12(fp)
 6ab688c:	01400044 	movi	r5,1
 6ab6890:	6ab64840 	call	6ab6484 <altera_avalon_fifo_read_status>
 6ab6894:	1004c03a 	cmpne	r2,r2,zero
 6ab6898:	1000061e 	bne	r2,zero,6ab68b4 <altera_avalon_fifo_write_other_info+0x48>
    {
	IOWR_ALTERA_AVALON_FIFO_OTHER_INFO(write_address, data);
 6ab689c:	e0bffc17 	ldw	r2,-16(fp)
 6ab68a0:	10800104 	addi	r2,r2,4
 6ab68a4:	e0fffe17 	ldw	r3,-8(fp)
 6ab68a8:	10c00035 	stwio	r3,0(r2)
	return ALTERA_AVALON_FIFO_OK;
 6ab68ac:	e03fff15 	stw	zero,-4(fp)
 6ab68b0:	00000206 	br	6ab68bc <altera_avalon_fifo_write_other_info+0x50>
    }
    else
    {
	return ALTERA_AVALON_FIFO_FULL;
 6ab68b4:	00bfff04 	movi	r2,-4
 6ab68b8:	e0bfff15 	stw	r2,-4(fp)
 6ab68bc:	e0bfff17 	ldw	r2,-4(fp)
    }
}
 6ab68c0:	e037883a 	mov	sp,fp
 6ab68c4:	dfc00117 	ldw	ra,4(sp)
 6ab68c8:	df000017 	ldw	fp,0(sp)
 6ab68cc:	dec00204 	addi	sp,sp,8
 6ab68d0:	f800283a 	ret

06ab68d4 <altera_avalon_fifo_read_other_info>:

int altera_avalon_fifo_read_other_info(alt_u32 read_address)
{
 6ab68d4:	defffe04 	addi	sp,sp,-8
 6ab68d8:	df000115 	stw	fp,4(sp)
 6ab68dc:	df000104 	addi	fp,sp,4
 6ab68e0:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_OTHER_INFO(read_address);
 6ab68e4:	e0bfff17 	ldw	r2,-4(fp)
 6ab68e8:	10800104 	addi	r2,r2,4
 6ab68ec:	10800037 	ldwio	r2,0(r2)
}
 6ab68f0:	e037883a 	mov	sp,fp
 6ab68f4:	df000017 	ldw	fp,0(sp)
 6ab68f8:	dec00104 	addi	sp,sp,4
 6ab68fc:	f800283a 	ret

06ab6900 <altera_avalon_fifo_read_backpressure>:

int altera_avalon_fifo_read_backpressure (alt_u32 read_address){
 6ab6900:	defffe04 	addi	sp,sp,-8
 6ab6904:	df000115 	stw	fp,4(sp)
 6ab6908:	df000104 	addi	fp,sp,4
 6ab690c:	e13fff15 	stw	r4,-4(fp)
    // Read data from FIFO directly. If FIFO is empty and backpressure is supported, this call is backpressure.
    return IORD_ALTERA_AVALON_FIFO_DATA(read_address);  
 6ab6910:	e0bfff17 	ldw	r2,-4(fp)
 6ab6914:	10800037 	ldwio	r2,0(r2)
}
 6ab6918:	e037883a 	mov	sp,fp
 6ab691c:	df000017 	ldw	fp,0(sp)
 6ab6920:	dec00104 	addi	sp,sp,4
 6ab6924:	f800283a 	ret

06ab6928 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 6ab6928:	defffa04 	addi	sp,sp,-24
 6ab692c:	dfc00515 	stw	ra,20(sp)
 6ab6930:	df000415 	stw	fp,16(sp)
 6ab6934:	df000404 	addi	fp,sp,16
 6ab6938:	e13ffd15 	stw	r4,-12(fp)
 6ab693c:	e17ffe15 	stw	r5,-8(fp)
 6ab6940:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 6ab6944:	e0bffd17 	ldw	r2,-12(fp)
 6ab6948:	10800017 	ldw	r2,0(r2)
 6ab694c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 6ab6950:	e0bffc17 	ldw	r2,-16(fp)
 6ab6954:	11000a04 	addi	r4,r2,40
 6ab6958:	e0bffd17 	ldw	r2,-12(fp)
 6ab695c:	11c00217 	ldw	r7,8(r2)
 6ab6960:	e17ffe17 	ldw	r5,-8(fp)
 6ab6964:	e1bfff17 	ldw	r6,-4(fp)
 6ab6968:	6ab6f700 	call	6ab6f70 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 6ab696c:	e037883a 	mov	sp,fp
 6ab6970:	dfc00117 	ldw	ra,4(sp)
 6ab6974:	df000017 	ldw	fp,0(sp)
 6ab6978:	dec00204 	addi	sp,sp,8
 6ab697c:	f800283a 	ret

06ab6980 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 6ab6980:	defffa04 	addi	sp,sp,-24
 6ab6984:	dfc00515 	stw	ra,20(sp)
 6ab6988:	df000415 	stw	fp,16(sp)
 6ab698c:	df000404 	addi	fp,sp,16
 6ab6990:	e13ffd15 	stw	r4,-12(fp)
 6ab6994:	e17ffe15 	stw	r5,-8(fp)
 6ab6998:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 6ab699c:	e0bffd17 	ldw	r2,-12(fp)
 6ab69a0:	10800017 	ldw	r2,0(r2)
 6ab69a4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 6ab69a8:	e0bffc17 	ldw	r2,-16(fp)
 6ab69ac:	11000a04 	addi	r4,r2,40
 6ab69b0:	e0bffd17 	ldw	r2,-12(fp)
 6ab69b4:	11c00217 	ldw	r7,8(r2)
 6ab69b8:	e17ffe17 	ldw	r5,-8(fp)
 6ab69bc:	e1bfff17 	ldw	r6,-4(fp)
 6ab69c0:	6ab71940 	call	6ab7194 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 6ab69c4:	e037883a 	mov	sp,fp
 6ab69c8:	dfc00117 	ldw	ra,4(sp)
 6ab69cc:	df000017 	ldw	fp,0(sp)
 6ab69d0:	dec00204 	addi	sp,sp,8
 6ab69d4:	f800283a 	ret

06ab69d8 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 6ab69d8:	defffc04 	addi	sp,sp,-16
 6ab69dc:	dfc00315 	stw	ra,12(sp)
 6ab69e0:	df000215 	stw	fp,8(sp)
 6ab69e4:	df000204 	addi	fp,sp,8
 6ab69e8:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 6ab69ec:	e0bfff17 	ldw	r2,-4(fp)
 6ab69f0:	10800017 	ldw	r2,0(r2)
 6ab69f4:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 6ab69f8:	e0bffe17 	ldw	r2,-8(fp)
 6ab69fc:	11000a04 	addi	r4,r2,40
 6ab6a00:	e0bfff17 	ldw	r2,-4(fp)
 6ab6a04:	11400217 	ldw	r5,8(r2)
 6ab6a08:	6ab6e080 	call	6ab6e08 <altera_avalon_jtag_uart_close>
}
 6ab6a0c:	e037883a 	mov	sp,fp
 6ab6a10:	dfc00117 	ldw	ra,4(sp)
 6ab6a14:	df000017 	ldw	fp,0(sp)
 6ab6a18:	dec00204 	addi	sp,sp,8
 6ab6a1c:	f800283a 	ret

06ab6a20 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 6ab6a20:	defffa04 	addi	sp,sp,-24
 6ab6a24:	dfc00515 	stw	ra,20(sp)
 6ab6a28:	df000415 	stw	fp,16(sp)
 6ab6a2c:	df000404 	addi	fp,sp,16
 6ab6a30:	e13ffd15 	stw	r4,-12(fp)
 6ab6a34:	e17ffe15 	stw	r5,-8(fp)
 6ab6a38:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 6ab6a3c:	e0bffd17 	ldw	r2,-12(fp)
 6ab6a40:	10800017 	ldw	r2,0(r2)
 6ab6a44:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 6ab6a48:	e0bffc17 	ldw	r2,-16(fp)
 6ab6a4c:	11000a04 	addi	r4,r2,40
 6ab6a50:	e17ffe17 	ldw	r5,-8(fp)
 6ab6a54:	e1bfff17 	ldw	r6,-4(fp)
 6ab6a58:	6ab6e7c0 	call	6ab6e7c <altera_avalon_jtag_uart_ioctl>
}
 6ab6a5c:	e037883a 	mov	sp,fp
 6ab6a60:	dfc00117 	ldw	ra,4(sp)
 6ab6a64:	df000017 	ldw	fp,0(sp)
 6ab6a68:	dec00204 	addi	sp,sp,8
 6ab6a6c:	f800283a 	ret

06ab6a70 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 6ab6a70:	defffa04 	addi	sp,sp,-24
 6ab6a74:	dfc00515 	stw	ra,20(sp)
 6ab6a78:	df000415 	stw	fp,16(sp)
 6ab6a7c:	df000404 	addi	fp,sp,16
 6ab6a80:	e13ffd15 	stw	r4,-12(fp)
 6ab6a84:	e17ffe15 	stw	r5,-8(fp)
 6ab6a88:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 6ab6a8c:	e0fffd17 	ldw	r3,-12(fp)
 6ab6a90:	00800044 	movi	r2,1
 6ab6a94:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 6ab6a98:	e0bffd17 	ldw	r2,-12(fp)
 6ab6a9c:	10800017 	ldw	r2,0(r2)
 6ab6aa0:	11000104 	addi	r4,r2,4
 6ab6aa4:	e0bffd17 	ldw	r2,-12(fp)
 6ab6aa8:	10800817 	ldw	r2,32(r2)
 6ab6aac:	1007883a 	mov	r3,r2
 6ab6ab0:	2005883a 	mov	r2,r4
 6ab6ab4:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 6ab6ab8:	e13ffe17 	ldw	r4,-8(fp)
 6ab6abc:	e17fff17 	ldw	r5,-4(fp)
 6ab6ac0:	d8000015 	stw	zero,0(sp)
 6ab6ac4:	0181aaf4 	movhi	r6,1707
 6ab6ac8:	319acc04 	addi	r6,r6,27440
 6ab6acc:	e1fffd17 	ldw	r7,-12(fp)
 6ab6ad0:	6ab80ec0 	call	6ab80ec <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 6ab6ad4:	e0bffd17 	ldw	r2,-12(fp)
 6ab6ad8:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 6ab6adc:	e0bffd17 	ldw	r2,-12(fp)
 6ab6ae0:	11000204 	addi	r4,r2,8
 6ab6ae4:	0081ab34 	movhi	r2,1708
 6ab6ae8:	10b09004 	addi	r2,r2,-15808
 6ab6aec:	10800017 	ldw	r2,0(r2)
 6ab6af0:	100b883a 	mov	r5,r2
 6ab6af4:	0181aaf4 	movhi	r6,1707
 6ab6af8:	319b5604 	addi	r6,r6,27992
 6ab6afc:	e1fffd17 	ldw	r7,-12(fp)
 6ab6b00:	6ab7a740 	call	6ab7a74 <alt_alarm_start>
 6ab6b04:	1004403a 	cmpge	r2,r2,zero
 6ab6b08:	1000041e 	bne	r2,zero,6ab6b1c <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 6ab6b0c:	e0fffd17 	ldw	r3,-12(fp)
 6ab6b10:	00a00034 	movhi	r2,32768
 6ab6b14:	10bfffc4 	addi	r2,r2,-1
 6ab6b18:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 6ab6b1c:	e037883a 	mov	sp,fp
 6ab6b20:	dfc00117 	ldw	ra,4(sp)
 6ab6b24:	df000017 	ldw	fp,0(sp)
 6ab6b28:	dec00204 	addi	sp,sp,8
 6ab6b2c:	f800283a 	ret

06ab6b30 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 6ab6b30:	defff804 	addi	sp,sp,-32
 6ab6b34:	df000715 	stw	fp,28(sp)
 6ab6b38:	df000704 	addi	fp,sp,28
 6ab6b3c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 6ab6b40:	e0bfff17 	ldw	r2,-4(fp)
 6ab6b44:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
 6ab6b48:	e0bffe17 	ldw	r2,-8(fp)
 6ab6b4c:	10800017 	ldw	r2,0(r2)
 6ab6b50:	e0bffd15 	stw	r2,-12(fp)
 6ab6b54:	00000006 	br	6ab6b58 <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 6ab6b58:	e0bffd17 	ldw	r2,-12(fp)
 6ab6b5c:	10800104 	addi	r2,r2,4
 6ab6b60:	10800037 	ldwio	r2,0(r2)
 6ab6b64:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 6ab6b68:	e0bffc17 	ldw	r2,-16(fp)
 6ab6b6c:	1080c00c 	andi	r2,r2,768
 6ab6b70:	1005003a 	cmpeq	r2,r2,zero
 6ab6b74:	1000741e 	bne	r2,zero,6ab6d48 <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 6ab6b78:	e0bffc17 	ldw	r2,-16(fp)
 6ab6b7c:	1080400c 	andi	r2,r2,256
 6ab6b80:	1005003a 	cmpeq	r2,r2,zero
 6ab6b84:	1000351e 	bne	r2,zero,6ab6c5c <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 6ab6b88:	00800074 	movhi	r2,1
 6ab6b8c:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 6ab6b90:	e0bffe17 	ldw	r2,-8(fp)
 6ab6b94:	10800a17 	ldw	r2,40(r2)
 6ab6b98:	10800044 	addi	r2,r2,1
 6ab6b9c:	1081ffcc 	andi	r2,r2,2047
 6ab6ba0:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
 6ab6ba4:	e0bffe17 	ldw	r2,-8(fp)
 6ab6ba8:	10c00b17 	ldw	r3,44(r2)
 6ab6bac:	e0bffa17 	ldw	r2,-24(fp)
 6ab6bb0:	18801626 	beq	r3,r2,6ab6c0c <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 6ab6bb4:	e0bffd17 	ldw	r2,-12(fp)
 6ab6bb8:	10800037 	ldwio	r2,0(r2)
 6ab6bbc:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 6ab6bc0:	e0bffb17 	ldw	r2,-20(fp)
 6ab6bc4:	10a0000c 	andi	r2,r2,32768
 6ab6bc8:	1005003a 	cmpeq	r2,r2,zero
 6ab6bcc:	10000f1e 	bne	r2,zero,6ab6c0c <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 6ab6bd0:	e0bffe17 	ldw	r2,-8(fp)
 6ab6bd4:	10c00a17 	ldw	r3,40(r2)
 6ab6bd8:	e0bffb17 	ldw	r2,-20(fp)
 6ab6bdc:	1009883a 	mov	r4,r2
 6ab6be0:	e0bffe17 	ldw	r2,-8(fp)
 6ab6be4:	1885883a 	add	r2,r3,r2
 6ab6be8:	10800e04 	addi	r2,r2,56
 6ab6bec:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 6ab6bf0:	e0bffe17 	ldw	r2,-8(fp)
 6ab6bf4:	10800a17 	ldw	r2,40(r2)
 6ab6bf8:	10800044 	addi	r2,r2,1
 6ab6bfc:	10c1ffcc 	andi	r3,r2,2047
 6ab6c00:	e0bffe17 	ldw	r2,-8(fp)
 6ab6c04:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 6ab6c08:	003fe106 	br	6ab6b90 <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 6ab6c0c:	e0bffb17 	ldw	r2,-20(fp)
 6ab6c10:	10bfffec 	andhi	r2,r2,65535
 6ab6c14:	1005003a 	cmpeq	r2,r2,zero
 6ab6c18:	1000101e 	bne	r2,zero,6ab6c5c <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 6ab6c1c:	e0bffe17 	ldw	r2,-8(fp)
 6ab6c20:	10c00817 	ldw	r3,32(r2)
 6ab6c24:	00bfff84 	movi	r2,-2
 6ab6c28:	1886703a 	and	r3,r3,r2
 6ab6c2c:	e0bffe17 	ldw	r2,-8(fp)
 6ab6c30:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 6ab6c34:	e0bffd17 	ldw	r2,-12(fp)
 6ab6c38:	11000104 	addi	r4,r2,4
 6ab6c3c:	e0bffe17 	ldw	r2,-8(fp)
 6ab6c40:	10800817 	ldw	r2,32(r2)
 6ab6c44:	1007883a 	mov	r3,r2
 6ab6c48:	2005883a 	mov	r2,r4
 6ab6c4c:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 6ab6c50:	e0bffd17 	ldw	r2,-12(fp)
 6ab6c54:	10800104 	addi	r2,r2,4
 6ab6c58:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 6ab6c5c:	e0bffc17 	ldw	r2,-16(fp)
 6ab6c60:	1080800c 	andi	r2,r2,512
 6ab6c64:	1005003a 	cmpeq	r2,r2,zero
 6ab6c68:	103fbb1e 	bne	r2,zero,6ab6b58 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 6ab6c6c:	e0bffc17 	ldw	r2,-16(fp)
 6ab6c70:	10bfffec 	andhi	r2,r2,65535
 6ab6c74:	1004d43a 	srli	r2,r2,16
 6ab6c78:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 6ab6c7c:	00001506 	br	6ab6cd4 <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 6ab6c80:	e13ffd17 	ldw	r4,-12(fp)
 6ab6c84:	e0bffe17 	ldw	r2,-8(fp)
 6ab6c88:	10c00d17 	ldw	r3,52(r2)
 6ab6c8c:	e0bffe17 	ldw	r2,-8(fp)
 6ab6c90:	1885883a 	add	r2,r3,r2
 6ab6c94:	10820e04 	addi	r2,r2,2104
 6ab6c98:	10800003 	ldbu	r2,0(r2)
 6ab6c9c:	10c03fcc 	andi	r3,r2,255
 6ab6ca0:	18c0201c 	xori	r3,r3,128
 6ab6ca4:	18ffe004 	addi	r3,r3,-128
 6ab6ca8:	2005883a 	mov	r2,r4
 6ab6cac:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 6ab6cb0:	e0bffe17 	ldw	r2,-8(fp)
 6ab6cb4:	10800d17 	ldw	r2,52(r2)
 6ab6cb8:	10800044 	addi	r2,r2,1
 6ab6cbc:	10c1ffcc 	andi	r3,r2,2047
 6ab6cc0:	e0bffe17 	ldw	r2,-8(fp)
 6ab6cc4:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 6ab6cc8:	e0bff917 	ldw	r2,-28(fp)
 6ab6ccc:	10bfffc4 	addi	r2,r2,-1
 6ab6cd0:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 6ab6cd4:	e0bff917 	ldw	r2,-28(fp)
 6ab6cd8:	1005003a 	cmpeq	r2,r2,zero
 6ab6cdc:	1000051e 	bne	r2,zero,6ab6cf4 <altera_avalon_jtag_uart_irq+0x1c4>
 6ab6ce0:	e0bffe17 	ldw	r2,-8(fp)
 6ab6ce4:	10c00d17 	ldw	r3,52(r2)
 6ab6ce8:	e0bffe17 	ldw	r2,-8(fp)
 6ab6cec:	10800c17 	ldw	r2,48(r2)
 6ab6cf0:	18bfe31e 	bne	r3,r2,6ab6c80 <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 6ab6cf4:	e0bff917 	ldw	r2,-28(fp)
 6ab6cf8:	1005003a 	cmpeq	r2,r2,zero
 6ab6cfc:	103f961e 	bne	r2,zero,6ab6b58 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 6ab6d00:	e0bffe17 	ldw	r2,-8(fp)
 6ab6d04:	10c00817 	ldw	r3,32(r2)
 6ab6d08:	00bfff44 	movi	r2,-3
 6ab6d0c:	1886703a 	and	r3,r3,r2
 6ab6d10:	e0bffe17 	ldw	r2,-8(fp)
 6ab6d14:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 6ab6d18:	e0bffe17 	ldw	r2,-8(fp)
 6ab6d1c:	10800017 	ldw	r2,0(r2)
 6ab6d20:	11000104 	addi	r4,r2,4
 6ab6d24:	e0bffe17 	ldw	r2,-8(fp)
 6ab6d28:	10800817 	ldw	r2,32(r2)
 6ab6d2c:	1007883a 	mov	r3,r2
 6ab6d30:	2005883a 	mov	r2,r4
 6ab6d34:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 6ab6d38:	e0bffd17 	ldw	r2,-12(fp)
 6ab6d3c:	10800104 	addi	r2,r2,4
 6ab6d40:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 6ab6d44:	003f8406 	br	6ab6b58 <altera_avalon_jtag_uart_irq+0x28>
}
 6ab6d48:	e037883a 	mov	sp,fp
 6ab6d4c:	df000017 	ldw	fp,0(sp)
 6ab6d50:	dec00104 	addi	sp,sp,4
 6ab6d54:	f800283a 	ret

06ab6d58 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 6ab6d58:	defffc04 	addi	sp,sp,-16
 6ab6d5c:	df000315 	stw	fp,12(sp)
 6ab6d60:	df000304 	addi	fp,sp,12
 6ab6d64:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 6ab6d68:	e0bfff17 	ldw	r2,-4(fp)
 6ab6d6c:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 6ab6d70:	e0bffe17 	ldw	r2,-8(fp)
 6ab6d74:	10800017 	ldw	r2,0(r2)
 6ab6d78:	10800104 	addi	r2,r2,4
 6ab6d7c:	10800037 	ldwio	r2,0(r2)
 6ab6d80:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 6ab6d84:	e0bffd17 	ldw	r2,-12(fp)
 6ab6d88:	1081000c 	andi	r2,r2,1024
 6ab6d8c:	1005003a 	cmpeq	r2,r2,zero
 6ab6d90:	10000c1e 	bne	r2,zero,6ab6dc4 <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 6ab6d94:	e0bffe17 	ldw	r2,-8(fp)
 6ab6d98:	10800017 	ldw	r2,0(r2)
 6ab6d9c:	11000104 	addi	r4,r2,4
 6ab6da0:	e0bffe17 	ldw	r2,-8(fp)
 6ab6da4:	10800817 	ldw	r2,32(r2)
 6ab6da8:	10810014 	ori	r2,r2,1024
 6ab6dac:	1007883a 	mov	r3,r2
 6ab6db0:	2005883a 	mov	r2,r4
 6ab6db4:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
 6ab6db8:	e0bffe17 	ldw	r2,-8(fp)
 6ab6dbc:	10000915 	stw	zero,36(r2)
 6ab6dc0:	00000a06 	br	6ab6dec <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 6ab6dc4:	e0bffe17 	ldw	r2,-8(fp)
 6ab6dc8:	10c00917 	ldw	r3,36(r2)
 6ab6dcc:	00a00034 	movhi	r2,32768
 6ab6dd0:	10bfff04 	addi	r2,r2,-4
 6ab6dd4:	10c00536 	bltu	r2,r3,6ab6dec <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
 6ab6dd8:	e0bffe17 	ldw	r2,-8(fp)
 6ab6ddc:	10800917 	ldw	r2,36(r2)
 6ab6de0:	10c00044 	addi	r3,r2,1
 6ab6de4:	e0bffe17 	ldw	r2,-8(fp)
 6ab6de8:	10c00915 	stw	r3,36(r2)
 6ab6dec:	0081ab34 	movhi	r2,1708
 6ab6df0:	10b09004 	addi	r2,r2,-15808
 6ab6df4:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 6ab6df8:	e037883a 	mov	sp,fp
 6ab6dfc:	df000017 	ldw	fp,0(sp)
 6ab6e00:	dec00104 	addi	sp,sp,4
 6ab6e04:	f800283a 	ret

06ab6e08 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 6ab6e08:	defffc04 	addi	sp,sp,-16
 6ab6e0c:	df000315 	stw	fp,12(sp)
 6ab6e10:	df000304 	addi	fp,sp,12
 6ab6e14:	e13ffd15 	stw	r4,-12(fp)
 6ab6e18:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 6ab6e1c:	00000706 	br	6ab6e3c <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
 6ab6e20:	e0bffe17 	ldw	r2,-8(fp)
 6ab6e24:	1090000c 	andi	r2,r2,16384
 6ab6e28:	1005003a 	cmpeq	r2,r2,zero
 6ab6e2c:	1000031e 	bne	r2,zero,6ab6e3c <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
 6ab6e30:	00bffd44 	movi	r2,-11
 6ab6e34:	e0bfff15 	stw	r2,-4(fp)
 6ab6e38:	00000b06 	br	6ab6e68 <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 6ab6e3c:	e0bffd17 	ldw	r2,-12(fp)
 6ab6e40:	10c00d17 	ldw	r3,52(r2)
 6ab6e44:	e0bffd17 	ldw	r2,-12(fp)
 6ab6e48:	10800c17 	ldw	r2,48(r2)
 6ab6e4c:	18800526 	beq	r3,r2,6ab6e64 <altera_avalon_jtag_uart_close+0x5c>
 6ab6e50:	e0bffd17 	ldw	r2,-12(fp)
 6ab6e54:	10c00917 	ldw	r3,36(r2)
 6ab6e58:	e0bffd17 	ldw	r2,-12(fp)
 6ab6e5c:	10800117 	ldw	r2,4(r2)
 6ab6e60:	18bfef36 	bltu	r3,r2,6ab6e20 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 6ab6e64:	e03fff15 	stw	zero,-4(fp)
 6ab6e68:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab6e6c:	e037883a 	mov	sp,fp
 6ab6e70:	df000017 	ldw	fp,0(sp)
 6ab6e74:	dec00104 	addi	sp,sp,4
 6ab6e78:	f800283a 	ret

06ab6e7c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 6ab6e7c:	defff804 	addi	sp,sp,-32
 6ab6e80:	df000715 	stw	fp,28(sp)
 6ab6e84:	df000704 	addi	fp,sp,28
 6ab6e88:	e13ffb15 	stw	r4,-20(fp)
 6ab6e8c:	e17ffc15 	stw	r5,-16(fp)
 6ab6e90:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
 6ab6e94:	00bff9c4 	movi	r2,-25
 6ab6e98:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
 6ab6e9c:	e0bffc17 	ldw	r2,-16(fp)
 6ab6ea0:	e0bfff15 	stw	r2,-4(fp)
 6ab6ea4:	e0ffff17 	ldw	r3,-4(fp)
 6ab6ea8:	189a8060 	cmpeqi	r2,r3,27137
 6ab6eac:	1000041e 	bne	r2,zero,6ab6ec0 <altera_avalon_jtag_uart_ioctl+0x44>
 6ab6eb0:	e0ffff17 	ldw	r3,-4(fp)
 6ab6eb4:	189a80a0 	cmpeqi	r2,r3,27138
 6ab6eb8:	10001b1e 	bne	r2,zero,6ab6f28 <altera_avalon_jtag_uart_ioctl+0xac>
 6ab6ebc:	00002706 	br	6ab6f5c <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 6ab6ec0:	e0bffb17 	ldw	r2,-20(fp)
 6ab6ec4:	10c00117 	ldw	r3,4(r2)
 6ab6ec8:	00a00034 	movhi	r2,32768
 6ab6ecc:	10bfffc4 	addi	r2,r2,-1
 6ab6ed0:	18802226 	beq	r3,r2,6ab6f5c <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
 6ab6ed4:	e0bffd17 	ldw	r2,-12(fp)
 6ab6ed8:	10800017 	ldw	r2,0(r2)
 6ab6edc:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 6ab6ee0:	e0bff917 	ldw	r2,-28(fp)
 6ab6ee4:	10800090 	cmplti	r2,r2,2
 6ab6ee8:	1000071e 	bne	r2,zero,6ab6f08 <altera_avalon_jtag_uart_ioctl+0x8c>
 6ab6eec:	e0fff917 	ldw	r3,-28(fp)
 6ab6ef0:	00a00034 	movhi	r2,32768
 6ab6ef4:	10bfffc4 	addi	r2,r2,-1
 6ab6ef8:	18800326 	beq	r3,r2,6ab6f08 <altera_avalon_jtag_uart_ioctl+0x8c>
 6ab6efc:	e0bff917 	ldw	r2,-28(fp)
 6ab6f00:	e0bffe15 	stw	r2,-8(fp)
 6ab6f04:	00000306 	br	6ab6f14 <altera_avalon_jtag_uart_ioctl+0x98>
 6ab6f08:	00e00034 	movhi	r3,32768
 6ab6f0c:	18ffff84 	addi	r3,r3,-2
 6ab6f10:	e0fffe15 	stw	r3,-8(fp)
 6ab6f14:	e0bffb17 	ldw	r2,-20(fp)
 6ab6f18:	e0fffe17 	ldw	r3,-8(fp)
 6ab6f1c:	10c00115 	stw	r3,4(r2)
      rc = 0;
 6ab6f20:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
 6ab6f24:	00000d06 	br	6ab6f5c <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 6ab6f28:	e0bffb17 	ldw	r2,-20(fp)
 6ab6f2c:	10c00117 	ldw	r3,4(r2)
 6ab6f30:	00a00034 	movhi	r2,32768
 6ab6f34:	10bfffc4 	addi	r2,r2,-1
 6ab6f38:	18800826 	beq	r3,r2,6ab6f5c <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 6ab6f3c:	e13ffd17 	ldw	r4,-12(fp)
 6ab6f40:	e0bffb17 	ldw	r2,-20(fp)
 6ab6f44:	10c00917 	ldw	r3,36(r2)
 6ab6f48:	e0bffb17 	ldw	r2,-20(fp)
 6ab6f4c:	10800117 	ldw	r2,4(r2)
 6ab6f50:	1885803a 	cmpltu	r2,r3,r2
 6ab6f54:	20800015 	stw	r2,0(r4)
      rc = 0;
 6ab6f58:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
 6ab6f5c:	e0bffa17 	ldw	r2,-24(fp)
}
 6ab6f60:	e037883a 	mov	sp,fp
 6ab6f64:	df000017 	ldw	fp,0(sp)
 6ab6f68:	dec00104 	addi	sp,sp,4
 6ab6f6c:	f800283a 	ret

06ab6f70 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 6ab6f70:	defff204 	addi	sp,sp,-56
 6ab6f74:	dfc00d15 	stw	ra,52(sp)
 6ab6f78:	df000c15 	stw	fp,48(sp)
 6ab6f7c:	df000c04 	addi	fp,sp,48
 6ab6f80:	e13ffb15 	stw	r4,-20(fp)
 6ab6f84:	e17ffc15 	stw	r5,-16(fp)
 6ab6f88:	e1bffd15 	stw	r6,-12(fp)
 6ab6f8c:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
 6ab6f90:	e0bffc17 	ldw	r2,-16(fp)
 6ab6f94:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 6ab6f98:	00004806 	br	6ab70bc <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 6ab6f9c:	e0bffb17 	ldw	r2,-20(fp)
 6ab6fa0:	10800a17 	ldw	r2,40(r2)
 6ab6fa4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 6ab6fa8:	e0bffb17 	ldw	r2,-20(fp)
 6ab6fac:	10800b17 	ldw	r2,44(r2)
 6ab6fb0:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
 6ab6fb4:	e0fff717 	ldw	r3,-36(fp)
 6ab6fb8:	e0bff617 	ldw	r2,-40(fp)
 6ab6fbc:	18800536 	bltu	r3,r2,6ab6fd4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 6ab6fc0:	e0bff717 	ldw	r2,-36(fp)
 6ab6fc4:	e0fff617 	ldw	r3,-40(fp)
 6ab6fc8:	10c5c83a 	sub	r2,r2,r3
 6ab6fcc:	e0bff815 	stw	r2,-32(fp)
 6ab6fd0:	00000406 	br	6ab6fe4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 6ab6fd4:	00820004 	movi	r2,2048
 6ab6fd8:	e0fff617 	ldw	r3,-40(fp)
 6ab6fdc:	10c5c83a 	sub	r2,r2,r3
 6ab6fe0:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
 6ab6fe4:	e0bff817 	ldw	r2,-32(fp)
 6ab6fe8:	1005003a 	cmpeq	r2,r2,zero
 6ab6fec:	10001f1e 	bne	r2,zero,6ab706c <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
 6ab6ff0:	e0fffd17 	ldw	r3,-12(fp)
 6ab6ff4:	e0bff817 	ldw	r2,-32(fp)
 6ab6ff8:	1880022e 	bgeu	r3,r2,6ab7004 <altera_avalon_jtag_uart_read+0x94>
        n = space;
 6ab6ffc:	e0bffd17 	ldw	r2,-12(fp)
 6ab7000:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 6ab7004:	e0bffb17 	ldw	r2,-20(fp)
 6ab7008:	10c00e04 	addi	r3,r2,56
 6ab700c:	e0bff617 	ldw	r2,-40(fp)
 6ab7010:	1887883a 	add	r3,r3,r2
 6ab7014:	e0bffa17 	ldw	r2,-24(fp)
 6ab7018:	1009883a 	mov	r4,r2
 6ab701c:	180b883a 	mov	r5,r3
 6ab7020:	e1bff817 	ldw	r6,-32(fp)
 6ab7024:	6ab15980 	call	6ab1598 <memcpy>
      ptr   += n;
 6ab7028:	e0fff817 	ldw	r3,-32(fp)
 6ab702c:	e0bffa17 	ldw	r2,-24(fp)
 6ab7030:	10c5883a 	add	r2,r2,r3
 6ab7034:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
 6ab7038:	e0fffd17 	ldw	r3,-12(fp)
 6ab703c:	e0bff817 	ldw	r2,-32(fp)
 6ab7040:	1885c83a 	sub	r2,r3,r2
 6ab7044:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 6ab7048:	e0fff617 	ldw	r3,-40(fp)
 6ab704c:	e0bff817 	ldw	r2,-32(fp)
 6ab7050:	1885883a 	add	r2,r3,r2
 6ab7054:	10c1ffcc 	andi	r3,r2,2047
 6ab7058:	e0bffb17 	ldw	r2,-20(fp)
 6ab705c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 6ab7060:	e0bffd17 	ldw	r2,-12(fp)
 6ab7064:	10800048 	cmpgei	r2,r2,1
 6ab7068:	103fcc1e 	bne	r2,zero,6ab6f9c <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
 6ab706c:	e0fffa17 	ldw	r3,-24(fp)
 6ab7070:	e0bffc17 	ldw	r2,-16(fp)
 6ab7074:	1880141e 	bne	r3,r2,6ab70c8 <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 6ab7078:	e0bffe17 	ldw	r2,-8(fp)
 6ab707c:	1090000c 	andi	r2,r2,16384
 6ab7080:	1004c03a 	cmpne	r2,r2,zero
 6ab7084:	1000101e 	bne	r2,zero,6ab70c8 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 6ab7088:	e0bffb17 	ldw	r2,-20(fp)
 6ab708c:	10c00a17 	ldw	r3,40(r2)
 6ab7090:	e0bff717 	ldw	r2,-36(fp)
 6ab7094:	1880051e 	bne	r3,r2,6ab70ac <altera_avalon_jtag_uart_read+0x13c>
 6ab7098:	e0bffb17 	ldw	r2,-20(fp)
 6ab709c:	10c00917 	ldw	r3,36(r2)
 6ab70a0:	e0bffb17 	ldw	r2,-20(fp)
 6ab70a4:	10800117 	ldw	r2,4(r2)
 6ab70a8:	18bff736 	bltu	r3,r2,6ab7088 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 6ab70ac:	e0bffb17 	ldw	r2,-20(fp)
 6ab70b0:	10c00a17 	ldw	r3,40(r2)
 6ab70b4:	e0bff717 	ldw	r2,-36(fp)
 6ab70b8:	18800326 	beq	r3,r2,6ab70c8 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 6ab70bc:	e0bffd17 	ldw	r2,-12(fp)
 6ab70c0:	10800048 	cmpgei	r2,r2,1
 6ab70c4:	103fb51e 	bne	r2,zero,6ab6f9c <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 6ab70c8:	e0fffa17 	ldw	r3,-24(fp)
 6ab70cc:	e0bffc17 	ldw	r2,-16(fp)
 6ab70d0:	18801926 	beq	r3,r2,6ab7138 <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 6ab70d4:	0005303a 	rdctl	r2,status
 6ab70d8:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 6ab70dc:	e0fff517 	ldw	r3,-44(fp)
 6ab70e0:	00bfff84 	movi	r2,-2
 6ab70e4:	1884703a 	and	r2,r3,r2
 6ab70e8:	1001703a 	wrctl	status,r2
  
  return context;
 6ab70ec:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 6ab70f0:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 6ab70f4:	e0bffb17 	ldw	r2,-20(fp)
 6ab70f8:	10800817 	ldw	r2,32(r2)
 6ab70fc:	10c00054 	ori	r3,r2,1
 6ab7100:	e0bffb17 	ldw	r2,-20(fp)
 6ab7104:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 6ab7108:	e0bffb17 	ldw	r2,-20(fp)
 6ab710c:	10800017 	ldw	r2,0(r2)
 6ab7110:	11000104 	addi	r4,r2,4
 6ab7114:	e0bffb17 	ldw	r2,-20(fp)
 6ab7118:	10800817 	ldw	r2,32(r2)
 6ab711c:	1007883a 	mov	r3,r2
 6ab7120:	2005883a 	mov	r2,r4
 6ab7124:	10c00035 	stwio	r3,0(r2)
 6ab7128:	e0bff917 	ldw	r2,-28(fp)
 6ab712c:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 6ab7130:	e0bff417 	ldw	r2,-48(fp)
 6ab7134:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 6ab7138:	e0fffa17 	ldw	r3,-24(fp)
 6ab713c:	e0bffc17 	ldw	r2,-16(fp)
 6ab7140:	18800526 	beq	r3,r2,6ab7158 <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
 6ab7144:	e0fffa17 	ldw	r3,-24(fp)
 6ab7148:	e0bffc17 	ldw	r2,-16(fp)
 6ab714c:	1887c83a 	sub	r3,r3,r2
 6ab7150:	e0ffff15 	stw	r3,-4(fp)
 6ab7154:	00000906 	br	6ab717c <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
 6ab7158:	e0bffe17 	ldw	r2,-8(fp)
 6ab715c:	1090000c 	andi	r2,r2,16384
 6ab7160:	1005003a 	cmpeq	r2,r2,zero
 6ab7164:	1000031e 	bne	r2,zero,6ab7174 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 6ab7168:	00bffd44 	movi	r2,-11
 6ab716c:	e0bfff15 	stw	r2,-4(fp)
 6ab7170:	00000206 	br	6ab717c <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
 6ab7174:	00bffec4 	movi	r2,-5
 6ab7178:	e0bfff15 	stw	r2,-4(fp)
 6ab717c:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab7180:	e037883a 	mov	sp,fp
 6ab7184:	dfc00117 	ldw	ra,4(sp)
 6ab7188:	df000017 	ldw	fp,0(sp)
 6ab718c:	dec00204 	addi	sp,sp,8
 6ab7190:	f800283a 	ret

06ab7194 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 6ab7194:	defff204 	addi	sp,sp,-56
 6ab7198:	dfc00d15 	stw	ra,52(sp)
 6ab719c:	df000c15 	stw	fp,48(sp)
 6ab71a0:	df000c04 	addi	fp,sp,48
 6ab71a4:	e13ffb15 	stw	r4,-20(fp)
 6ab71a8:	e17ffc15 	stw	r5,-16(fp)
 6ab71ac:	e1bffd15 	stw	r6,-12(fp)
 6ab71b0:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 6ab71b4:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 6ab71b8:	e0bffc17 	ldw	r2,-16(fp)
 6ab71bc:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 6ab71c0:	00003a06 	br	6ab72ac <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 6ab71c4:	e0bffb17 	ldw	r2,-20(fp)
 6ab71c8:	10800c17 	ldw	r2,48(r2)
 6ab71cc:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
 6ab71d0:	e0bffb17 	ldw	r2,-20(fp)
 6ab71d4:	10800d17 	ldw	r2,52(r2)
 6ab71d8:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
 6ab71dc:	e0fffa17 	ldw	r3,-24(fp)
 6ab71e0:	e0bff917 	ldw	r2,-28(fp)
 6ab71e4:	1880062e 	bgeu	r3,r2,6ab7200 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 6ab71e8:	e0fff917 	ldw	r3,-28(fp)
 6ab71ec:	e0bffa17 	ldw	r2,-24(fp)
 6ab71f0:	1885c83a 	sub	r2,r3,r2
 6ab71f4:	10bfffc4 	addi	r2,r2,-1
 6ab71f8:	e0bff815 	stw	r2,-32(fp)
 6ab71fc:	00000c06 	br	6ab7230 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
 6ab7200:	e0bff917 	ldw	r2,-28(fp)
 6ab7204:	1005003a 	cmpeq	r2,r2,zero
 6ab7208:	1000051e 	bne	r2,zero,6ab7220 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 6ab720c:	00820004 	movi	r2,2048
 6ab7210:	e0fffa17 	ldw	r3,-24(fp)
 6ab7214:	10c5c83a 	sub	r2,r2,r3
 6ab7218:	e0bff815 	stw	r2,-32(fp)
 6ab721c:	00000406 	br	6ab7230 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 6ab7220:	0081ffc4 	movi	r2,2047
 6ab7224:	e0fffa17 	ldw	r3,-24(fp)
 6ab7228:	10c5c83a 	sub	r2,r2,r3
 6ab722c:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
 6ab7230:	e0bff817 	ldw	r2,-32(fp)
 6ab7234:	1005003a 	cmpeq	r2,r2,zero
 6ab7238:	10001f1e 	bne	r2,zero,6ab72b8 <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
 6ab723c:	e0fffd17 	ldw	r3,-12(fp)
 6ab7240:	e0bff817 	ldw	r2,-32(fp)
 6ab7244:	1880022e 	bgeu	r3,r2,6ab7250 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
 6ab7248:	e0bffd17 	ldw	r2,-12(fp)
 6ab724c:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 6ab7250:	e0bffb17 	ldw	r2,-20(fp)
 6ab7254:	10c20e04 	addi	r3,r2,2104
 6ab7258:	e0bffa17 	ldw	r2,-24(fp)
 6ab725c:	1885883a 	add	r2,r3,r2
 6ab7260:	e0fffc17 	ldw	r3,-16(fp)
 6ab7264:	1009883a 	mov	r4,r2
 6ab7268:	180b883a 	mov	r5,r3
 6ab726c:	e1bff817 	ldw	r6,-32(fp)
 6ab7270:	6ab15980 	call	6ab1598 <memcpy>
      ptr   += n;
 6ab7274:	e0fff817 	ldw	r3,-32(fp)
 6ab7278:	e0bffc17 	ldw	r2,-16(fp)
 6ab727c:	10c5883a 	add	r2,r2,r3
 6ab7280:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
 6ab7284:	e0fffd17 	ldw	r3,-12(fp)
 6ab7288:	e0bff817 	ldw	r2,-32(fp)
 6ab728c:	1885c83a 	sub	r2,r3,r2
 6ab7290:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 6ab7294:	e0fffa17 	ldw	r3,-24(fp)
 6ab7298:	e0bff817 	ldw	r2,-32(fp)
 6ab729c:	1885883a 	add	r2,r3,r2
 6ab72a0:	10c1ffcc 	andi	r3,r2,2047
 6ab72a4:	e0bffb17 	ldw	r2,-20(fp)
 6ab72a8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 6ab72ac:	e0bffd17 	ldw	r2,-12(fp)
 6ab72b0:	10800048 	cmpgei	r2,r2,1
 6ab72b4:	103fc31e 	bne	r2,zero,6ab71c4 <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 6ab72b8:	0005303a 	rdctl	r2,status
 6ab72bc:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 6ab72c0:	e0fff517 	ldw	r3,-44(fp)
 6ab72c4:	00bfff84 	movi	r2,-2
 6ab72c8:	1884703a 	and	r2,r3,r2
 6ab72cc:	1001703a 	wrctl	status,r2
  
  return context;
 6ab72d0:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 6ab72d4:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 6ab72d8:	e0bffb17 	ldw	r2,-20(fp)
 6ab72dc:	10800817 	ldw	r2,32(r2)
 6ab72e0:	10c00094 	ori	r3,r2,2
 6ab72e4:	e0bffb17 	ldw	r2,-20(fp)
 6ab72e8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 6ab72ec:	e0bffb17 	ldw	r2,-20(fp)
 6ab72f0:	10800017 	ldw	r2,0(r2)
 6ab72f4:	11000104 	addi	r4,r2,4
 6ab72f8:	e0bffb17 	ldw	r2,-20(fp)
 6ab72fc:	10800817 	ldw	r2,32(r2)
 6ab7300:	1007883a 	mov	r3,r2
 6ab7304:	2005883a 	mov	r2,r4
 6ab7308:	10c00035 	stwio	r3,0(r2)
 6ab730c:	e0bff717 	ldw	r2,-36(fp)
 6ab7310:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 6ab7314:	e0bff417 	ldw	r2,-48(fp)
 6ab7318:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 6ab731c:	e0bffd17 	ldw	r2,-12(fp)
 6ab7320:	10800050 	cmplti	r2,r2,1
 6ab7324:	1000111e 	bne	r2,zero,6ab736c <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
 6ab7328:	e0bffe17 	ldw	r2,-8(fp)
 6ab732c:	1090000c 	andi	r2,r2,16384
 6ab7330:	1004c03a 	cmpne	r2,r2,zero
 6ab7334:	1000101e 	bne	r2,zero,6ab7378 <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 6ab7338:	e0bffb17 	ldw	r2,-20(fp)
 6ab733c:	10c00d17 	ldw	r3,52(r2)
 6ab7340:	e0bff917 	ldw	r2,-28(fp)
 6ab7344:	1880051e 	bne	r3,r2,6ab735c <altera_avalon_jtag_uart_write+0x1c8>
 6ab7348:	e0bffb17 	ldw	r2,-20(fp)
 6ab734c:	10c00917 	ldw	r3,36(r2)
 6ab7350:	e0bffb17 	ldw	r2,-20(fp)
 6ab7354:	10800117 	ldw	r2,4(r2)
 6ab7358:	18bff736 	bltu	r3,r2,6ab7338 <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
 6ab735c:	e0bffb17 	ldw	r2,-20(fp)
 6ab7360:	10c00d17 	ldw	r3,52(r2)
 6ab7364:	e0bff917 	ldw	r2,-28(fp)
 6ab7368:	18800326 	beq	r3,r2,6ab7378 <altera_avalon_jtag_uart_write+0x1e4>
        break;
    }
  }
  while (count > 0);
 6ab736c:	e0bffd17 	ldw	r2,-12(fp)
 6ab7370:	10800048 	cmpgei	r2,r2,1
 6ab7374:	103fcd1e 	bne	r2,zero,6ab72ac <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 6ab7378:	e0fffc17 	ldw	r3,-16(fp)
 6ab737c:	e0bff617 	ldw	r2,-40(fp)
 6ab7380:	18800526 	beq	r3,r2,6ab7398 <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
 6ab7384:	e0fffc17 	ldw	r3,-16(fp)
 6ab7388:	e0bff617 	ldw	r2,-40(fp)
 6ab738c:	1887c83a 	sub	r3,r3,r2
 6ab7390:	e0ffff15 	stw	r3,-4(fp)
 6ab7394:	00000906 	br	6ab73bc <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
 6ab7398:	e0bffe17 	ldw	r2,-8(fp)
 6ab739c:	1090000c 	andi	r2,r2,16384
 6ab73a0:	1005003a 	cmpeq	r2,r2,zero
 6ab73a4:	1000031e 	bne	r2,zero,6ab73b4 <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
 6ab73a8:	00bffd44 	movi	r2,-11
 6ab73ac:	e0bfff15 	stw	r2,-4(fp)
 6ab73b0:	00000206 	br	6ab73bc <altera_avalon_jtag_uart_write+0x228>
  else
    return -EIO; /* Host not connected */
 6ab73b4:	00bffec4 	movi	r2,-5
 6ab73b8:	e0bfff15 	stw	r2,-4(fp)
 6ab73bc:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab73c0:	e037883a 	mov	sp,fp
 6ab73c4:	dfc00117 	ldw	ra,4(sp)
 6ab73c8:	df000017 	ldw	fp,0(sp)
 6ab73cc:	dec00204 	addi	sp,sp,8
 6ab73d0:	f800283a 	ret

06ab73d4 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 6ab73d4:	defffa04 	addi	sp,sp,-24
 6ab73d8:	dfc00515 	stw	ra,20(sp)
 6ab73dc:	df000415 	stw	fp,16(sp)
 6ab73e0:	df000404 	addi	fp,sp,16
 6ab73e4:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 6ab73e8:	e0bfff17 	ldw	r2,-4(fp)
 6ab73ec:	10000035 	stwio	zero,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 6ab73f0:	e0bfff17 	ldw	r2,-4(fp)
 6ab73f4:	10800104 	addi	r2,r2,4
 6ab73f8:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 6ab73fc:	0005303a 	rdctl	r2,status
 6ab7400:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 6ab7404:	e0fffd17 	ldw	r3,-12(fp)
 6ab7408:	00bfff84 	movi	r2,-2
 6ab740c:	1884703a 	and	r2,r3,r2
 6ab7410:	1001703a 	wrctl	status,r2
  
  return context;
 6ab7414:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 6ab7418:	e0bffe15 	stw	r2,-8(fp)
  alt_tick ();
 6ab741c:	6ab858c0 	call	6ab858c <alt_tick>
 6ab7420:	e0bffe17 	ldw	r2,-8(fp)
 6ab7424:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 6ab7428:	e0bffc17 	ldw	r2,-16(fp)
 6ab742c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 6ab7430:	e037883a 	mov	sp,fp
 6ab7434:	dfc00117 	ldw	ra,4(sp)
 6ab7438:	df000017 	ldw	fp,0(sp)
 6ab743c:	dec00204 	addi	sp,sp,8
 6ab7440:	f800283a 	ret

06ab7444 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 6ab7444:	defff804 	addi	sp,sp,-32
 6ab7448:	dfc00715 	stw	ra,28(sp)
 6ab744c:	df000615 	stw	fp,24(sp)
 6ab7450:	df000604 	addi	fp,sp,24
 6ab7454:	e13ffc15 	stw	r4,-16(fp)
 6ab7458:	e17ffd15 	stw	r5,-12(fp)
 6ab745c:	e1bffe15 	stw	r6,-8(fp)
 6ab7460:	e1ffff15 	stw	r7,-4(fp)
 6ab7464:	e0bfff17 	ldw	r2,-4(fp)
 6ab7468:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 6ab746c:	0081ab34 	movhi	r2,1708
 6ab7470:	10b09004 	addi	r2,r2,-15808
 6ab7474:	10800017 	ldw	r2,0(r2)
 6ab7478:	1004c03a 	cmpne	r2,r2,zero
 6ab747c:	1000041e 	bne	r2,zero,6ab7490 <alt_avalon_timer_sc_init+0x4c>
  {
    _alt_tick_rate = nticks;
 6ab7480:	00c1ab34 	movhi	r3,1708
 6ab7484:	18f09004 	addi	r3,r3,-15808
 6ab7488:	e0bffb17 	ldw	r2,-20(fp)
 6ab748c:	18800015 	stw	r2,0(r3)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 6ab7490:	e0bffc17 	ldw	r2,-16(fp)
 6ab7494:	10800104 	addi	r2,r2,4
 6ab7498:	1007883a 	mov	r3,r2
 6ab749c:	008001c4 	movi	r2,7
 6ab74a0:	18800035 	stwio	r2,0(r3)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 6ab74a4:	d8000015 	stw	zero,0(sp)
 6ab74a8:	e13ffd17 	ldw	r4,-12(fp)
 6ab74ac:	e17ffe17 	ldw	r5,-8(fp)
 6ab74b0:	0181aaf4 	movhi	r6,1707
 6ab74b4:	319cf504 	addi	r6,r6,29652
 6ab74b8:	e1fffc17 	ldw	r7,-16(fp)
 6ab74bc:	6ab80ec0 	call	6ab80ec <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 6ab74c0:	e037883a 	mov	sp,fp
 6ab74c4:	dfc00117 	ldw	ra,4(sp)
 6ab74c8:	df000017 	ldw	fp,0(sp)
 6ab74cc:	dec00204 	addi	sp,sp,8
 6ab74d0:	f800283a 	ret

06ab74d4 <alt_hostfs_open>:
* alt_hostfs_open
*
* If we can't find anything return -1
*/
int alt_hostfs_open(alt_fd* fd, const char * name, int flags, int mode)
{
 6ab74d4:	deffee04 	addi	sp,sp,-72
 6ab74d8:	df001115 	stw	fp,68(sp)
 6ab74dc:	df001104 	addi	fp,sp,68
 6ab74e0:	e13ffc15 	stw	r4,-16(fp)
 6ab74e4:	e17ffd15 	stw	r5,-12(fp)
 6ab74e8:	e1bffe15 	stw	r6,-8(fp)
 6ab74ec:	e1ffff15 	stw	r7,-4(fp)
  static const struct HOSTCALL_INFO hcinfo = { 0x0103, "open" };

  alt_hostfs_dev* dev= (alt_hostfs_dev*)fd->dev;
 6ab74f0:	e0bffc17 	ldw	r2,-16(fp)
 6ab74f4:	10800017 	ldw	r2,0(r2)
 6ab74f8:	e0bffb15 	stw	r2,-20(fp)
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
 6ab74fc:	e0bffb17 	ldw	r2,-20(fp)
 6ab7500:	10800217 	ldw	r2,8(r2)
 6ab7504:	e0bff115 	stw	r2,-60(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
 6ab7508:	e0bff117 	ldw	r2,-60(fp)
 6ab750c:	10bfffc4 	addi	r2,r2,-1
 6ab7510:	e0bff215 	stw	r2,-56(fp)

  while (*++ptr != 0)
 6ab7514:	e0bff217 	ldw	r2,-56(fp)
 6ab7518:	10800044 	addi	r2,r2,1
 6ab751c:	e0bff215 	stw	r2,-56(fp)
 6ab7520:	e0bff217 	ldw	r2,-56(fp)
 6ab7524:	10800003 	ldbu	r2,0(r2)
 6ab7528:	10803fcc 	andi	r2,r2,255
 6ab752c:	1080201c 	xori	r2,r2,128
 6ab7530:	10bfe004 	addi	r2,r2,-128
 6ab7534:	1004c03a 	cmpne	r2,r2,zero
 6ab7538:	103ff61e 	bne	r2,zero,6ab7514 <alt_hostfs_open+0x40>
    ;

  return ptr - string;
 6ab753c:	e0fff217 	ldw	r3,-56(fp)
 6ab7540:	e0bff117 	ldw	r2,-60(fp)
 6ab7544:	1885c83a 	sub	r2,r3,r2
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
 6ab7548:	1007883a 	mov	r3,r2
 6ab754c:	e0bffd17 	ldw	r2,-12(fp)
 6ab7550:	1885883a 	add	r2,r3,r2
 6ab7554:	10800044 	addi	r2,r2,1
 6ab7558:	e0bffd15 	stw	r2,-12(fp)

  r3 = (int)&hcinfo;
 6ab755c:	d0a00d04 	addi	r2,gp,-32716
 6ab7560:	e0bff715 	stw	r2,-36(fp)
  r4 = (int)name;
 6ab7564:	e0bffd17 	ldw	r2,-12(fp)
 6ab7568:	e0bff615 	stw	r2,-40(fp)
  r5 = flags;
 6ab756c:	e0bffe17 	ldw	r2,-8(fp)
 6ab7570:	e0bff515 	stw	r2,-44(fp)
  r6 = mode;
 6ab7574:	e0bfff17 	ldw	r2,-4(fp)
 6ab7578:	e0bff415 	stw	r2,-48(fp)
 6ab757c:	e0bffd17 	ldw	r2,-12(fp)
 6ab7580:	e0bfef15 	stw	r2,-68(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
 6ab7584:	e0bfef17 	ldw	r2,-68(fp)
 6ab7588:	10bfffc4 	addi	r2,r2,-1
 6ab758c:	e0bff015 	stw	r2,-64(fp)

  while (*++ptr != 0)
 6ab7590:	e0bff017 	ldw	r2,-64(fp)
 6ab7594:	10800044 	addi	r2,r2,1
 6ab7598:	e0bff015 	stw	r2,-64(fp)
 6ab759c:	e0bff017 	ldw	r2,-64(fp)
 6ab75a0:	10800003 	ldbu	r2,0(r2)
 6ab75a4:	10803fcc 	andi	r2,r2,255
 6ab75a8:	1080201c 	xori	r2,r2,128
 6ab75ac:	10bfe004 	addi	r2,r2,-128
 6ab75b0:	1004c03a 	cmpne	r2,r2,zero
 6ab75b4:	103ff61e 	bne	r2,zero,6ab7590 <alt_hostfs_open+0xbc>
    ;

  return ptr - string;
 6ab75b8:	e0fff017 	ldw	r3,-64(fp)
 6ab75bc:	e0bfef17 	ldw	r2,-68(fp)
 6ab75c0:	1885c83a 	sub	r2,r3,r2

  r3 = (int)&hcinfo;
  r4 = (int)name;
  r5 = flags;
  r6 = mode;
  r7 = inline_strlen(name);
 6ab75c4:	e0bff315 	stw	r2,-52(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6), "D07" (r7) : "memory" );
 6ab75c8:	e13ff617 	ldw	r4,-40(fp)
 6ab75cc:	e17ff517 	ldw	r5,-44(fp)
 6ab75d0:	e1bff417 	ldw	r6,-48(fp)
 6ab75d4:	e1fff317 	ldw	r7,-52(fp)
 6ab75d8:	e0fff717 	ldw	r3,-36(fp)
 6ab75dc:	003da07a 	break	1
 6ab75e0:	e0bff815 	stw	r2,-32(fp)
 6ab75e4:	e0fff715 	stw	r3,-36(fp)

  handle = (void *)r2;
 6ab75e8:	e0bff817 	ldw	r2,-32(fp)
 6ab75ec:	e0bff915 	stw	r2,-28(fp)
  error = r3;
 6ab75f0:	e0bff717 	ldw	r2,-36(fp)
 6ab75f4:	e0bffa15 	stw	r2,-24(fp)

  if (error == 0)
 6ab75f8:	e0bffa17 	ldw	r2,-24(fp)
 6ab75fc:	1004c03a 	cmpne	r2,r2,zero
 6ab7600:	1000031e 	bne	r2,zero,6ab7610 <alt_hostfs_open+0x13c>
    fd->priv = handle;
 6ab7604:	e0fff917 	ldw	r3,-28(fp)
 6ab7608:	e0bffc17 	ldw	r2,-16(fp)
 6ab760c:	10c00115 	stw	r3,4(r2)

  return -error;
 6ab7610:	e0bffa17 	ldw	r2,-24(fp)
 6ab7614:	0085c83a 	sub	r2,zero,r2
}
 6ab7618:	e037883a 	mov	sp,fp
 6ab761c:	df000017 	ldw	fp,0(sp)
 6ab7620:	dec00104 	addi	sp,sp,4
 6ab7624:	f800283a 	ret

06ab7628 <alt_hostfs_close>:
* alt_hostfs_close
*
* Read the file
*/
int alt_hostfs_close(alt_fd* fd)
{
 6ab7628:	defffb04 	addi	sp,sp,-20
 6ab762c:	df000415 	stw	fp,16(sp)
 6ab7630:	df000404 	addi	fp,sp,16
 6ab7634:	e13fff15 	stw	r4,-4(fp)
  int error;

  /* Input and output parameters for the hostcall */
  int r3, r4;

  r3 = (int)&hcinfo;
 6ab7638:	d0a01004 	addi	r2,gp,-32704
 6ab763c:	e0bffd15 	stw	r2,-12(fp)
  r4 = (int)fd->priv;
 6ab7640:	e0bfff17 	ldw	r2,-4(fp)
 6ab7644:	10800117 	ldw	r2,4(r2)
 6ab7648:	e0bffc15 	stw	r2,-16(fp)

  __asm__ volatile("break 1" : "+D03" (r3) : "D04" (r4) );
 6ab764c:	e13ffc17 	ldw	r4,-16(fp)
 6ab7650:	e0fffd17 	ldw	r3,-12(fp)
 6ab7654:	003da07a 	break	1
 6ab7658:	e0fffd15 	stw	r3,-12(fp)

  error = r3;
 6ab765c:	e0bffd17 	ldw	r2,-12(fp)
 6ab7660:	e0bffe15 	stw	r2,-8(fp)

  return -error;
 6ab7664:	e0bffe17 	ldw	r2,-8(fp)
 6ab7668:	0085c83a 	sub	r2,zero,r2
}
 6ab766c:	e037883a 	mov	sp,fp
 6ab7670:	df000017 	ldw	fp,0(sp)
 6ab7674:	dec00104 	addi	sp,sp,4
 6ab7678:	f800283a 	ret

06ab767c <alt_hostfs_read>:
* alt_hostfs_read
*
* Read the file
*/
int alt_hostfs_read(alt_fd* fd, char * ptr, int len)
{
 6ab767c:	defff404 	addi	sp,sp,-48
 6ab7680:	df000b15 	stw	fp,44(sp)
 6ab7684:	df000b04 	addi	fp,sp,44
 6ab7688:	e13ffc15 	stw	r4,-16(fp)
 6ab768c:	e17ffd15 	stw	r5,-12(fp)
 6ab7690:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
 6ab7694:	d0a01304 	addi	r2,gp,-32692
 6ab7698:	e0bff815 	stw	r2,-32(fp)
  r4 = (int)fd->priv;
 6ab769c:	e0bffc17 	ldw	r2,-16(fp)
 6ab76a0:	10800117 	ldw	r2,4(r2)
 6ab76a4:	e0bff715 	stw	r2,-36(fp)
  r5 = (int)ptr;
 6ab76a8:	e0bffd17 	ldw	r2,-12(fp)
 6ab76ac:	e0bff615 	stw	r2,-40(fp)
  r6 = len;
 6ab76b0:	e0bffe17 	ldw	r2,-8(fp)
 6ab76b4:	e0bff515 	stw	r2,-44(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
 6ab76b8:	e13ff717 	ldw	r4,-36(fp)
 6ab76bc:	e17ff617 	ldw	r5,-40(fp)
 6ab76c0:	e1bff517 	ldw	r6,-44(fp)
 6ab76c4:	e0fff817 	ldw	r3,-32(fp)
 6ab76c8:	003da07a 	break	1
 6ab76cc:	e0bff915 	stw	r2,-28(fp)
 6ab76d0:	e0fff815 	stw	r3,-32(fp)

  rc = r2;
 6ab76d4:	e0bff917 	ldw	r2,-28(fp)
 6ab76d8:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
 6ab76dc:	e0bff817 	ldw	r2,-32(fp)
 6ab76e0:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
 6ab76e4:	e0bffb17 	ldw	r2,-20(fp)
 6ab76e8:	1005003a 	cmpeq	r2,r2,zero
 6ab76ec:	1000041e 	bne	r2,zero,6ab7700 <alt_hostfs_read+0x84>
 6ab76f0:	e0bffb17 	ldw	r2,-20(fp)
 6ab76f4:	0085c83a 	sub	r2,zero,r2
 6ab76f8:	e0bfff15 	stw	r2,-4(fp)
 6ab76fc:	00000206 	br	6ab7708 <alt_hostfs_read+0x8c>
 6ab7700:	e0bffa17 	ldw	r2,-24(fp)
 6ab7704:	e0bfff15 	stw	r2,-4(fp)
 6ab7708:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab770c:	e037883a 	mov	sp,fp
 6ab7710:	df000017 	ldw	fp,0(sp)
 6ab7714:	dec00104 	addi	sp,sp,4
 6ab7718:	f800283a 	ret

06ab771c <alt_hostfs_write>:
* alt_hostfs_write
*
* Read the file
*/
int alt_hostfs_write(alt_fd* fd, const char * ptr, int len)
{
 6ab771c:	defff404 	addi	sp,sp,-48
 6ab7720:	df000b15 	stw	fp,44(sp)
 6ab7724:	df000b04 	addi	fp,sp,44
 6ab7728:	e13ffc15 	stw	r4,-16(fp)
 6ab772c:	e17ffd15 	stw	r5,-12(fp)
 6ab7730:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
 6ab7734:	d0a01604 	addi	r2,gp,-32680
 6ab7738:	e0bff815 	stw	r2,-32(fp)
  r4 = (int)fd->priv;
 6ab773c:	e0bffc17 	ldw	r2,-16(fp)
 6ab7740:	10800117 	ldw	r2,4(r2)
 6ab7744:	e0bff715 	stw	r2,-36(fp)
  r5 = (int)ptr;
 6ab7748:	e0bffd17 	ldw	r2,-12(fp)
 6ab774c:	e0bff615 	stw	r2,-40(fp)
  r6 = len;
 6ab7750:	e0bffe17 	ldw	r2,-8(fp)
 6ab7754:	e0bff515 	stw	r2,-44(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
 6ab7758:	e13ff717 	ldw	r4,-36(fp)
 6ab775c:	e17ff617 	ldw	r5,-40(fp)
 6ab7760:	e1bff517 	ldw	r6,-44(fp)
 6ab7764:	e0fff817 	ldw	r3,-32(fp)
 6ab7768:	003da07a 	break	1
 6ab776c:	e0bff915 	stw	r2,-28(fp)
 6ab7770:	e0fff815 	stw	r3,-32(fp)

  rc = r2;
 6ab7774:	e0bff917 	ldw	r2,-28(fp)
 6ab7778:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
 6ab777c:	e0bff817 	ldw	r2,-32(fp)
 6ab7780:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
 6ab7784:	e0bffb17 	ldw	r2,-20(fp)
 6ab7788:	1005003a 	cmpeq	r2,r2,zero
 6ab778c:	1000041e 	bne	r2,zero,6ab77a0 <alt_hostfs_write+0x84>
 6ab7790:	e0bffb17 	ldw	r2,-20(fp)
 6ab7794:	0085c83a 	sub	r2,zero,r2
 6ab7798:	e0bfff15 	stw	r2,-4(fp)
 6ab779c:	00000206 	br	6ab77a8 <alt_hostfs_write+0x8c>
 6ab77a0:	e0bffa17 	ldw	r2,-24(fp)
 6ab77a4:	e0bfff15 	stw	r2,-4(fp)
 6ab77a8:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab77ac:	e037883a 	mov	sp,fp
 6ab77b0:	df000017 	ldw	fp,0(sp)
 6ab77b4:	dec00104 	addi	sp,sp,4
 6ab77b8:	f800283a 	ret

06ab77bc <alt_hostfs_seek>:
* Move around within a file
*
* returns -errno for an error or the offset within the file
*/
int alt_hostfs_seek(alt_fd* fd, int ptr, int dir)
{
 6ab77bc:	defff404 	addi	sp,sp,-48
 6ab77c0:	df000b15 	stw	fp,44(sp)
 6ab77c4:	df000b04 	addi	fp,sp,44
 6ab77c8:	e13ffc15 	stw	r4,-16(fp)
 6ab77cc:	e17ffd15 	stw	r5,-12(fp)
 6ab77d0:	e1bffe15 	stw	r6,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5, r6;

  r3 = (int)&hcinfo;
 6ab77d4:	d0a01904 	addi	r2,gp,-32668
 6ab77d8:	e0bff815 	stw	r2,-32(fp)
  r4 = (int)fd->priv;
 6ab77dc:	e0bffc17 	ldw	r2,-16(fp)
 6ab77e0:	10800117 	ldw	r2,4(r2)
 6ab77e4:	e0bff715 	stw	r2,-36(fp)
  r5 = ptr;
 6ab77e8:	e0bffd17 	ldw	r2,-12(fp)
 6ab77ec:	e0bff615 	stw	r2,-40(fp)
  r6 = dir;
 6ab77f0:	e0bffe17 	ldw	r2,-8(fp)
 6ab77f4:	e0bff515 	stw	r2,-44(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5), "D06" (r6) : "memory" );
 6ab77f8:	e13ff717 	ldw	r4,-36(fp)
 6ab77fc:	e17ff617 	ldw	r5,-40(fp)
 6ab7800:	e1bff517 	ldw	r6,-44(fp)
 6ab7804:	e0fff817 	ldw	r3,-32(fp)
 6ab7808:	003da07a 	break	1
 6ab780c:	e0bff915 	stw	r2,-28(fp)
 6ab7810:	e0fff815 	stw	r3,-32(fp)

  rc = r2;
 6ab7814:	e0bff917 	ldw	r2,-28(fp)
 6ab7818:	e0bffa15 	stw	r2,-24(fp)
  error = r3;
 6ab781c:	e0bff817 	ldw	r2,-32(fp)
 6ab7820:	e0bffb15 	stw	r2,-20(fp)

  return (error == 0) ? rc : -error;
 6ab7824:	e0bffb17 	ldw	r2,-20(fp)
 6ab7828:	1005003a 	cmpeq	r2,r2,zero
 6ab782c:	1000041e 	bne	r2,zero,6ab7840 <alt_hostfs_seek+0x84>
 6ab7830:	e0bffb17 	ldw	r2,-20(fp)
 6ab7834:	0085c83a 	sub	r2,zero,r2
 6ab7838:	e0bfff15 	stw	r2,-4(fp)
 6ab783c:	00000206 	br	6ab7848 <alt_hostfs_seek+0x8c>
 6ab7840:	e0bffa17 	ldw	r2,-24(fp)
 6ab7844:	e0bfff15 	stw	r2,-4(fp)
 6ab7848:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab784c:	e037883a 	mov	sp,fp
 6ab7850:	df000017 	ldw	fp,0(sp)
 6ab7854:	dec00104 	addi	sp,sp,4
 6ab7858:	f800283a 	ret

06ab785c <alt_hostfs_fstat>:
* at the lower address.
* We need to copy the structure and byte swap it to make it match our local
* layout of struct stat.
*/
int alt_hostfs_fstat(alt_fd* fd, struct stat* st)
{
 6ab785c:	deffe404 	addi	sp,sp,-112
 6ab7860:	df001b15 	stw	fp,108(sp)
 6ab7864:	df001b04 	addi	fp,sp,108
 6ab7868:	e13ffd15 	stw	r4,-12(fp)
 6ab786c:	e17ffe15 	stw	r5,-8(fp)
  int rc;

  /* Input and output parameters for the hostcall */
  int r2, r3, r4, r5;

  r3 = (int)&hcinfo;
 6ab7870:	d0a01c04 	addi	r2,gp,-32656
 6ab7874:	e0bfe915 	stw	r2,-92(fp)
  r4 = (int)fd->priv;
 6ab7878:	e0bffd17 	ldw	r2,-12(fp)
 6ab787c:	10800117 	ldw	r2,4(r2)
 6ab7880:	e0bfe815 	stw	r2,-96(fp)
  r5 = (int)&hoststat;
 6ab7884:	e0bfed04 	addi	r2,fp,-76
 6ab7888:	e0bfe715 	stw	r2,-100(fp)

  __asm__ volatile("break 1" : "=D02" (r2), "+D03" (r3) : "D04" (r4), "D05" (r5) : "memory" );
 6ab788c:	e13fe817 	ldw	r4,-96(fp)
 6ab7890:	e17fe717 	ldw	r5,-100(fp)
 6ab7894:	e0ffe917 	ldw	r3,-92(fp)
 6ab7898:	003da07a 	break	1
 6ab789c:	e0bfea15 	stw	r2,-88(fp)
 6ab78a0:	e0ffe915 	stw	r3,-92(fp)

  rc = r2;
 6ab78a4:	e0bfea17 	ldw	r2,-88(fp)
 6ab78a8:	e0bfeb15 	stw	r2,-84(fp)
  error = r3;
 6ab78ac:	e0bfe917 	ldw	r2,-92(fp)
 6ab78b0:	e0bfec15 	stw	r2,-80(fp)

  if (error == 0)
 6ab78b4:	e0bfec17 	ldw	r2,-80(fp)
 6ab78b8:	1004c03a 	cmpne	r2,r2,zero
 6ab78bc:	1000651e 	bne	r2,zero,6ab7a54 <alt_hostfs_fstat+0x1f8>
     * no change is required.  On a little-endian processor we need to swap
     * the bytes in each word.
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
 6ab78c0:	e0bfed04 	addi	r2,fp,-76
 6ab78c4:	e0bfe615 	stw	r2,-104(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
 6ab78c8:	e0bfe617 	ldw	r2,-104(fp)
 6ab78cc:	10801004 	addi	r2,r2,64
 6ab78d0:	e0bfe515 	stw	r2,-108(fp)
    for ( ; ptr < end ; ptr++)
 6ab78d4:	00001806 	br	6ab7938 <alt_hostfs_fstat+0xdc>
      *ptr = ((*ptr & 0xFF000000) >> 24) |
 6ab78d8:	e0bfe617 	ldw	r2,-104(fp)
 6ab78dc:	10800017 	ldw	r2,0(r2)
 6ab78e0:	10bfc02c 	andhi	r2,r2,65280
 6ab78e4:	1006d63a 	srli	r3,r2,24
 6ab78e8:	e0bfe617 	ldw	r2,-104(fp)
 6ab78ec:	10800017 	ldw	r2,0(r2)
 6ab78f0:	10803fec 	andhi	r2,r2,255
 6ab78f4:	1004d23a 	srli	r2,r2,8
 6ab78f8:	1886b03a 	or	r3,r3,r2
 6ab78fc:	e0bfe617 	ldw	r2,-104(fp)
 6ab7900:	10800017 	ldw	r2,0(r2)
 6ab7904:	10bfc00c 	andi	r2,r2,65280
 6ab7908:	1004923a 	slli	r2,r2,8
 6ab790c:	1886b03a 	or	r3,r3,r2
 6ab7910:	e0bfe617 	ldw	r2,-104(fp)
 6ab7914:	10800017 	ldw	r2,0(r2)
 6ab7918:	10803fcc 	andi	r2,r2,255
 6ab791c:	1004963a 	slli	r2,r2,24
 6ab7920:	1886b03a 	or	r3,r3,r2
 6ab7924:	e0bfe617 	ldw	r2,-104(fp)
 6ab7928:	10c00015 	stw	r3,0(r2)
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
 6ab792c:	e0bfe617 	ldw	r2,-104(fp)
 6ab7930:	10800104 	addi	r2,r2,4
 6ab7934:	e0bfe615 	stw	r2,-104(fp)
 6ab7938:	e0ffe617 	ldw	r3,-104(fp)
 6ab793c:	e0bfe517 	ldw	r2,-108(fp)
 6ab7940:	18bfe536 	bltu	r3,r2,6ab78d8 <alt_hostfs_fstat+0x7c>
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
 6ab7944:	e0bffe17 	ldw	r2,-8(fp)
 6ab7948:	e0bfe615 	stw	r2,-104(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
 6ab794c:	e0bfe617 	ldw	r2,-104(fp)
 6ab7950:	10800f04 	addi	r2,r2,60
 6ab7954:	e0bfe515 	stw	r2,-108(fp)
    for ( ; ptr < end ; ptr++)
 6ab7958:	00000506 	br	6ab7970 <alt_hostfs_fstat+0x114>
      *ptr = 0;
 6ab795c:	e0bfe617 	ldw	r2,-104(fp)
 6ab7960:	10000015 	stw	zero,0(r2)
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
    for ( ; ptr < end ; ptr++)
 6ab7964:	e0bfe617 	ldw	r2,-104(fp)
 6ab7968:	10800104 	addi	r2,r2,4
 6ab796c:	e0bfe615 	stw	r2,-104(fp)
 6ab7970:	e0ffe617 	ldw	r3,-104(fp)
 6ab7974:	e0bfe517 	ldw	r2,-108(fp)
 6ab7978:	18bff836 	bltu	r3,r2,6ab795c <alt_hostfs_fstat+0x100>

    /* Copy the data provided by the host into our local copy, for data which
     * is provided as 64bit values by the host we just use the least
     * significant word.
     */
    st->st_dev     = hoststat.fst_dev;
 6ab797c:	e0bfed17 	ldw	r2,-76(fp)
 6ab7980:	1007883a 	mov	r3,r2
 6ab7984:	e0bffe17 	ldw	r2,-8(fp)
 6ab7988:	10c0000d 	sth	r3,0(r2)
    st->st_ino     = hoststat.fst_ino;
 6ab798c:	e0bfee17 	ldw	r2,-72(fp)
 6ab7990:	1007883a 	mov	r3,r2
 6ab7994:	e0bffe17 	ldw	r2,-8(fp)
 6ab7998:	10c0008d 	sth	r3,2(r2)
    st->st_mode    = hoststat.fst_mode;
 6ab799c:	e0ffef17 	ldw	r3,-68(fp)
 6ab79a0:	e0bffe17 	ldw	r2,-8(fp)
 6ab79a4:	10c00115 	stw	r3,4(r2)
    st->st_nlink   = hoststat.fst_nlink;
 6ab79a8:	e0bff017 	ldw	r2,-64(fp)
 6ab79ac:	1007883a 	mov	r3,r2
 6ab79b0:	e0bffe17 	ldw	r2,-8(fp)
 6ab79b4:	10c0020d 	sth	r3,8(r2)
    st->st_uid     = hoststat.fst_uid;
 6ab79b8:	e0bff117 	ldw	r2,-60(fp)
 6ab79bc:	1007883a 	mov	r3,r2
 6ab79c0:	e0bffe17 	ldw	r2,-8(fp)
 6ab79c4:	10c0028d 	sth	r3,10(r2)
    st->st_gid     = hoststat.fst_gid;
 6ab79c8:	e0bff217 	ldw	r2,-56(fp)
 6ab79cc:	1007883a 	mov	r3,r2
 6ab79d0:	e0bffe17 	ldw	r2,-8(fp)
 6ab79d4:	10c0030d 	sth	r3,12(r2)
    st->st_rdev    = hoststat.fst_rdev;
 6ab79d8:	e0bff317 	ldw	r2,-52(fp)
 6ab79dc:	1007883a 	mov	r3,r2
 6ab79e0:	e0bffe17 	ldw	r2,-8(fp)
 6ab79e4:	10c0038d 	sth	r3,14(r2)
    st->st_size    = hoststat.fst_size[1];
 6ab79e8:	e0bff517 	ldw	r2,-44(fp)
 6ab79ec:	1007883a 	mov	r3,r2
 6ab79f0:	e0bffe17 	ldw	r2,-8(fp)
 6ab79f4:	10c00415 	stw	r3,16(r2)

    st->st_atime   = hoststat.fst_atime;
 6ab79f8:	e0bffa17 	ldw	r2,-24(fp)
 6ab79fc:	1007883a 	mov	r3,r2
 6ab7a00:	e0bffe17 	ldw	r2,-8(fp)
 6ab7a04:	10c00515 	stw	r3,20(r2)
    st->st_mtime   = hoststat.fst_mtime;
 6ab7a08:	e0bffb17 	ldw	r2,-20(fp)
 6ab7a0c:	1007883a 	mov	r3,r2
 6ab7a10:	e0bffe17 	ldw	r2,-8(fp)
 6ab7a14:	10c00715 	stw	r3,28(r2)
    st->st_ctime   = hoststat.fst_ctime;
 6ab7a18:	e0bffc17 	ldw	r2,-16(fp)
 6ab7a1c:	1007883a 	mov	r3,r2
 6ab7a20:	e0bffe17 	ldw	r2,-8(fp)
 6ab7a24:	10c00915 	stw	r3,36(r2)

    st->st_blksize = hoststat.fst_blksize[1];
 6ab7a28:	e0bff717 	ldw	r2,-36(fp)
 6ab7a2c:	1007883a 	mov	r3,r2
 6ab7a30:	e0bffe17 	ldw	r2,-8(fp)
 6ab7a34:	10c00b15 	stw	r3,44(r2)
    st->st_blocks  = hoststat.fst_blocks[1];
 6ab7a38:	e0bff917 	ldw	r2,-28(fp)
 6ab7a3c:	1007883a 	mov	r3,r2
 6ab7a40:	e0bffe17 	ldw	r2,-8(fp)
 6ab7a44:	10c00c15 	stw	r3,48(r2)

    return rc;
 6ab7a48:	e0bfeb17 	ldw	r2,-84(fp)
 6ab7a4c:	e0bfff15 	stw	r2,-4(fp)
 6ab7a50:	00000306 	br	6ab7a60 <alt_hostfs_fstat+0x204>
  }
  else
    return -error;
 6ab7a54:	e0bfec17 	ldw	r2,-80(fp)
 6ab7a58:	0085c83a 	sub	r2,zero,r2
 6ab7a5c:	e0bfff15 	stw	r2,-4(fp)
 6ab7a60:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab7a64:	e037883a 	mov	sp,fp
 6ab7a68:	df000017 	ldw	fp,0(sp)
 6ab7a6c:	dec00104 	addi	sp,sp,4
 6ab7a70:	f800283a 	ret

06ab7a74 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 6ab7a74:	defff404 	addi	sp,sp,-48
 6ab7a78:	df000b15 	stw	fp,44(sp)
 6ab7a7c:	df000b04 	addi	fp,sp,44
 6ab7a80:	e13ffb15 	stw	r4,-20(fp)
 6ab7a84:	e17ffc15 	stw	r5,-16(fp)
 6ab7a88:	e1bffd15 	stw	r6,-12(fp)
 6ab7a8c:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 6ab7a90:	e03ff915 	stw	zero,-28(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 6ab7a94:	0081ab34 	movhi	r2,1708
 6ab7a98:	10b09004 	addi	r2,r2,-15808
 6ab7a9c:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 6ab7aa0:	1005003a 	cmpeq	r2,r2,zero
 6ab7aa4:	1000411e 	bne	r2,zero,6ab7bac <alt_alarm_start+0x138>
  {
    if (alarm)
 6ab7aa8:	e0bffb17 	ldw	r2,-20(fp)
 6ab7aac:	1005003a 	cmpeq	r2,r2,zero
 6ab7ab0:	10003b1e 	bne	r2,zero,6ab7ba0 <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
 6ab7ab4:	e0fffb17 	ldw	r3,-20(fp)
 6ab7ab8:	e0bffd17 	ldw	r2,-12(fp)
 6ab7abc:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
 6ab7ac0:	e0fffb17 	ldw	r3,-20(fp)
 6ab7ac4:	e0bffe17 	ldw	r2,-8(fp)
 6ab7ac8:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 6ab7acc:	0005303a 	rdctl	r2,status
 6ab7ad0:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 6ab7ad4:	e0fff817 	ldw	r3,-32(fp)
 6ab7ad8:	00bfff84 	movi	r2,-2
 6ab7adc:	1884703a 	and	r2,r3,r2
 6ab7ae0:	1001703a 	wrctl	status,r2
  
  return context;
 6ab7ae4:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 6ab7ae8:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 6ab7aec:	0081ab34 	movhi	r2,1708
 6ab7af0:	10b09104 	addi	r2,r2,-15804
 6ab7af4:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 6ab7af8:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 6ab7afc:	e0fffc17 	ldw	r3,-16(fp)
 6ab7b00:	e0bff917 	ldw	r2,-28(fp)
 6ab7b04:	1885883a 	add	r2,r3,r2
 6ab7b08:	10c00044 	addi	r3,r2,1
 6ab7b0c:	e0bffb17 	ldw	r2,-20(fp)
 6ab7b10:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 6ab7b14:	e0bffb17 	ldw	r2,-20(fp)
 6ab7b18:	10c00217 	ldw	r3,8(r2)
 6ab7b1c:	e0bff917 	ldw	r2,-28(fp)
 6ab7b20:	1880042e 	bgeu	r3,r2,6ab7b34 <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
 6ab7b24:	e0fffb17 	ldw	r3,-20(fp)
 6ab7b28:	00800044 	movi	r2,1
 6ab7b2c:	18800405 	stb	r2,16(r3)
 6ab7b30:	00000206 	br	6ab7b3c <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
 6ab7b34:	e0bffb17 	ldw	r2,-20(fp)
 6ab7b38:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 6ab7b3c:	e0fffb17 	ldw	r3,-20(fp)
 6ab7b40:	0081ab34 	movhi	r2,1708
 6ab7b44:	10a9d004 	addi	r2,r2,-22720
 6ab7b48:	e0bff615 	stw	r2,-40(fp)
 6ab7b4c:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 6ab7b50:	e0fff717 	ldw	r3,-36(fp)
 6ab7b54:	e0bff617 	ldw	r2,-40(fp)
 6ab7b58:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
 6ab7b5c:	e0bff617 	ldw	r2,-40(fp)
 6ab7b60:	10c00017 	ldw	r3,0(r2)
 6ab7b64:	e0bff717 	ldw	r2,-36(fp)
 6ab7b68:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 6ab7b6c:	e0bff617 	ldw	r2,-40(fp)
 6ab7b70:	10c00017 	ldw	r3,0(r2)
 6ab7b74:	e0bff717 	ldw	r2,-36(fp)
 6ab7b78:	18800115 	stw	r2,4(r3)
  list->next           = entry;
 6ab7b7c:	e0fff617 	ldw	r3,-40(fp)
 6ab7b80:	e0bff717 	ldw	r2,-36(fp)
 6ab7b84:	18800015 	stw	r2,0(r3)
 6ab7b88:	e0bffa17 	ldw	r2,-24(fp)
 6ab7b8c:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 6ab7b90:	e0bff517 	ldw	r2,-44(fp)
 6ab7b94:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 6ab7b98:	e03fff15 	stw	zero,-4(fp)
 6ab7b9c:	00000506 	br	6ab7bb4 <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
 6ab7ba0:	00bffa84 	movi	r2,-22
 6ab7ba4:	e0bfff15 	stw	r2,-4(fp)
 6ab7ba8:	00000206 	br	6ab7bb4 <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
 6ab7bac:	00bfde84 	movi	r2,-134
 6ab7bb0:	e0bfff15 	stw	r2,-4(fp)
 6ab7bb4:	e0bfff17 	ldw	r2,-4(fp)
  }
}
 6ab7bb8:	e037883a 	mov	sp,fp
 6ab7bbc:	df000017 	ldw	fp,0(sp)
 6ab7bc0:	dec00104 	addi	sp,sp,4
 6ab7bc4:	f800283a 	ret

06ab7bc8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 6ab7bc8:	deffff04 	addi	sp,sp,-4
 6ab7bcc:	df000015 	stw	fp,0(sp)
 6ab7bd0:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 6ab7bd4:	e037883a 	mov	sp,fp
 6ab7bd8:	df000017 	ldw	fp,0(sp)
 6ab7bdc:	dec00104 	addi	sp,sp,4
 6ab7be0:	f800283a 	ret

06ab7be4 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 6ab7be4:	defff904 	addi	sp,sp,-28
 6ab7be8:	dfc00615 	stw	ra,24(sp)
 6ab7bec:	df000515 	stw	fp,20(sp)
 6ab7bf0:	df000504 	addi	fp,sp,20
 6ab7bf4:	e13ffd15 	stw	r4,-12(fp)
 6ab7bf8:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 6ab7bfc:	e0bffd17 	ldw	r2,-12(fp)
 6ab7c00:	1005003a 	cmpeq	r2,r2,zero
 6ab7c04:	1000041e 	bne	r2,zero,6ab7c18 <alt_dev_llist_insert+0x34>
 6ab7c08:	e0bffd17 	ldw	r2,-12(fp)
 6ab7c0c:	10800217 	ldw	r2,8(r2)
 6ab7c10:	1004c03a 	cmpne	r2,r2,zero
 6ab7c14:	1000071e 	bne	r2,zero,6ab7c34 <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
 6ab7c18:	6ab7c980 	call	6ab7c98 <alt_get_errno>
 6ab7c1c:	1007883a 	mov	r3,r2
 6ab7c20:	00800584 	movi	r2,22
 6ab7c24:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 6ab7c28:	00bffa84 	movi	r2,-22
 6ab7c2c:	e0bfff15 	stw	r2,-4(fp)
 6ab7c30:	00001306 	br	6ab7c80 <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 6ab7c34:	e0fffd17 	ldw	r3,-12(fp)
 6ab7c38:	e0bffe17 	ldw	r2,-8(fp)
 6ab7c3c:	e0bffb15 	stw	r2,-20(fp)
 6ab7c40:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 6ab7c44:	e0fffc17 	ldw	r3,-16(fp)
 6ab7c48:	e0bffb17 	ldw	r2,-20(fp)
 6ab7c4c:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
 6ab7c50:	e0bffb17 	ldw	r2,-20(fp)
 6ab7c54:	10c00017 	ldw	r3,0(r2)
 6ab7c58:	e0bffc17 	ldw	r2,-16(fp)
 6ab7c5c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 6ab7c60:	e0bffb17 	ldw	r2,-20(fp)
 6ab7c64:	10c00017 	ldw	r3,0(r2)
 6ab7c68:	e0bffc17 	ldw	r2,-16(fp)
 6ab7c6c:	18800115 	stw	r2,4(r3)
  list->next           = entry;
 6ab7c70:	e0fffb17 	ldw	r3,-20(fp)
 6ab7c74:	e0bffc17 	ldw	r2,-16(fp)
 6ab7c78:	18800015 	stw	r2,0(r3)

  return 0;  
 6ab7c7c:	e03fff15 	stw	zero,-4(fp)
 6ab7c80:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab7c84:	e037883a 	mov	sp,fp
 6ab7c88:	dfc00117 	ldw	ra,4(sp)
 6ab7c8c:	df000017 	ldw	fp,0(sp)
 6ab7c90:	dec00204 	addi	sp,sp,8
 6ab7c94:	f800283a 	ret

06ab7c98 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 6ab7c98:	defffd04 	addi	sp,sp,-12
 6ab7c9c:	dfc00215 	stw	ra,8(sp)
 6ab7ca0:	df000115 	stw	fp,4(sp)
 6ab7ca4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
 6ab7ca8:	0081ab34 	movhi	r2,1708
 6ab7cac:	10a9bb04 	addi	r2,r2,-22804
 6ab7cb0:	10800017 	ldw	r2,0(r2)
 6ab7cb4:	1005003a 	cmpeq	r2,r2,zero
 6ab7cb8:	1000061e 	bne	r2,zero,6ab7cd4 <alt_get_errno+0x3c>
 6ab7cbc:	0081ab34 	movhi	r2,1708
 6ab7cc0:	10a9bb04 	addi	r2,r2,-22804
 6ab7cc4:	10800017 	ldw	r2,0(r2)
 6ab7cc8:	103ee83a 	callr	r2
 6ab7ccc:	e0bfff15 	stw	r2,-4(fp)
 6ab7cd0:	00000306 	br	6ab7ce0 <alt_get_errno+0x48>
 6ab7cd4:	0081ab34 	movhi	r2,1708
 6ab7cd8:	10b08504 	addi	r2,r2,-15852
 6ab7cdc:	e0bfff15 	stw	r2,-4(fp)
 6ab7ce0:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab7ce4:	e037883a 	mov	sp,fp
 6ab7ce8:	dfc00117 	ldw	ra,4(sp)
 6ab7cec:	df000017 	ldw	fp,0(sp)
 6ab7cf0:	dec00204 	addi	sp,sp,8
 6ab7cf4:	f800283a 	ret

06ab7cf8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 6ab7cf8:	defffd04 	addi	sp,sp,-12
 6ab7cfc:	dfc00215 	stw	ra,8(sp)
 6ab7d00:	df000115 	stw	fp,4(sp)
 6ab7d04:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 6ab7d08:	00bfff04 	movi	r2,-4
 6ab7d0c:	00c1ab34 	movhi	r3,1708
 6ab7d10:	18e24204 	addi	r3,r3,-30456
 6ab7d14:	1885883a 	add	r2,r3,r2
 6ab7d18:	e0bfff15 	stw	r2,-4(fp)
 6ab7d1c:	00000606 	br	6ab7d38 <_do_ctors+0x40>
        (*ctor) (); 
 6ab7d20:	e0bfff17 	ldw	r2,-4(fp)
 6ab7d24:	10800017 	ldw	r2,0(r2)
 6ab7d28:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 6ab7d2c:	e0bfff17 	ldw	r2,-4(fp)
 6ab7d30:	10bfff04 	addi	r2,r2,-4
 6ab7d34:	e0bfff15 	stw	r2,-4(fp)
 6ab7d38:	e0ffff17 	ldw	r3,-4(fp)
 6ab7d3c:	0081ab34 	movhi	r2,1708
 6ab7d40:	10a24104 	addi	r2,r2,-30460
 6ab7d44:	18bff62e 	bgeu	r3,r2,6ab7d20 <_do_ctors+0x28>
        (*ctor) (); 
}
 6ab7d48:	e037883a 	mov	sp,fp
 6ab7d4c:	dfc00117 	ldw	ra,4(sp)
 6ab7d50:	df000017 	ldw	fp,0(sp)
 6ab7d54:	dec00204 	addi	sp,sp,8
 6ab7d58:	f800283a 	ret

06ab7d5c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 6ab7d5c:	defffd04 	addi	sp,sp,-12
 6ab7d60:	dfc00215 	stw	ra,8(sp)
 6ab7d64:	df000115 	stw	fp,4(sp)
 6ab7d68:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 6ab7d6c:	00bfff04 	movi	r2,-4
 6ab7d70:	00c1ab34 	movhi	r3,1708
 6ab7d74:	18e24204 	addi	r3,r3,-30456
 6ab7d78:	1885883a 	add	r2,r3,r2
 6ab7d7c:	e0bfff15 	stw	r2,-4(fp)
 6ab7d80:	00000606 	br	6ab7d9c <_do_dtors+0x40>
        (*dtor) (); 
 6ab7d84:	e0bfff17 	ldw	r2,-4(fp)
 6ab7d88:	10800017 	ldw	r2,0(r2)
 6ab7d8c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 6ab7d90:	e0bfff17 	ldw	r2,-4(fp)
 6ab7d94:	10bfff04 	addi	r2,r2,-4
 6ab7d98:	e0bfff15 	stw	r2,-4(fp)
 6ab7d9c:	e0ffff17 	ldw	r3,-4(fp)
 6ab7da0:	0081ab34 	movhi	r2,1708
 6ab7da4:	10a24204 	addi	r2,r2,-30456
 6ab7da8:	18bff62e 	bgeu	r3,r2,6ab7d84 <_do_dtors+0x28>
        (*dtor) (); 
}
 6ab7dac:	e037883a 	mov	sp,fp
 6ab7db0:	dfc00117 	ldw	ra,4(sp)
 6ab7db4:	df000017 	ldw	fp,0(sp)
 6ab7db8:	dec00204 	addi	sp,sp,8
 6ab7dbc:	f800283a 	ret

06ab7dc0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 6ab7dc0:	defff904 	addi	sp,sp,-28
 6ab7dc4:	dfc00615 	stw	ra,24(sp)
 6ab7dc8:	df000515 	stw	fp,20(sp)
 6ab7dcc:	df000504 	addi	fp,sp,20
 6ab7dd0:	e13ffd15 	stw	r4,-12(fp)
 6ab7dd4:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
 6ab7dd8:	e0bffe17 	ldw	r2,-8(fp)
 6ab7ddc:	10800017 	ldw	r2,0(r2)
 6ab7de0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 6ab7de4:	e13ffd17 	ldw	r4,-12(fp)
 6ab7de8:	6ab2ea40 	call	6ab2ea4 <strlen>
 6ab7dec:	10800044 	addi	r2,r2,1
 6ab7df0:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 6ab7df4:	00000d06 	br	6ab7e2c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 6ab7df8:	e0bffc17 	ldw	r2,-16(fp)
 6ab7dfc:	11000217 	ldw	r4,8(r2)
 6ab7e00:	e1bffb17 	ldw	r6,-20(fp)
 6ab7e04:	e17ffd17 	ldw	r5,-12(fp)
 6ab7e08:	6ab875c0 	call	6ab875c <memcmp>
 6ab7e0c:	1004c03a 	cmpne	r2,r2,zero
 6ab7e10:	1000031e 	bne	r2,zero,6ab7e20 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 6ab7e14:	e0bffc17 	ldw	r2,-16(fp)
 6ab7e18:	e0bfff15 	stw	r2,-4(fp)
 6ab7e1c:	00000706 	br	6ab7e3c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 6ab7e20:	e0bffc17 	ldw	r2,-16(fp)
 6ab7e24:	10800017 	ldw	r2,0(r2)
 6ab7e28:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 6ab7e2c:	e0fffe17 	ldw	r3,-8(fp)
 6ab7e30:	e0bffc17 	ldw	r2,-16(fp)
 6ab7e34:	10fff01e 	bne	r2,r3,6ab7df8 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 6ab7e38:	e03fff15 	stw	zero,-4(fp)
 6ab7e3c:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab7e40:	e037883a 	mov	sp,fp
 6ab7e44:	dfc00117 	ldw	ra,4(sp)
 6ab7e48:	df000017 	ldw	fp,0(sp)
 6ab7e4c:	dec00204 	addi	sp,sp,8
 6ab7e50:	f800283a 	ret

06ab7e54 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 6ab7e54:	defffa04 	addi	sp,sp,-24
 6ab7e58:	dfc00515 	stw	ra,20(sp)
 6ab7e5c:	df000415 	stw	fp,16(sp)
 6ab7e60:	df000404 	addi	fp,sp,16
 6ab7e64:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 6ab7e68:	0081ab34 	movhi	r2,1708
 6ab7e6c:	10a9b604 	addi	r2,r2,-22824
 6ab7e70:	10800017 	ldw	r2,0(r2)
 6ab7e74:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 6ab7e78:	00003306 	br	6ab7f48 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
 6ab7e7c:	e0bffd17 	ldw	r2,-12(fp)
 6ab7e80:	11000217 	ldw	r4,8(r2)
 6ab7e84:	6ab2ea40 	call	6ab2ea4 <strlen>
 6ab7e88:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
 6ab7e8c:	e0bffd17 	ldw	r2,-12(fp)
 6ab7e90:	10c00217 	ldw	r3,8(r2)
 6ab7e94:	e0bffc17 	ldw	r2,-16(fp)
 6ab7e98:	1885883a 	add	r2,r3,r2
 6ab7e9c:	10bfffc4 	addi	r2,r2,-1
 6ab7ea0:	10800003 	ldbu	r2,0(r2)
 6ab7ea4:	10803fcc 	andi	r2,r2,255
 6ab7ea8:	1080201c 	xori	r2,r2,128
 6ab7eac:	10bfe004 	addi	r2,r2,-128
 6ab7eb0:	10800bd8 	cmpnei	r2,r2,47
 6ab7eb4:	1000031e 	bne	r2,zero,6ab7ec4 <alt_find_file+0x70>
    {
      len -= 1;
 6ab7eb8:	e0bffc17 	ldw	r2,-16(fp)
 6ab7ebc:	10bfffc4 	addi	r2,r2,-1
 6ab7ec0:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 6ab7ec4:	e0bffc17 	ldw	r2,-16(fp)
 6ab7ec8:	1007883a 	mov	r3,r2
 6ab7ecc:	e0bffe17 	ldw	r2,-8(fp)
 6ab7ed0:	1885883a 	add	r2,r3,r2
 6ab7ed4:	10800003 	ldbu	r2,0(r2)
 6ab7ed8:	10803fcc 	andi	r2,r2,255
 6ab7edc:	1080201c 	xori	r2,r2,128
 6ab7ee0:	10bfe004 	addi	r2,r2,-128
 6ab7ee4:	10800be0 	cmpeqi	r2,r2,47
 6ab7ee8:	10000a1e 	bne	r2,zero,6ab7f14 <alt_find_file+0xc0>
 6ab7eec:	e0bffc17 	ldw	r2,-16(fp)
 6ab7ef0:	1007883a 	mov	r3,r2
 6ab7ef4:	e0bffe17 	ldw	r2,-8(fp)
 6ab7ef8:	1885883a 	add	r2,r3,r2
 6ab7efc:	10800003 	ldbu	r2,0(r2)
 6ab7f00:	10803fcc 	andi	r2,r2,255
 6ab7f04:	1080201c 	xori	r2,r2,128
 6ab7f08:	10bfe004 	addi	r2,r2,-128
 6ab7f0c:	1004c03a 	cmpne	r2,r2,zero
 6ab7f10:	10000a1e 	bne	r2,zero,6ab7f3c <alt_find_file+0xe8>
 6ab7f14:	e0bffd17 	ldw	r2,-12(fp)
 6ab7f18:	11000217 	ldw	r4,8(r2)
 6ab7f1c:	e1bffc17 	ldw	r6,-16(fp)
 6ab7f20:	e17ffe17 	ldw	r5,-8(fp)
 6ab7f24:	6ab875c0 	call	6ab875c <memcmp>
 6ab7f28:	1004c03a 	cmpne	r2,r2,zero
 6ab7f2c:	1000031e 	bne	r2,zero,6ab7f3c <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 6ab7f30:	e0bffd17 	ldw	r2,-12(fp)
 6ab7f34:	e0bfff15 	stw	r2,-4(fp)
 6ab7f38:	00000806 	br	6ab7f5c <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
 6ab7f3c:	e0bffd17 	ldw	r2,-12(fp)
 6ab7f40:	10800017 	ldw	r2,0(r2)
 6ab7f44:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 6ab7f48:	00c1ab34 	movhi	r3,1708
 6ab7f4c:	18e9b604 	addi	r3,r3,-22824
 6ab7f50:	e0bffd17 	ldw	r2,-12(fp)
 6ab7f54:	10ffc91e 	bne	r2,r3,6ab7e7c <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 6ab7f58:	e03fff15 	stw	zero,-4(fp)
 6ab7f5c:	e0bfff17 	ldw	r2,-4(fp)
}
 6ab7f60:	e037883a 	mov	sp,fp
 6ab7f64:	dfc00117 	ldw	ra,4(sp)
 6ab7f68:	df000017 	ldw	fp,0(sp)
 6ab7f6c:	dec00204 	addi	sp,sp,8
 6ab7f70:	f800283a 	ret

06ab7f74 <alt_fs_reg>:
 * A return value of zero indicates success. A negative return value indicates
 * failure. 
 */
 
int alt_fs_reg (alt_dev* dev)
{
 6ab7f74:	defffb04 	addi	sp,sp,-20
 6ab7f78:	df000415 	stw	fp,16(sp)
 6ab7f7c:	df000404 	addi	fp,sp,16
 6ab7f80:	e13ffe15 	stw	r4,-8(fp)
  /*
   * check that the device has a name.
   */

  if (!dev->name)
 6ab7f84:	e0bffe17 	ldw	r2,-8(fp)
 6ab7f88:	10800217 	ldw	r2,8(r2)
 6ab7f8c:	1004c03a 	cmpne	r2,r2,zero
 6ab7f90:	1000031e 	bne	r2,zero,6ab7fa0 <alt_fs_reg+0x2c>
  {
    return -ENODEV;
 6ab7f94:	00bffb44 	movi	r2,-19
 6ab7f98:	e0bfff15 	stw	r2,-4(fp)
 6ab7f9c:	00001406 	br	6ab7ff0 <alt_fs_reg+0x7c>
  
  /*
   * register the file system.
   */

  alt_llist_insert(&alt_fs_list, &dev->llist);
 6ab7fa0:	e0fffe17 	ldw	r3,-8(fp)
 6ab7fa4:	0081ab34 	movhi	r2,1708
 6ab7fa8:	10a9b604 	addi	r2,r2,-22824
 6ab7fac:	e0bffc15 	stw	r2,-16(fp)
 6ab7fb0:	e0fffd15 	stw	r3,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 6ab7fb4:	e0fffd17 	ldw	r3,-12(fp)
 6ab7fb8:	e0bffc17 	ldw	r2,-16(fp)
 6ab7fbc:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
 6ab7fc0:	e0bffc17 	ldw	r2,-16(fp)
 6ab7fc4:	10c00017 	ldw	r3,0(r2)
 6ab7fc8:	e0bffd17 	ldw	r2,-12(fp)
 6ab7fcc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 6ab7fd0:	e0bffc17 	ldw	r2,-16(fp)
 6ab7fd4:	10c00017 	ldw	r3,0(r2)
 6ab7fd8:	e0bffd17 	ldw	r2,-12(fp)
 6ab7fdc:	18800115 	stw	r2,4(r3)
  list->next           = entry;
 6ab7fe0:	e0fffc17 	ldw	r3,-16(fp)
 6ab7fe4:	e0bffd17 	ldw	r2,-12(fp)
 6ab7fe8:	18800015 	stw	r2,0(r3)

  return 0;
 6ab7fec:	e03fff15 	stw	zero,-4(fp)
 6ab7ff0:	e0bfff17 	ldw	r2,-4(fp)
} 
 6ab7ff4:	e037883a 	mov	sp,fp
 6ab7ff8:	df000017 	ldw	fp,0(sp)
 6ab7ffc:	dec00104 	addi	sp,sp,4
 6ab8000:	f800283a 	ret

06ab8004 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 6ab8004:	defffc04 	addi	sp,sp,-16
 6ab8008:	df000315 	stw	fp,12(sp)
 6ab800c:	df000304 	addi	fp,sp,12
 6ab8010:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 6ab8014:	00bffa04 	movi	r2,-24
 6ab8018:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 6ab801c:	e03ffe15 	stw	zero,-8(fp)
 6ab8020:	00001e06 	br	6ab809c <alt_get_fd+0x98>
  {
    if (!alt_fd_list[i].dev)
 6ab8024:	e0bffe17 	ldw	r2,-8(fp)
 6ab8028:	00c1ab34 	movhi	r3,1708
 6ab802c:	18e52e04 	addi	r3,r3,-27464
 6ab8030:	10800324 	muli	r2,r2,12
 6ab8034:	10c5883a 	add	r2,r2,r3
 6ab8038:	10800017 	ldw	r2,0(r2)
 6ab803c:	1004c03a 	cmpne	r2,r2,zero
 6ab8040:	1000131e 	bne	r2,zero,6ab8090 <alt_get_fd+0x8c>
    {
      alt_fd_list[i].dev = dev;
 6ab8044:	e0bffe17 	ldw	r2,-8(fp)
 6ab8048:	00c1ab34 	movhi	r3,1708
 6ab804c:	18e52e04 	addi	r3,r3,-27464
 6ab8050:	10800324 	muli	r2,r2,12
 6ab8054:	10c7883a 	add	r3,r2,r3
 6ab8058:	e0bfff17 	ldw	r2,-4(fp)
 6ab805c:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
 6ab8060:	0081ab34 	movhi	r2,1708
 6ab8064:	10a9ba04 	addi	r2,r2,-22808
 6ab8068:	10c00017 	ldw	r3,0(r2)
 6ab806c:	e0bffe17 	ldw	r2,-8(fp)
 6ab8070:	1880040e 	bge	r3,r2,6ab8084 <alt_get_fd+0x80>
      {
        alt_max_fd = i;
 6ab8074:	00c1ab34 	movhi	r3,1708
 6ab8078:	18e9ba04 	addi	r3,r3,-22808
 6ab807c:	e0bffe17 	ldw	r2,-8(fp)
 6ab8080:	18800015 	stw	r2,0(r3)
      }
      rc = i;
 6ab8084:	e0bffe17 	ldw	r2,-8(fp)
 6ab8088:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 6ab808c:	00000606 	br	6ab80a8 <alt_get_fd+0xa4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 6ab8090:	e0bffe17 	ldw	r2,-8(fp)
 6ab8094:	10800044 	addi	r2,r2,1
 6ab8098:	e0bffe15 	stw	r2,-8(fp)
 6ab809c:	e0bffe17 	ldw	r2,-8(fp)
 6ab80a0:	10800810 	cmplti	r2,r2,32
 6ab80a4:	103fdf1e 	bne	r2,zero,6ab8024 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 6ab80a8:	e0bffd17 	ldw	r2,-12(fp)
}
 6ab80ac:	e037883a 	mov	sp,fp
 6ab80b0:	df000017 	ldw	fp,0(sp)
 6ab80b4:	dec00104 	addi	sp,sp,4
 6ab80b8:	f800283a 	ret

06ab80bc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 6ab80bc:	defffe04 	addi	sp,sp,-8
 6ab80c0:	dfc00115 	stw	ra,4(sp)
 6ab80c4:	df000015 	stw	fp,0(sp)
 6ab80c8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 6ab80cc:	0009883a 	mov	r4,zero
 6ab80d0:	01440004 	movi	r5,4096
 6ab80d4:	6ab86b80 	call	6ab86b8 <alt_icache_flush>
#endif
}
 6ab80d8:	e037883a 	mov	sp,fp
 6ab80dc:	dfc00117 	ldw	ra,4(sp)
 6ab80e0:	df000017 	ldw	fp,0(sp)
 6ab80e4:	dec00204 	addi	sp,sp,8
 6ab80e8:	f800283a 	ret

06ab80ec <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 6ab80ec:	defff904 	addi	sp,sp,-28
 6ab80f0:	dfc00615 	stw	ra,24(sp)
 6ab80f4:	df000515 	stw	fp,20(sp)
 6ab80f8:	df000504 	addi	fp,sp,20
 6ab80fc:	e13ffc15 	stw	r4,-16(fp)
 6ab8100:	e17ffd15 	stw	r5,-12(fp)
 6ab8104:	e1bffe15 	stw	r6,-8(fp)
 6ab8108:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 6ab810c:	e0800217 	ldw	r2,8(fp)
 6ab8110:	d8800015 	stw	r2,0(sp)
 6ab8114:	e13ffc17 	ldw	r4,-16(fp)
 6ab8118:	e17ffd17 	ldw	r5,-12(fp)
 6ab811c:	e1bffe17 	ldw	r6,-8(fp)
 6ab8120:	e1ffff17 	ldw	r7,-4(fp)
 6ab8124:	6ab82c00 	call	6ab82c0 <alt_iic_isr_register>
}  
 6ab8128:	e037883a 	mov	sp,fp
 6ab812c:	dfc00117 	ldw	ra,4(sp)
 6ab8130:	df000017 	ldw	fp,0(sp)
 6ab8134:	dec00204 	addi	sp,sp,8
 6ab8138:	f800283a 	ret

06ab813c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 6ab813c:	defff904 	addi	sp,sp,-28
 6ab8140:	df000615 	stw	fp,24(sp)
 6ab8144:	df000604 	addi	fp,sp,24
 6ab8148:	e13ffe15 	stw	r4,-8(fp)
 6ab814c:	e17fff15 	stw	r5,-4(fp)
 6ab8150:	e0bfff17 	ldw	r2,-4(fp)
 6ab8154:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 6ab8158:	0005303a 	rdctl	r2,status
 6ab815c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 6ab8160:	e0fffb17 	ldw	r3,-20(fp)
 6ab8164:	00bfff84 	movi	r2,-2
 6ab8168:	1884703a 	and	r2,r3,r2
 6ab816c:	1001703a 	wrctl	status,r2
  
  return context;
 6ab8170:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 6ab8174:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
 6ab8178:	e0fffc17 	ldw	r3,-16(fp)
 6ab817c:	00800044 	movi	r2,1
 6ab8180:	10c4983a 	sll	r2,r2,r3
 6ab8184:	1007883a 	mov	r3,r2
 6ab8188:	0081ab34 	movhi	r2,1708
 6ab818c:	10b08f04 	addi	r2,r2,-15812
 6ab8190:	10800017 	ldw	r2,0(r2)
 6ab8194:	1886b03a 	or	r3,r3,r2
 6ab8198:	0081ab34 	movhi	r2,1708
 6ab819c:	10b08f04 	addi	r2,r2,-15812
 6ab81a0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 6ab81a4:	0081ab34 	movhi	r2,1708
 6ab81a8:	10b08f04 	addi	r2,r2,-15812
 6ab81ac:	10800017 	ldw	r2,0(r2)
 6ab81b0:	100170fa 	wrctl	ienable,r2
 6ab81b4:	e0bffd17 	ldw	r2,-12(fp)
 6ab81b8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 6ab81bc:	e0bffa17 	ldw	r2,-24(fp)
 6ab81c0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 6ab81c4:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
 6ab81c8:	e037883a 	mov	sp,fp
 6ab81cc:	df000017 	ldw	fp,0(sp)
 6ab81d0:	dec00104 	addi	sp,sp,4
 6ab81d4:	f800283a 	ret

06ab81d8 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 6ab81d8:	defff904 	addi	sp,sp,-28
 6ab81dc:	df000615 	stw	fp,24(sp)
 6ab81e0:	df000604 	addi	fp,sp,24
 6ab81e4:	e13ffe15 	stw	r4,-8(fp)
 6ab81e8:	e17fff15 	stw	r5,-4(fp)
 6ab81ec:	e0bfff17 	ldw	r2,-4(fp)
 6ab81f0:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 6ab81f4:	0005303a 	rdctl	r2,status
 6ab81f8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 6ab81fc:	e0fffb17 	ldw	r3,-20(fp)
 6ab8200:	00bfff84 	movi	r2,-2
 6ab8204:	1884703a 	and	r2,r3,r2
 6ab8208:	1001703a 	wrctl	status,r2
  
  return context;
 6ab820c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 6ab8210:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
 6ab8214:	e0fffc17 	ldw	r3,-16(fp)
 6ab8218:	00800044 	movi	r2,1
 6ab821c:	10c4983a 	sll	r2,r2,r3
 6ab8220:	0084303a 	nor	r2,zero,r2
 6ab8224:	1007883a 	mov	r3,r2
 6ab8228:	0081ab34 	movhi	r2,1708
 6ab822c:	10b08f04 	addi	r2,r2,-15812
 6ab8230:	10800017 	ldw	r2,0(r2)
 6ab8234:	1886703a 	and	r3,r3,r2
 6ab8238:	0081ab34 	movhi	r2,1708
 6ab823c:	10b08f04 	addi	r2,r2,-15812
 6ab8240:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 6ab8244:	0081ab34 	movhi	r2,1708
 6ab8248:	10b08f04 	addi	r2,r2,-15812
 6ab824c:	10800017 	ldw	r2,0(r2)
 6ab8250:	100170fa 	wrctl	ienable,r2
 6ab8254:	e0bffd17 	ldw	r2,-12(fp)
 6ab8258:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 6ab825c:	e0bffa17 	ldw	r2,-24(fp)
 6ab8260:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 6ab8264:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
 6ab8268:	e037883a 	mov	sp,fp
 6ab826c:	df000017 	ldw	fp,0(sp)
 6ab8270:	dec00104 	addi	sp,sp,4
 6ab8274:	f800283a 	ret

06ab8278 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 6ab8278:	defffc04 	addi	sp,sp,-16
 6ab827c:	df000315 	stw	fp,12(sp)
 6ab8280:	df000304 	addi	fp,sp,12
 6ab8284:	e13ffe15 	stw	r4,-8(fp)
 6ab8288:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 6ab828c:	000530fa 	rdctl	r2,ienable
 6ab8290:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 6ab8294:	e0ffff17 	ldw	r3,-4(fp)
 6ab8298:	00800044 	movi	r2,1
 6ab829c:	10c4983a 	sll	r2,r2,r3
 6ab82a0:	1007883a 	mov	r3,r2
 6ab82a4:	e0bffd17 	ldw	r2,-12(fp)
 6ab82a8:	1884703a 	and	r2,r3,r2
 6ab82ac:	1004c03a 	cmpne	r2,r2,zero
}
 6ab82b0:	e037883a 	mov	sp,fp
 6ab82b4:	df000017 	ldw	fp,0(sp)
 6ab82b8:	dec00104 	addi	sp,sp,4
 6ab82bc:	f800283a 	ret

06ab82c0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 6ab82c0:	defff404 	addi	sp,sp,-48
 6ab82c4:	dfc00b15 	stw	ra,44(sp)
 6ab82c8:	df000a15 	stw	fp,40(sp)
 6ab82cc:	df000a04 	addi	fp,sp,40
 6ab82d0:	e13ffb15 	stw	r4,-20(fp)
 6ab82d4:	e17ffc15 	stw	r5,-16(fp)
 6ab82d8:	e1bffd15 	stw	r6,-12(fp)
 6ab82dc:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
 6ab82e0:	00bffa84 	movi	r2,-22
 6ab82e4:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 6ab82e8:	e0bffc17 	ldw	r2,-16(fp)
 6ab82ec:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 6ab82f0:	e0bff917 	ldw	r2,-28(fp)
 6ab82f4:	10800808 	cmpgei	r2,r2,32
 6ab82f8:	1000291e 	bne	r2,zero,6ab83a0 <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 6ab82fc:	0005303a 	rdctl	r2,status
 6ab8300:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 6ab8304:	e0fff717 	ldw	r3,-36(fp)
 6ab8308:	00bfff84 	movi	r2,-2
 6ab830c:	1884703a 	and	r2,r3,r2
 6ab8310:	1001703a 	wrctl	status,r2
  
  return context;
 6ab8314:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 6ab8318:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
 6ab831c:	e0bff917 	ldw	r2,-28(fp)
 6ab8320:	00c1ab34 	movhi	r3,1708
 6ab8324:	18f09c04 	addi	r3,r3,-15760
 6ab8328:	100490fa 	slli	r2,r2,3
 6ab832c:	10c7883a 	add	r3,r2,r3
 6ab8330:	e0bffd17 	ldw	r2,-12(fp)
 6ab8334:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
 6ab8338:	e0bff917 	ldw	r2,-28(fp)
 6ab833c:	00c1ab34 	movhi	r3,1708
 6ab8340:	18f09c04 	addi	r3,r3,-15760
 6ab8344:	100490fa 	slli	r2,r2,3
 6ab8348:	10c5883a 	add	r2,r2,r3
 6ab834c:	10c00104 	addi	r3,r2,4
 6ab8350:	e0bffe17 	ldw	r2,-8(fp)
 6ab8354:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 6ab8358:	e0bffd17 	ldw	r2,-12(fp)
 6ab835c:	1005003a 	cmpeq	r2,r2,zero
 6ab8360:	1000051e 	bne	r2,zero,6ab8378 <alt_iic_isr_register+0xb8>
 6ab8364:	e17ff917 	ldw	r5,-28(fp)
 6ab8368:	e13ffb17 	ldw	r4,-20(fp)
 6ab836c:	6ab813c0 	call	6ab813c <alt_ic_irq_enable>
 6ab8370:	e0bfff15 	stw	r2,-4(fp)
 6ab8374:	00000406 	br	6ab8388 <alt_iic_isr_register+0xc8>
 6ab8378:	e17ff917 	ldw	r5,-28(fp)
 6ab837c:	e13ffb17 	ldw	r4,-20(fp)
 6ab8380:	6ab81d80 	call	6ab81d8 <alt_ic_irq_disable>
 6ab8384:	e0bfff15 	stw	r2,-4(fp)
 6ab8388:	e0bfff17 	ldw	r2,-4(fp)
 6ab838c:	e0bffa15 	stw	r2,-24(fp)
 6ab8390:	e0bff817 	ldw	r2,-32(fp)
 6ab8394:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 6ab8398:	e0bff617 	ldw	r2,-40(fp)
 6ab839c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 6ab83a0:	e0bffa17 	ldw	r2,-24(fp)
}
 6ab83a4:	e037883a 	mov	sp,fp
 6ab83a8:	dfc00117 	ldw	ra,4(sp)
 6ab83ac:	df000017 	ldw	fp,0(sp)
 6ab83b0:	dec00204 	addi	sp,sp,8
 6ab83b4:	f800283a 	ret

06ab83b8 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 6ab83b8:	defff904 	addi	sp,sp,-28
 6ab83bc:	dfc00615 	stw	ra,24(sp)
 6ab83c0:	df000515 	stw	fp,20(sp)
 6ab83c4:	df000504 	addi	fp,sp,20
 6ab83c8:	e13ffc15 	stw	r4,-16(fp)
 6ab83cc:	e17ffd15 	stw	r5,-12(fp)
 6ab83d0:	e1bffe15 	stw	r6,-8(fp)
 6ab83d4:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 6ab83d8:	e13ffd17 	ldw	r4,-12(fp)
 6ab83dc:	e17ffe17 	ldw	r5,-8(fp)
 6ab83e0:	e1bfff17 	ldw	r6,-4(fp)
 6ab83e4:	6ab5bfc0 	call	6ab5bfc <open>
 6ab83e8:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 6ab83ec:	e0bffb17 	ldw	r2,-20(fp)
 6ab83f0:	1004803a 	cmplt	r2,r2,zero
 6ab83f4:	10001c1e 	bne	r2,zero,6ab8468 <alt_open_fd+0xb0>
  {
    fd->dev      = alt_fd_list[old].dev;
 6ab83f8:	e0bffb17 	ldw	r2,-20(fp)
 6ab83fc:	00c1ab34 	movhi	r3,1708
 6ab8400:	18e52e04 	addi	r3,r3,-27464
 6ab8404:	10800324 	muli	r2,r2,12
 6ab8408:	10c5883a 	add	r2,r2,r3
 6ab840c:	10c00017 	ldw	r3,0(r2)
 6ab8410:	e0bffc17 	ldw	r2,-16(fp)
 6ab8414:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 6ab8418:	e0bffb17 	ldw	r2,-20(fp)
 6ab841c:	00c1ab34 	movhi	r3,1708
 6ab8420:	18e52e04 	addi	r3,r3,-27464
 6ab8424:	10800324 	muli	r2,r2,12
 6ab8428:	10c5883a 	add	r2,r2,r3
 6ab842c:	10800104 	addi	r2,r2,4
 6ab8430:	10c00017 	ldw	r3,0(r2)
 6ab8434:	e0bffc17 	ldw	r2,-16(fp)
 6ab8438:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 6ab843c:	e0bffb17 	ldw	r2,-20(fp)
 6ab8440:	00c1ab34 	movhi	r3,1708
 6ab8444:	18e52e04 	addi	r3,r3,-27464
 6ab8448:	10800324 	muli	r2,r2,12
 6ab844c:	10c5883a 	add	r2,r2,r3
 6ab8450:	10800204 	addi	r2,r2,8
 6ab8454:	10c00017 	ldw	r3,0(r2)
 6ab8458:	e0bffc17 	ldw	r2,-16(fp)
 6ab845c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 6ab8460:	e13ffb17 	ldw	r4,-20(fp)
 6ab8464:	6ab5f640 	call	6ab5f64 <alt_release_fd>
  }
} 
 6ab8468:	e037883a 	mov	sp,fp
 6ab846c:	dfc00117 	ldw	ra,4(sp)
 6ab8470:	df000017 	ldw	fp,0(sp)
 6ab8474:	dec00204 	addi	sp,sp,8
 6ab8478:	f800283a 	ret

06ab847c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 6ab847c:	defffb04 	addi	sp,sp,-20
 6ab8480:	dfc00415 	stw	ra,16(sp)
 6ab8484:	df000315 	stw	fp,12(sp)
 6ab8488:	df000304 	addi	fp,sp,12
 6ab848c:	e13ffd15 	stw	r4,-12(fp)
 6ab8490:	e17ffe15 	stw	r5,-8(fp)
 6ab8494:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 6ab8498:	0101ab34 	movhi	r4,1708
 6ab849c:	21253104 	addi	r4,r4,-27452
 6ab84a0:	e17ffd17 	ldw	r5,-12(fp)
 6ab84a4:	01800044 	movi	r6,1
 6ab84a8:	01c07fc4 	movi	r7,511
 6ab84ac:	6ab83b80 	call	6ab83b8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 6ab84b0:	0101ab34 	movhi	r4,1708
 6ab84b4:	21252e04 	addi	r4,r4,-27464
 6ab84b8:	e17ffe17 	ldw	r5,-8(fp)
 6ab84bc:	000d883a 	mov	r6,zero
 6ab84c0:	01c07fc4 	movi	r7,511
 6ab84c4:	6ab83b80 	call	6ab83b8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 6ab84c8:	0101ab34 	movhi	r4,1708
 6ab84cc:	21253404 	addi	r4,r4,-27440
 6ab84d0:	e17fff17 	ldw	r5,-4(fp)
 6ab84d4:	01800044 	movi	r6,1
 6ab84d8:	01c07fc4 	movi	r7,511
 6ab84dc:	6ab83b80 	call	6ab83b8 <alt_open_fd>
}  
 6ab84e0:	e037883a 	mov	sp,fp
 6ab84e4:	dfc00117 	ldw	ra,4(sp)
 6ab84e8:	df000017 	ldw	fp,0(sp)
 6ab84ec:	dec00204 	addi	sp,sp,8
 6ab84f0:	f800283a 	ret

06ab84f4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 6ab84f4:	defffa04 	addi	sp,sp,-24
 6ab84f8:	df000515 	stw	fp,20(sp)
 6ab84fc:	df000504 	addi	fp,sp,20
 6ab8500:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 6ab8504:	0005303a 	rdctl	r2,status
 6ab8508:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 6ab850c:	e0fffd17 	ldw	r3,-12(fp)
 6ab8510:	00bfff84 	movi	r2,-2
 6ab8514:	1884703a 	and	r2,r3,r2
 6ab8518:	1001703a 	wrctl	status,r2
  
  return context;
 6ab851c:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 6ab8520:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
 6ab8524:	e0bfff17 	ldw	r2,-4(fp)
 6ab8528:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 6ab852c:	e0bffc17 	ldw	r2,-16(fp)
 6ab8530:	10c00017 	ldw	r3,0(r2)
 6ab8534:	e0bffc17 	ldw	r2,-16(fp)
 6ab8538:	10800117 	ldw	r2,4(r2)
 6ab853c:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
 6ab8540:	e0bffc17 	ldw	r2,-16(fp)
 6ab8544:	10c00117 	ldw	r3,4(r2)
 6ab8548:	e0bffc17 	ldw	r2,-16(fp)
 6ab854c:	10800017 	ldw	r2,0(r2)
 6ab8550:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 6ab8554:	e0fffc17 	ldw	r3,-16(fp)
 6ab8558:	e0bffc17 	ldw	r2,-16(fp)
 6ab855c:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
 6ab8560:	e0fffc17 	ldw	r3,-16(fp)
 6ab8564:	e0bffc17 	ldw	r2,-16(fp)
 6ab8568:	18800015 	stw	r2,0(r3)
 6ab856c:	e0bffe17 	ldw	r2,-8(fp)
 6ab8570:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 6ab8574:	e0bffb17 	ldw	r2,-20(fp)
 6ab8578:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 6ab857c:	e037883a 	mov	sp,fp
 6ab8580:	df000017 	ldw	fp,0(sp)
 6ab8584:	dec00104 	addi	sp,sp,4
 6ab8588:	f800283a 	ret

06ab858c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 6ab858c:	defffb04 	addi	sp,sp,-20
 6ab8590:	dfc00415 	stw	ra,16(sp)
 6ab8594:	df000315 	stw	fp,12(sp)
 6ab8598:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 6ab859c:	d0a02017 	ldw	r2,-32640(gp)
 6ab85a0:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 6ab85a4:	d0a6e117 	ldw	r2,-25724(gp)
 6ab85a8:	10800044 	addi	r2,r2,1
 6ab85ac:	d0a6e115 	stw	r2,-25724(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 6ab85b0:	00003106 	br	6ab8678 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
 6ab85b4:	e0bffe17 	ldw	r2,-8(fp)
 6ab85b8:	10800017 	ldw	r2,0(r2)
 6ab85bc:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 6ab85c0:	e0bffe17 	ldw	r2,-8(fp)
 6ab85c4:	10800403 	ldbu	r2,16(r2)
 6ab85c8:	10803fcc 	andi	r2,r2,255
 6ab85cc:	1005003a 	cmpeq	r2,r2,zero
 6ab85d0:	1000051e 	bne	r2,zero,6ab85e8 <alt_tick+0x5c>
 6ab85d4:	d0a6e117 	ldw	r2,-25724(gp)
 6ab85d8:	1004c03a 	cmpne	r2,r2,zero
 6ab85dc:	1000021e 	bne	r2,zero,6ab85e8 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
 6ab85e0:	e0bffe17 	ldw	r2,-8(fp)
 6ab85e4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 6ab85e8:	e0bffe17 	ldw	r2,-8(fp)
 6ab85ec:	10c00217 	ldw	r3,8(r2)
 6ab85f0:	d0a6e117 	ldw	r2,-25724(gp)
 6ab85f4:	10c01e36 	bltu	r2,r3,6ab8670 <alt_tick+0xe4>
 6ab85f8:	e0bffe17 	ldw	r2,-8(fp)
 6ab85fc:	10800403 	ldbu	r2,16(r2)
 6ab8600:	10803fcc 	andi	r2,r2,255
 6ab8604:	1004c03a 	cmpne	r2,r2,zero
 6ab8608:	1000191e 	bne	r2,zero,6ab8670 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
 6ab860c:	e0bffe17 	ldw	r2,-8(fp)
 6ab8610:	10c00317 	ldw	r3,12(r2)
 6ab8614:	e0bffe17 	ldw	r2,-8(fp)
 6ab8618:	11000517 	ldw	r4,20(r2)
 6ab861c:	183ee83a 	callr	r3
 6ab8620:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 6ab8624:	e0bffd17 	ldw	r2,-12(fp)
 6ab8628:	1004c03a 	cmpne	r2,r2,zero
 6ab862c:	1000031e 	bne	r2,zero,6ab863c <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
 6ab8630:	e13ffe17 	ldw	r4,-8(fp)
 6ab8634:	6ab84f40 	call	6ab84f4 <alt_alarm_stop>
 6ab8638:	00000d06 	br	6ab8670 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
 6ab863c:	e0bffe17 	ldw	r2,-8(fp)
 6ab8640:	10c00217 	ldw	r3,8(r2)
 6ab8644:	e0bffd17 	ldw	r2,-12(fp)
 6ab8648:	1887883a 	add	r3,r3,r2
 6ab864c:	e0bffe17 	ldw	r2,-8(fp)
 6ab8650:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 6ab8654:	e0bffe17 	ldw	r2,-8(fp)
 6ab8658:	10c00217 	ldw	r3,8(r2)
 6ab865c:	d0a6e117 	ldw	r2,-25724(gp)
 6ab8660:	1880032e 	bgeu	r3,r2,6ab8670 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
 6ab8664:	e0fffe17 	ldw	r3,-8(fp)
 6ab8668:	00800044 	movi	r2,1
 6ab866c:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
 6ab8670:	e0bfff17 	ldw	r2,-4(fp)
 6ab8674:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 6ab8678:	d0e02004 	addi	r3,gp,-32640
 6ab867c:	e0bffe17 	ldw	r2,-8(fp)
 6ab8680:	10ffcc1e 	bne	r2,r3,6ab85b4 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
 6ab8684:	e037883a 	mov	sp,fp
 6ab8688:	dfc00117 	ldw	ra,4(sp)
 6ab868c:	df000017 	ldw	fp,0(sp)
 6ab8690:	dec00204 	addi	sp,sp,8
 6ab8694:	f800283a 	ret

06ab8698 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 6ab8698:	deffff04 	addi	sp,sp,-4
 6ab869c:	df000015 	stw	fp,0(sp)
 6ab86a0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 6ab86a4:	000170fa 	wrctl	ienable,zero
}
 6ab86a8:	e037883a 	mov	sp,fp
 6ab86ac:	df000017 	ldw	fp,0(sp)
 6ab86b0:	dec00104 	addi	sp,sp,4
 6ab86b4:	f800283a 	ret

06ab86b8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 6ab86b8:	defffb04 	addi	sp,sp,-20
 6ab86bc:	df000415 	stw	fp,16(sp)
 6ab86c0:	df000404 	addi	fp,sp,16
 6ab86c4:	e13ffe15 	stw	r4,-8(fp)
 6ab86c8:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 6ab86cc:	e0bfff17 	ldw	r2,-4(fp)
 6ab86d0:	10840070 	cmpltui	r2,r2,4097
 6ab86d4:	1000021e 	bne	r2,zero,6ab86e0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 6ab86d8:	00840004 	movi	r2,4096
 6ab86dc:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 6ab86e0:	e0fffe17 	ldw	r3,-8(fp)
 6ab86e4:	e0bfff17 	ldw	r2,-4(fp)
 6ab86e8:	1885883a 	add	r2,r3,r2
 6ab86ec:	e0bffc15 	stw	r2,-16(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 6ab86f0:	e0bffe17 	ldw	r2,-8(fp)
 6ab86f4:	e0bffd15 	stw	r2,-12(fp)
 6ab86f8:	00000506 	br	6ab8710 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 6ab86fc:	e0bffd17 	ldw	r2,-12(fp)
 6ab8700:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 6ab8704:	e0bffd17 	ldw	r2,-12(fp)
 6ab8708:	10800804 	addi	r2,r2,32
 6ab870c:	e0bffd15 	stw	r2,-12(fp)
 6ab8710:	e0fffd17 	ldw	r3,-12(fp)
 6ab8714:	e0bffc17 	ldw	r2,-16(fp)
 6ab8718:	18bff836 	bltu	r3,r2,6ab86fc <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 6ab871c:	e0bffe17 	ldw	r2,-8(fp)
 6ab8720:	108007cc 	andi	r2,r2,31
 6ab8724:	1005003a 	cmpeq	r2,r2,zero
 6ab8728:	1000021e 	bne	r2,zero,6ab8734 <alt_icache_flush+0x7c>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 6ab872c:	e0bffd17 	ldw	r2,-12(fp)
 6ab8730:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 6ab8734:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 6ab8738:	e037883a 	mov	sp,fp
 6ab873c:	df000017 	ldw	fp,0(sp)
 6ab8740:	dec00104 	addi	sp,sp,4
 6ab8744:	f800283a 	ret

06ab8748 <atexit>:
 6ab8748:	200b883a 	mov	r5,r4
 6ab874c:	000d883a 	mov	r6,zero
 6ab8750:	0009883a 	mov	r4,zero
 6ab8754:	000f883a 	mov	r7,zero
 6ab8758:	6ab87d01 	jmpi	6ab87d0 <__register_exitproc>

06ab875c <memcmp>:
 6ab875c:	00c000c4 	movi	r3,3
 6ab8760:	1980032e 	bgeu	r3,r6,6ab8770 <memcmp+0x14>
 6ab8764:	2144b03a 	or	r2,r4,r5
 6ab8768:	10c4703a 	and	r2,r2,r3
 6ab876c:	10000f26 	beq	r2,zero,6ab87ac <memcmp+0x50>
 6ab8770:	31ffffc4 	addi	r7,r6,-1
 6ab8774:	3000061e 	bne	r6,zero,6ab8790 <memcmp+0x34>
 6ab8778:	00000a06 	br	6ab87a4 <memcmp+0x48>
 6ab877c:	39ffffc4 	addi	r7,r7,-1
 6ab8780:	00bfffc4 	movi	r2,-1
 6ab8784:	21000044 	addi	r4,r4,1
 6ab8788:	29400044 	addi	r5,r5,1
 6ab878c:	38800526 	beq	r7,r2,6ab87a4 <memcmp+0x48>
 6ab8790:	20c00003 	ldbu	r3,0(r4)
 6ab8794:	28800003 	ldbu	r2,0(r5)
 6ab8798:	18bff826 	beq	r3,r2,6ab877c <memcmp+0x20>
 6ab879c:	1885c83a 	sub	r2,r3,r2
 6ab87a0:	f800283a 	ret
 6ab87a4:	0005883a 	mov	r2,zero
 6ab87a8:	f800283a 	ret
 6ab87ac:	180f883a 	mov	r7,r3
 6ab87b0:	20c00017 	ldw	r3,0(r4)
 6ab87b4:	28800017 	ldw	r2,0(r5)
 6ab87b8:	18bfed1e 	bne	r3,r2,6ab8770 <memcmp+0x14>
 6ab87bc:	31bfff04 	addi	r6,r6,-4
 6ab87c0:	21000104 	addi	r4,r4,4
 6ab87c4:	29400104 	addi	r5,r5,4
 6ab87c8:	39bff936 	bltu	r7,r6,6ab87b0 <memcmp+0x54>
 6ab87cc:	003fe806 	br	6ab8770 <memcmp+0x14>

06ab87d0 <__register_exitproc>:
 6ab87d0:	defffa04 	addi	sp,sp,-24
 6ab87d4:	0081ab34 	movhi	r2,1708
 6ab87d8:	10a9b104 	addi	r2,r2,-22844
 6ab87dc:	dc000015 	stw	r16,0(sp)
 6ab87e0:	14000017 	ldw	r16,0(r2)
 6ab87e4:	dd000415 	stw	r20,16(sp)
 6ab87e8:	2829883a 	mov	r20,r5
 6ab87ec:	81405217 	ldw	r5,328(r16)
 6ab87f0:	dcc00315 	stw	r19,12(sp)
 6ab87f4:	dc800215 	stw	r18,8(sp)
 6ab87f8:	dc400115 	stw	r17,4(sp)
 6ab87fc:	dfc00515 	stw	ra,20(sp)
 6ab8800:	2023883a 	mov	r17,r4
 6ab8804:	3027883a 	mov	r19,r6
 6ab8808:	3825883a 	mov	r18,r7
 6ab880c:	28002526 	beq	r5,zero,6ab88a4 <__register_exitproc+0xd4>
 6ab8810:	29000117 	ldw	r4,4(r5)
 6ab8814:	008007c4 	movi	r2,31
 6ab8818:	11002716 	blt	r2,r4,6ab88b8 <__register_exitproc+0xe8>
 6ab881c:	8800101e 	bne	r17,zero,6ab8860 <__register_exitproc+0x90>
 6ab8820:	2105883a 	add	r2,r4,r4
 6ab8824:	1085883a 	add	r2,r2,r2
 6ab8828:	20c00044 	addi	r3,r4,1
 6ab882c:	1145883a 	add	r2,r2,r5
 6ab8830:	0009883a 	mov	r4,zero
 6ab8834:	15000215 	stw	r20,8(r2)
 6ab8838:	28c00115 	stw	r3,4(r5)
 6ab883c:	2005883a 	mov	r2,r4
 6ab8840:	dfc00517 	ldw	ra,20(sp)
 6ab8844:	dd000417 	ldw	r20,16(sp)
 6ab8848:	dcc00317 	ldw	r19,12(sp)
 6ab884c:	dc800217 	ldw	r18,8(sp)
 6ab8850:	dc400117 	ldw	r17,4(sp)
 6ab8854:	dc000017 	ldw	r16,0(sp)
 6ab8858:	dec00604 	addi	sp,sp,24
 6ab885c:	f800283a 	ret
 6ab8860:	29802204 	addi	r6,r5,136
 6ab8864:	00800044 	movi	r2,1
 6ab8868:	110e983a 	sll	r7,r2,r4
 6ab886c:	30c04017 	ldw	r3,256(r6)
 6ab8870:	2105883a 	add	r2,r4,r4
 6ab8874:	1085883a 	add	r2,r2,r2
 6ab8878:	1185883a 	add	r2,r2,r6
 6ab887c:	19c6b03a 	or	r3,r3,r7
 6ab8880:	14802015 	stw	r18,128(r2)
 6ab8884:	14c00015 	stw	r19,0(r2)
 6ab8888:	00800084 	movi	r2,2
 6ab888c:	30c04015 	stw	r3,256(r6)
 6ab8890:	88bfe31e 	bne	r17,r2,6ab8820 <__register_exitproc+0x50>
 6ab8894:	30804117 	ldw	r2,260(r6)
 6ab8898:	11c4b03a 	or	r2,r2,r7
 6ab889c:	30804115 	stw	r2,260(r6)
 6ab88a0:	003fdf06 	br	6ab8820 <__register_exitproc+0x50>
 6ab88a4:	0081ab34 	movhi	r2,1708
 6ab88a8:	10b0dc04 	addi	r2,r2,-15504
 6ab88ac:	100b883a 	mov	r5,r2
 6ab88b0:	80805215 	stw	r2,328(r16)
 6ab88b4:	003fd606 	br	6ab8810 <__register_exitproc+0x40>
 6ab88b8:	00800034 	movhi	r2,0
 6ab88bc:	10800004 	addi	r2,r2,0
 6ab88c0:	1000021e 	bne	r2,zero,6ab88cc <__register_exitproc+0xfc>
 6ab88c4:	013fffc4 	movi	r4,-1
 6ab88c8:	003fdc06 	br	6ab883c <__register_exitproc+0x6c>
 6ab88cc:	01006404 	movi	r4,400
 6ab88d0:	103ee83a 	callr	r2
 6ab88d4:	1007883a 	mov	r3,r2
 6ab88d8:	103ffa26 	beq	r2,zero,6ab88c4 <__register_exitproc+0xf4>
 6ab88dc:	80805217 	ldw	r2,328(r16)
 6ab88e0:	180b883a 	mov	r5,r3
 6ab88e4:	18000115 	stw	zero,4(r3)
 6ab88e8:	18800015 	stw	r2,0(r3)
 6ab88ec:	80c05215 	stw	r3,328(r16)
 6ab88f0:	18006215 	stw	zero,392(r3)
 6ab88f4:	18006315 	stw	zero,396(r3)
 6ab88f8:	0009883a 	mov	r4,zero
 6ab88fc:	883fc826 	beq	r17,zero,6ab8820 <__register_exitproc+0x50>
 6ab8900:	003fd706 	br	6ab8860 <__register_exitproc+0x90>
 6ab8904:	06aaf3dc 	xori	gp,zero,43983
